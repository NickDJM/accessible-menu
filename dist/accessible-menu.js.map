{"version":3,"file":"accessible-menu.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js","../src/treeviewItem.js","../src/treeviewToggle.js","../src/treeview.js","../rollup.js"],"sourcesContent":["/**\r\n * Check to see if the provided elements have a specific contructor.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * This is essentially just a wrapper function around checking instanceof with\r\n * more descriptive error message to help debugging.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object}  contructor - The constructor to check for.\r\n * @param  {object}  elements   - The element(s) to check.\r\n * @return {boolean}            - The result of the check.\r\n */\r\nexport function isValidInstance(contructor, elements) {\r\n  try {\r\n    if (typeof elements !== \"object\") {\r\n      const elementsType = typeof elements;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\r\n      );\r\n    }\r\n\r\n    for (const key in elements) {\r\n      if (!(elements[key] instanceof contructor)) {\r\n        const elementType = typeof elements[key];\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check to see if the provided values are of a specific type.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * This is essentially just a wrapper function around checking typeof with\r\n * more descriptive error message to help debugging.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {string}  type   - The type to check for.\r\n * @param  {object}  values - The value(s) to check.\r\n * @return {boolean}        - The result of the check.\r\n */\r\nexport function isValidType(type, values) {\r\n  try {\r\n    if (typeof values !== \"object\") {\r\n      const valuesType = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\r\n      );\r\n    }\r\n\r\n    for (const key in values) {\r\n      const valueType = typeof values[key];\r\n\r\n      if (valueType !== type) {\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks to see if the provided values are valid CSS selectors.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object.<string>} values - The value(s) to check.\r\n * @return {boolean}                - The result of the check.\r\n */\r\nexport function isCSSSelector(values) {\r\n  try {\r\n    if (typeof values !== \"object\") {\r\n      const type = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\r\n      );\r\n    }\r\n\r\n    for (const key in values) {\r\n      try {\r\n        if (values[key] === null) {\r\n          throw new Error();\r\n        }\r\n\r\n        document.querySelector(values[key]);\r\n      } catch (error) {\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks to see if the provided value is either a string or an array of strings.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object.<string,string[]>} values - The value(s) to check.\r\n * @return {boolean}                         - The result of the check.\r\n */\r\nexport function isValidClassList(values) {\r\n  try {\r\n    if (typeof values !== \"object\" || Array.isArray(values)) {\r\n      const type = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\r\n      );\r\n    }\r\n\r\n    for (const key in values) {\r\n      const type = typeof values[key];\r\n\r\n      if (type !== \"string\") {\r\n        if (Array.isArray(values[key])) {\r\n          values[key].forEach((value) => {\r\n            if (typeof value !== \"string\") {\r\n              throw new TypeError(\r\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\r\n              );\r\n            }\r\n          });\r\n        } else {\r\n          throw new TypeError(\r\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\r\n          );\r\n        }\r\n      } else {\r\n        const obj = {};\r\n        obj[key] = values[key];\r\n\r\n        isCSSSelector(obj);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check to see if the provided values are valid focus states for a menu.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object.<string>} values - The value(s) to check.\r\n * @return {boolean}                - The result of the check.\r\n */\r\nexport function isValidState(values) {\r\n  try {\r\n    if (typeof values !== \"object\") {\r\n      const type = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\r\n      );\r\n    }\r\n\r\n    const validStates = [\"none\", \"self\", \"child\"];\r\n\r\n    for (const key in values) {\r\n      if (!validStates.includes(values[key])) {\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\r\n            \", \"\r\n          )}. \"${values[key]}\" given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check to see if the provided values are valid event types for a menu.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object.<string>} values - The value(s) to check.\r\n * @return {boolean}                - The result of the check.\r\n */\r\nexport function isValidEvent(values) {\r\n  try {\r\n    if (typeof values !== \"object\") {\r\n      const type = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\r\n      );\r\n    }\r\n\r\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\r\n\r\n    for (const key in values) {\r\n      if (!validEvents.includes(values[key])) {\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\r\n            \", \"\r\n          )}. \"${values[key]}\" given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check to see if the provided values are valid hover types for a menu.\r\n *\r\n * The values must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * Will return true is the check is successful.\r\n *\r\n * @param  {object.<string>} values - The value(s) to check.\r\n * @return {boolean}                - The result of the check.\r\n */\r\nexport function isValidHoverType(values) {\r\n  try {\r\n    if (typeof values !== \"object\") {\r\n      const type = typeof values;\r\n\r\n      throw new TypeError(\r\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\r\n      );\r\n    }\r\n\r\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\r\n\r\n    for (const key in values) {\r\n      if (!validTypes.includes(values[key])) {\r\n        throw new TypeError(\r\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\r\n            \", \"\r\n          )}. \"${values[key]}\" given.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks to see if the provided elements are using a specific tag.\r\n *\r\n * The elements must be provided inside of an object\r\n * so the variable name can be retrieved in case of errors.\r\n *\r\n * @param  {string}               tagName  - The name of the tag.\r\n * @param  {object.<HTMLElement>} elements - The element(s) to check.\r\n * @return {boolean}                       - The result of the check.\r\n */\r\nexport function isTag(tagName, elements) {\r\n  if (\r\n    isValidType(\"string\", { tagName }) &&\r\n    isValidInstance(HTMLElement, elements)\r\n  ) {\r\n    const tag = tagName.toLowerCase();\r\n    let check = true;\r\n\r\n    for (const key in elements) {\r\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\r\n    }\r\n\r\n    return check;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks to see if an event is supported by a node.\r\n *\r\n * @param  {string}      event   - The event type.\r\n * @param  {HTMLElement} element - The element to check.\r\n * @return {boolean}             - The result.\r\n */\r\nexport function isEventSupported(event, element) {\r\n  if (\r\n    isValidType(\"string\", { event }) &&\r\n    isValidInstance(HTMLElement, { element })\r\n  ) {\r\n    const eventProp = `on${event}`;\r\n\r\n    return typeof element[eventProp] !== \"undefined\";\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport { isTag, isValidType } from \"./validate.js\";\r\n\r\n/**\r\n * A link or button that controls the visibility of a {@link BaseMenu}.\r\n */\r\nclass BaseMenuToggle {\r\n  /**\r\n   * The DOM elements within the menu toggle.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {object.<HTMLElement>}\r\n   *\r\n   * @property {HTMLElement} toggle - The menu toggle.\r\n   * @property {HTMLElement} parent - The menu containing this toggle.\r\n   */\r\n  _dom = {\r\n    toggle: null,\r\n    parent: null,\r\n  };\r\n\r\n  /**\r\n   * The declared accessible-menu elements within the menu toggle.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {object.<BaseMenu>}\r\n   *\r\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\r\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\r\n   */\r\n  _elements = {\r\n    controlledMenu: null,\r\n    parentMenu: null,\r\n  };\r\n\r\n  /**\r\n   * The open state of the menu toggle.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  _open = false;\r\n\r\n  /**\r\n   * Expand event.\r\n   *\r\n   * @protected\r\n   *\r\n   * @event accessibleMenuExpand\r\n   *\r\n   * @type {CustomEvent}\r\n   *\r\n   * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\r\n   */\r\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\r\n    bubbles: true,\r\n    detail: { toggle: this },\r\n  });\r\n\r\n  /**\r\n   * Collapse event.\r\n   *\r\n   * @protected\r\n   *\r\n   * @event accessibleMenuCollapse\r\n   *\r\n   * @type {CustomEvent}\r\n   *\r\n   * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\r\n   */\r\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\r\n    bubbles: true,\r\n    detail: { toggle: this },\r\n  });\r\n\r\n  /**\r\n   * Constructs the menu toggle.\r\n   *\r\n   * @param {object}        options                     - The options for generating the menu toggle.\r\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\r\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\r\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\r\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\r\n   */\r\n  constructor({\r\n    menuToggleElement,\r\n    parentElement,\r\n    controlledMenu,\r\n    parentMenu = null,\r\n  }) {\r\n    // Set DOM elements.\r\n    this._dom.toggle = menuToggleElement;\r\n    this._dom.parent = parentElement;\r\n\r\n    // Set menu elements.\r\n    this._elements.controlledMenu = controlledMenu;\r\n    this._elements.parentMenu = parentMenu;\r\n  }\r\n\r\n  /**\r\n   * Initializes the menu toggle.\r\n   *\r\n   * Initialize does a lot of setup on the menu toggle.\r\n   *\r\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\r\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\r\n   * element is not a `<button>`, set the `role` to \"button\".\r\n   *\r\n   * The next step to the initialization is to ensure both the toggle and the\r\n   * menu it controlls have IDs.\r\n   *\r\n   * If they do not, the following steps take place:\r\n   * - Generate a random 10 character string,\r\n   * - Get the innerText of the toggle,\r\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\r\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\r\n   *\r\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\r\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\r\n   *\r\n   * Finally, the collapse method is called to make sure the submenu is closed.\r\n   */\r\n  initialize() {\r\n    // Add WAI-ARIA properties.\r\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\r\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    // If the toggle element is a button, there's no need to add a role.\r\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\r\n      this.dom.toggle.setAttribute(\"role\", \"button\");\r\n    }\r\n\r\n    // Ensure both toggle and menu have IDs.\r\n    if (\r\n      this.dom.toggle.id === \"\" ||\r\n      this.elements.controlledMenu.dom.menu.id === \"\"\r\n    ) {\r\n      const randomString = Math.random()\r\n        .toString(36)\r\n        .replace(/[^a-z]+/g, \"\")\r\n        .substr(0, 10);\r\n\r\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\r\n      let finalID = randomString;\r\n\r\n      if (\r\n        !id.replace(/\\s/g, \"\").length &&\r\n        this.dom.toggle.getAttribute(\"aria-label\")\r\n      ) {\r\n        id = this.dom.toggle\r\n          .getAttribute(\"aria-label\")\r\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\r\n      }\r\n\r\n      if (id.replace(/\\s/g, \"\").length > 0) {\r\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\r\n\r\n        if (id.startsWith(\"-\")) {\r\n          id = id.substring(1);\r\n        }\r\n\r\n        if (id.endsWith(\"-\")) {\r\n          id = id.slice(0, -1);\r\n        }\r\n\r\n        finalID = `${id}-${finalID}`;\r\n      }\r\n\r\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\r\n      this.elements.controlledMenu.dom.menu.id =\r\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\r\n    }\r\n\r\n    // Set up proper aria label and control.\r\n    this.elements.controlledMenu.dom.menu.setAttribute(\r\n      \"aria-labelledby\",\r\n      this.dom.toggle.id\r\n    );\r\n    this.dom.toggle.setAttribute(\r\n      \"aria-controls\",\r\n      this.elements.controlledMenu.dom.menu.id\r\n    );\r\n\r\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\r\n    this._collapse(false);\r\n  }\r\n\r\n  /**\r\n   * Get the DOM elements within the toggle.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {object.<HTMLElement>}\r\n   *\r\n   * @see _dom\r\n   */\r\n  get dom() {\r\n    return this._dom;\r\n  }\r\n\r\n  /**\r\n   * Get the declared accessible-menu elements within the menu toggle.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {object.<BaseMenu>}\r\n   *\r\n   * @see _elements\r\n   */\r\n  get elements() {\r\n    return this._elements;\r\n  }\r\n\r\n  /**\r\n   * Get the open state on the menu.\r\n   *\r\n   * @type {boolean}\r\n   *\r\n   * @see _open\r\n   */\r\n  get isOpen() {\r\n    return this._open;\r\n  }\r\n\r\n  set isOpen(value) {\r\n    isValidType(\"boolean\", { value });\r\n\r\n    this._open = value;\r\n  }\r\n\r\n  /**\r\n   * Expands the controlled menu.\r\n   *\r\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\r\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\r\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\r\n   * from the toggle's parent menu item and controlled menu.\r\n   *\r\n   * If `emit` is set to `true`, this will also emit a custom event\r\n   * called {@link accessibleMenuExpand}\r\n   *\r\n   * @protected\r\n   *\r\n   * @fires accessibleMenuExpand\r\n   *\r\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\r\n   */\r\n  _expand(emit = true) {\r\n    const { closeClass, openClass } = this.elements.controlledMenu;\r\n\r\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\r\n\r\n    // Add the open class\r\n    if (openClass !== \"\") {\r\n      if (typeof openClass === \"string\") {\r\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\r\n      } else {\r\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\r\n      }\r\n    }\r\n\r\n    // Remove the close class.\r\n    if (closeClass !== \"\") {\r\n      if (typeof closeClass === \"string\") {\r\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\r\n      } else {\r\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\r\n      }\r\n    }\r\n\r\n    if (emit) {\r\n      this.dom.toggle.dispatchEvent(this._expandEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses the controlled menu.\r\n   *\r\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\r\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\r\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\r\n   * from the toggle's parent menu item and controlled menu.\r\n   *\r\n   * If `emit` is set to `true`, this will also emit a custom event\r\n   * called {@link accessibleMenuCollapse}\r\n   *\r\n   * @protected\r\n   *\r\n   * @fires accessibleMenuCollapse\r\n   *\r\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\r\n   */\r\n  _collapse(emit = true) {\r\n    const { closeClass, openClass } = this.elements.controlledMenu;\r\n\r\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    // Add the close class\r\n    if (closeClass !== \"\") {\r\n      if (typeof closeClass === \"string\") {\r\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\r\n      } else {\r\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\r\n      }\r\n    }\r\n\r\n    // Remove the open class.\r\n    if (openClass !== \"\") {\r\n      if (typeof openClass === \"string\") {\r\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\r\n      } else {\r\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\r\n      }\r\n    }\r\n\r\n    if (emit) {\r\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu.\r\n   *\r\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\r\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\r\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\r\n   */\r\n  open() {\r\n    // Set proper focus state on the child.\r\n    this.elements.controlledMenu.focusState = \"self\";\r\n\r\n    // Expand the controlled menu.\r\n    this._expand();\r\n\r\n    // Set the open flag.\r\n    this.isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu without the current focus entering it.\r\n   *\r\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\r\n   * and the parent menu's focus state to \"child\",\r\n   * and calls {@link BaseMenuToggle#expand|expand}.\r\n   */\r\n  preview() {\r\n    // Set proper focus state on the parent.\r\n    if (this.elements.parentMenu) {\r\n      this.elements.parentMenu.focusState = \"self\";\r\n    }\r\n\r\n    // Expand the controlled menu.\r\n    this._expand();\r\n\r\n    // Set the open flag.\r\n    this.isOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Closes the controlled menu.\r\n   *\r\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\r\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\r\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\r\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\r\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\r\n   */\r\n  close() {\r\n    if (this.isOpen) {\r\n      // Reset controlled menu.\r\n      this.elements.controlledMenu.currentChild = 0;\r\n      this.elements.controlledMenu.blur();\r\n\r\n      // Set proper focus states on the parent.\r\n      if (this.elements.parentMenu) {\r\n        this.elements.parentMenu.focusState = \"self\";\r\n      }\r\n\r\n      // Collapse the controlled menu.\r\n      this._collapse();\r\n\r\n      // Set the open flag.\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the open state of the controlled menu between `true` and `false`.\r\n   */\r\n  toggle() {\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all sibling menus.\r\n   */\r\n  closeSiblings() {\r\n    if (this.elements.parentMenu) {\r\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\r\n        if (toggle !== this) toggle.close();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all child menus.\r\n   */\r\n  closeChildren() {\r\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\r\n      toggle.close()\r\n    );\r\n  }\r\n}\r\n\r\nexport default BaseMenuToggle;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\n/**\r\n * A basic navigation link contained inside of a {@link BaseMenu}.\r\n */\r\nclass BaseMenuItem {\r\n  /**\r\n   * The DOM elements within the menu item.\r\n   *\r\n   * @type {object.<HTMLElement>}\r\n   *\r\n   * @protected\r\n   *\r\n   * @property {HTMLElement} item - The menu item.\r\n   * @property {HTMLElement} link - The menu item's link.\r\n   */\r\n  _dom = {\r\n    item: null,\r\n    link: null,\r\n  };\r\n\r\n  /**\r\n   * The declared accessible-menu elements within the menu item.\r\n   *\r\n   * @type {object.<BaseMenu,BaseMenuToggle>}\r\n   *\r\n   * @protected\r\n   *\r\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\r\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\r\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\r\n   */\r\n  _elements = {\r\n    parentMenu: null,\r\n    childMenu: null,\r\n    toggle: null,\r\n  };\r\n\r\n  /**\r\n   * A flag marking a submenu item.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  _submenu = false;\r\n\r\n  /**\r\n   * Constructs the menu item.\r\n   *\r\n   * @param {object}          options                         - The options for generating the menu item.\r\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\r\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\r\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\r\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\r\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\r\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\r\n   */\r\n  constructor({\r\n    menuItemElement,\r\n    menuLinkElement,\r\n    parentMenu,\r\n    isSubmenuItem = false,\r\n    childMenu = null,\r\n    toggle = null,\r\n  }) {\r\n    // Set DOM elements.\r\n    this._dom.item = menuItemElement;\r\n    this._dom.link = menuLinkElement;\r\n\r\n    // Set menu elements.\r\n    this._elements.parentMenu = parentMenu;\r\n    this._elements.childMenu = childMenu;\r\n    this._elements.toggle = toggle;\r\n\r\n    this._submenu = isSubmenuItem;\r\n  }\r\n\r\n  /**\r\n   * Initialize the menu item.\r\n   */\r\n  initialize() {}\r\n\r\n  /**\r\n   * The DOM elements within the menu item.\r\n   *\r\n   * @type {object.<HTMLElement>}\r\n   *\r\n   * @readonly\r\n   *\r\n   * @see _dom\r\n   */\r\n  get dom() {\r\n    return this._dom;\r\n  }\r\n\r\n  /**\r\n   * The declared accessible-menu elements within the menu item.\r\n   *\r\n   * @type {object.<BaseMenu,BaseMenuToggle>}\r\n   *\r\n   * @readonly\r\n   *\r\n   * @see _elements\r\n   */\r\n  get elements() {\r\n    return this._elements;\r\n  }\r\n\r\n  /**\r\n   * A flag marking a submenu item.\r\n   *\r\n   * @type {boolean}\r\n   *\r\n   * @readonly\r\n   *\r\n   * @see _submenu\r\n   */\r\n  get isSubmenuItem() {\r\n    return this._submenu;\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu item's link if the parent menu's\r\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\r\n   */\r\n  focus() {\r\n    if (this.elements.parentMenu.shouldFocus) {\r\n      this.dom.link.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blurs the menu item's link if the parent menu's\r\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\r\n   */\r\n  blur() {\r\n    if (this.elements.parentMenu.shouldFocus) {\r\n      this.dom.link.blur();\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseMenuItem;\r\n","/**\r\n * Retrieves the pressed key from an event.\r\n *\r\n * @param   {KeyboardEvent} event - The keyboard event.\r\n * @return  {string}              - The name of the key or an empty string.\r\n */\r\nexport function keyPress(event) {\r\n  try {\r\n    // Use event.key or event.keyCode to support older browsers.\r\n    const key = event.key || event.keyCode;\r\n    const keys = {\r\n      Enter: key === \"Enter\" || key === 13,\r\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\r\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\r\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\r\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\r\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\r\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\r\n      Home: key === \"Home\" || key === 36,\r\n      End: key === \"End\" || key === 35,\r\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\r\n      Tab: key === \"Tab\" || key === 9,\r\n      Asterisk: key === \"*\" || key === 56,\r\n    };\r\n\r\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\r\n  } catch (error) {\r\n    // Return an empty string if something goes wrong.\r\n    return \"\";\r\n  }\r\n}\r\n\r\n/**\r\n * Stops an event from taking action.\r\n *\r\n * @param {Event} event - The event.\r\n */\r\nexport function preventEvent(event) {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n}\r\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\r\nimport BaseMenuItem from \"./_baseMenuItem.js\";\r\nimport {\r\n  isValidInstance,\r\n  isValidType,\r\n  isCSSSelector,\r\n  isValidClassList,\r\n  isValidState,\r\n  isValidEvent,\r\n  isValidHoverType,\r\n  isEventSupported,\r\n} from \"./validate.js\";\r\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\r\n\r\n/**\r\n * An accessible navigation element in the DOM.\r\n *\r\n * This is intended to be used as a \"base\" to other menus and not to be used on\r\n * it's own in the DOM.\r\n *\r\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\r\n */\r\nclass BaseMenu {\r\n  /**\r\n   * The class to use when generating submenus.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof BaseMenu}\r\n   */\r\n  _MenuType = BaseMenu;\r\n\r\n  /**\r\n   * The class to use when generating menu items.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof BaseMenuItem}\r\n   */\r\n  _MenuItemType = BaseMenuItem;\r\n\r\n  /**\r\n   * The class to use when generating submenu toggles.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof BaseMenuToggle}\r\n   */\r\n  _MenuToggleType = BaseMenuToggle;\r\n\r\n  /**\r\n   * The DOM elements within the menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {object.<HTMLElement,HTMLElement[]>}\r\n   *\r\n   * @property {HTMLElement}   menu           - The menu element.\r\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\r\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\r\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\r\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\r\n   * @property {HTMLElement}   controller     - The toggle for this menu.\r\n   * @property {HTMLElement}   container      - The container for this menu.\r\n   */\r\n  _dom = {\r\n    menu: null,\r\n    menuItems: [],\r\n    submenuItems: [],\r\n    submenuToggles: [],\r\n    submenus: [],\r\n    controller: null,\r\n    container: null,\r\n  };\r\n\r\n  /**\r\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {object.<string>}\r\n   *\r\n   * @property {string} menuItems      - The CSS selector for menu items.\r\n   * @property {string} menuLinks      - The CSS selector for menu links.\r\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\r\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\r\n   * @property {string} submenus       - The CSS selector for for submenus.\r\n   */\r\n  _selectors = {\r\n    menuItems: \"\",\r\n    menuLinks: \"\",\r\n    submenuItems: \"\",\r\n    submenuToggles: \"\",\r\n    submenus: \"\",\r\n  };\r\n\r\n  /**\r\n   * The declared accessible-menu elements within the menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\r\n   *\r\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\r\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\r\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\r\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\r\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\r\n   */\r\n  _elements = {\r\n    menuItems: [],\r\n    submenuToggles: [],\r\n    controller: null,\r\n    parentMenu: null,\r\n    rootMenu: null,\r\n  };\r\n\r\n  /**\r\n   * The class(es) to apply when the menu is open.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {string|string[]}\r\n   */\r\n  _openClass = \"show\";\r\n\r\n  /**\r\n   * The class(es) to apply when the menu is closed.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {string|string[]}\r\n   */\r\n  _closeClass = \"hide\";\r\n\r\n  /**\r\n   * A flag marking the root menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  _root = true;\r\n\r\n  /**\r\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {number}\r\n   */\r\n  _currentChild = 0;\r\n\r\n  /**\r\n   * The current state of the menu's focus.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {string}\r\n   */\r\n  _focusState = \"none\";\r\n\r\n  /**\r\n   * This last event triggered on the menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {string}\r\n   */\r\n  _currentEvent = \"none\";\r\n\r\n  /**\r\n   * The type of hoverability for the menu.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {string}\r\n   */\r\n  _hoverType = \"off\";\r\n\r\n  /**\r\n   * The delay time (in miliseconds) used for mouseout events to take place.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {number}\r\n   */\r\n  _hoverDelay = 250;\r\n\r\n  /**\r\n   * Constructs the menu.\r\n   *\r\n   * @param {object}                 options                             - The options for generating the menu.\r\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\r\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\r\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\r\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\r\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\r\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\r\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\r\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\r\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\r\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\r\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\r\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\r\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\r\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\r\n   */\r\n  constructor({\r\n    menuElement,\r\n    menuItemSelector = \"li\",\r\n    menuLinkSelector = \"a\",\r\n    submenuItemSelector = \"\",\r\n    submenuToggleSelector = \"a\",\r\n    submenuSelector = \"ul\",\r\n    controllerElement = null,\r\n    containerElement = null,\r\n    openClass = \"show\",\r\n    closeClass = \"hide\",\r\n    isTopLevel = true,\r\n    parentMenu = null,\r\n    hoverType = \"off\",\r\n    hoverDelay = 250,\r\n  }) {\r\n    // Set DOM elements.\r\n    this._dom.menu = menuElement;\r\n    this._dom.controller = controllerElement;\r\n    this._dom.container = containerElement;\r\n\r\n    // Set DOM selectors.\r\n    this._selectors.menuItems = menuItemSelector;\r\n    this._selectors.menuLinks = menuLinkSelector;\r\n    this._selectors.submenuItems = submenuItemSelector;\r\n    this._selectors.submenuToggles = submenuToggleSelector;\r\n    this._selectors.submenus = submenuSelector;\r\n\r\n    // Set menu elements.\r\n    this._elements.menuItems = [];\r\n    this._elements.submenuToggles = [];\r\n    this._elements.controller = null;\r\n    this._elements.parentMenu = parentMenu;\r\n    this._elements.rootMenu = isTopLevel ? this : null;\r\n\r\n    // Set open/close classes.\r\n    this._openClass = openClass || \"\";\r\n    this._closeClass = closeClass || \"\";\r\n\r\n    // Set root.\r\n    this._root = isTopLevel;\r\n\r\n    // Set hover settings.\r\n    this._hoverType = hoverType;\r\n    this._hoverDelay = hoverDelay;\r\n  }\r\n\r\n  /**\r\n   * Initializes the menu.\r\n   *\r\n   * The following steps will be taken to initialize the menu:\r\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\r\n   * - find the root menu of the menu tree if it isn't already set,\r\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\r\n   * - if the current menu is the root menu _and_ has a controller, initialize\r\n   *   the controller, and\r\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\r\n   *\r\n   * @throws {Error} Will throw an Error if validate returns `false`.\r\n   */\r\n  initialize() {\r\n    if (!this._validate()) {\r\n      throw new Error(\r\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\r\n      );\r\n    }\r\n\r\n    // Get the root menu if it doesn't exist.\r\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\r\n\r\n    // Set all of the DOM elements.\r\n    this._setDOMElements();\r\n\r\n    if (this.isTopLevel) {\r\n      if (this.dom.controller && this.dom.container) {\r\n        // Create a new BaseMenuToggle to control the menu.\r\n        const toggle = new this._MenuToggleType({\r\n          menuToggleElement: this.dom.controller,\r\n          parentElement: this.dom.container,\r\n          controlledMenu: this,\r\n        });\r\n\r\n        this._elements.controller = toggle;\r\n      }\r\n    }\r\n\r\n    this._createChildElements();\r\n  }\r\n\r\n  /**\r\n   * The DOM elements within the menu.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {object.<HTMLElement,HTMLElement[]>}\r\n   *\r\n   * @see _dom\r\n   */\r\n  get dom() {\r\n    return this._dom;\r\n  }\r\n\r\n  /**\r\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {object.<string>}\r\n   *\r\n   * @see _selectors\r\n   */\r\n  get selectors() {\r\n    return this._selectors;\r\n  }\r\n\r\n  /**\r\n   * The declared accessible-menu elements within the menu.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\r\n   *\r\n   * @see _elements\r\n   */\r\n  get elements() {\r\n    return this._elements;\r\n  }\r\n\r\n  /**\r\n   * The flag marking the root menu.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @type {boolean}\r\n   *\r\n   * @see _root\r\n   */\r\n  get isTopLevel() {\r\n    return this._root;\r\n  }\r\n\r\n  /**\r\n   * The class(es) to apply when the menu is open.\r\n   *\r\n   * This functions differently for root vs. submenus.\r\n   * Submenus will always inherit their root menu's open class(es).\r\n   *\r\n   * @type {string|string[]}\r\n   *\r\n   * @see _openClass\r\n   */\r\n  get openClass() {\r\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\r\n  }\r\n\r\n  /**\r\n   * The class(es) to apply when the menu is closed.\r\n   *\r\n   * This functions differently for root vs. submenus.\r\n   * Submenus will always inherit their root menu's close class(es).\r\n   *\r\n   * @type {string|string[]}\r\n   *\r\n   * @see _closeClass\r\n   */\r\n  get closeClass() {\r\n    return this.isTopLevel\r\n      ? this._closeClass\r\n      : this.elements.rootMenu.closeClass;\r\n  }\r\n\r\n  /**\r\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\r\n   *\r\n   * - Attempting to set a value less than -1 will set the current child to -1.\r\n   * - Attempting to set a value greater than or equal to the number of menu items\r\n   *   will set the current child to the index of the last menu item in the menu.\r\n   *\r\n   * If the current menu has a parent menu _and_ the menu's\r\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\r\n   * will have it's current child updated as well to help with transitioning\r\n   * between mouse and keyboard naviation.\r\n   *\r\n   * @type {number}\r\n   *\r\n   * @see _currentChild\r\n   */\r\n  get currentChild() {\r\n    return this._currentChild;\r\n  }\r\n\r\n  /**\r\n   * The current state of the menu's focus.\r\n   *\r\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\r\n   *   update all child menus to have the focus state of \"none\".\r\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\r\n   *   will update all parent menus to have the focus state of \"child\".\r\n   *\r\n   * @type {string}\r\n   *\r\n   * @see _focusState\r\n   */\r\n  get focusState() {\r\n    return this._focusState;\r\n  }\r\n\r\n  /**\r\n   * The last event triggered on the menu.\r\n   *\r\n   * @type {string}\r\n   *\r\n   * @see _currentEvent\r\n   */\r\n  get currentEvent() {\r\n    return this._currentEvent;\r\n  }\r\n\r\n  /**\r\n   * The currently selected menu item.\r\n   *\r\n   * @type {BaseMenuItem}\r\n   */\r\n  get currentMenuItem() {\r\n    return this.elements.menuItems[this.currentChild];\r\n  }\r\n\r\n  /**\r\n   * The type of hoverability for the menu.\r\n   *\r\n   * This functions differently for root vs. submenus.\r\n   * Submenus will always inherit their root menu's hoverability.\r\n   *\r\n   * @type {string}\r\n   *\r\n   * @see _hoverType\r\n   */\r\n  get hoverType() {\r\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\r\n  }\r\n\r\n  /**\r\n   * The delay time (in miliseconds) used for mouseout events to take place.\r\n   *\r\n   * This functions differently for root vs. submenus.\r\n   * Submenus will always inherit their root menu's hover delay.\r\n   *\r\n   * @type {number}\r\n   *\r\n   * @see _hoverDelay\r\n   */\r\n  get hoverDelay() {\r\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\r\n  }\r\n\r\n  /**\r\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\r\n   *\r\n   * This will be `false` unless any of the following criteria are met:\r\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\r\n   * - The menu's current event is \"character\".\r\n   * - The menu's current event is \"mouse\" _and_ the menu's\r\n   *   {@link BaseMenu_hoverTypeType|hover type} is \"dynamic\".\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  get shouldFocus() {\r\n    let check = false;\r\n\r\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\r\n      check = true;\r\n    }\r\n\r\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\r\n      check = true;\r\n    }\r\n\r\n    return check;\r\n  }\r\n\r\n  set openClass(value) {\r\n    isValidClassList({ openClass: value });\r\n\r\n    if (this._openClass !== value) {\r\n      this._openClass = value;\r\n    }\r\n  }\r\n\r\n  set closeClass(value) {\r\n    isValidClassList({ closeClass: value });\r\n\r\n    if (this._closeClass !== value) {\r\n      this._closeClass = value;\r\n    }\r\n  }\r\n\r\n  set currentChild(value) {\r\n    isValidType(\"number\", { value });\r\n\r\n    /**\r\n     * Update the parent menu's current child to make sure clicks\r\n     * and other jumps don't interfere with keyboard navigation.\r\n     *\r\n     * @param {BaseMenu} menu - The initial menu.\r\n     */\r\n    function setParentChild(menu) {\r\n      const updateEvents = [\"mouse\", \"character\"];\r\n\r\n      if (\r\n        updateEvents.includes(menu.currentEvent) &&\r\n        menu.elements.parentMenu\r\n      ) {\r\n        let index = 0;\r\n        let found = false;\r\n\r\n        while (\r\n          !found &&\r\n          index < menu.elements.parentMenu.elements.menuItems.length\r\n        ) {\r\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\r\n\r\n          if (\r\n            menuItem.isSubmenuItem &&\r\n            menuItem.elements.toggle.elements.controlledMenu === menu\r\n          ) {\r\n            found = true;\r\n\r\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\r\n            menu.elements.parentMenu.currentChild = index;\r\n          }\r\n\r\n          index++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (value < -1) {\r\n      this._currentChild = -1;\r\n      setParentChild(this);\r\n    } else if (value >= this.elements.menuItems.length) {\r\n      this._currentChild = this.elements.menuItems.length - 1;\r\n      setParentChild(this);\r\n    } else if (this.focusChild !== value) {\r\n      this._currentChild = value;\r\n      setParentChild(this);\r\n    }\r\n  }\r\n\r\n  set focusState(value) {\r\n    isValidState({ value });\r\n\r\n    if (this._focusState !== value) {\r\n      this._focusState = value;\r\n    }\r\n\r\n    if (\r\n      this.elements.submenuToggles.length > 0 &&\r\n      (value === \"self\" || value === \"none\")\r\n    ) {\r\n      this.elements.submenuToggles.forEach((toggle) => {\r\n        toggle.elements.controlledMenu.focusState = \"none\";\r\n      });\r\n    }\r\n\r\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\r\n      this.elements.parentMenu.focusState = \"child\";\r\n    }\r\n  }\r\n\r\n  set currentEvent(value) {\r\n    isValidEvent({ value });\r\n\r\n    if (this._currentEvent !== value) {\r\n      this._currentEvent = value;\r\n\r\n      if (this.elements.submenuToggles.length > 0) {\r\n        this.elements.submenuToggles.forEach((submenuToggle) => {\r\n          submenuToggle.elements.controlledMenu.currentEvent = value;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  set hoverType(value) {\r\n    isValidHoverType({ value });\r\n\r\n    if (this._hoverType !== value) {\r\n      this._hoverType = value;\r\n    }\r\n  }\r\n\r\n  set hoverDelay(value) {\r\n    isValidType(\"number\", { value });\r\n\r\n    if (this._hoverDelay !== value) {\r\n      this._hoverDelay = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates all aspects of the menu to ensure proper functionality.\r\n   *\r\n   * @protected\r\n   *\r\n   * @return {boolean} - The result of the validation.\r\n   */\r\n  _validate() {\r\n    let check = true;\r\n\r\n    if (this._dom.container !== null || this._dom.controller !== null) {\r\n      if (\r\n        !isValidInstance(HTMLElement, {\r\n          menuElement: this._dom.menu,\r\n          controllerElement: this._dom.controller,\r\n          containerElement: this._dom.container,\r\n        })\r\n      ) {\r\n        check = false;\r\n      }\r\n    } else if (\r\n      !isValidInstance(HTMLElement, {\r\n        menuElement: this._dom.menu,\r\n      })\r\n    ) {\r\n      check = false;\r\n    }\r\n\r\n    if (this._selectors.submenuItems !== \"\") {\r\n      if (\r\n        !isCSSSelector({\r\n          menuItemSelector: this._selectors.menuItems,\r\n          menuLinkSelector: this._selectors.menuLinks,\r\n          submenuItemSelector: this._selectors.submenuItems,\r\n          submenuToggleSelector: this._selectors.submenuToggles,\r\n          submenuSelector: this._selectors.submenus,\r\n        })\r\n      ) {\r\n        check = false;\r\n      }\r\n    } else if (\r\n      !isCSSSelector({\r\n        menuItemSelector: this._selectors.menuItems,\r\n        menuLinkSelector: this._selectors.menuLinks,\r\n      })\r\n    ) {\r\n      check = false;\r\n    }\r\n\r\n    if (\r\n      this._openClass !== \"\" &&\r\n      !isValidClassList({ openClass: this._openClass })\r\n    ) {\r\n      check = false;\r\n    }\r\n\r\n    if (\r\n      this._closeClass !== \"\" &&\r\n      !isValidClassList({ closeClass: this._closeClass })\r\n    ) {\r\n      check = false;\r\n    }\r\n\r\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\r\n      check = false;\r\n    }\r\n\r\n    if (\r\n      this._elements.parentMenu !== null &&\r\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\r\n    ) {\r\n      check = false;\r\n    }\r\n\r\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\r\n      check = false;\r\n    }\r\n\r\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\r\n      check = false;\r\n    }\r\n\r\n    return check;\r\n  }\r\n\r\n  /**\r\n   * Sets DOM elements within the menu.\r\n   *\r\n   * Elements that are not stored inside an array cannot be set through this method.\r\n   *\r\n   * @protected\r\n   *\r\n   * @param {string}      elementType            - The type of element to populate.\r\n   * @param {HTMLElement} [base = this.dom.menu] - The element used as the base for the querySelect.\r\n   * @param {boolean}     [overwrite = true]     - A flag to set if the existing elements will be overwritten.\r\n   */\r\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\r\n    if (typeof this.selectors[elementType] === \"string\") {\r\n      if (!Array.isArray(this.dom[elementType])) {\r\n        throw new Error(\r\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\r\n        );\r\n      }\r\n\r\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\r\n\r\n      // Get the all elements matching the selector in the base.\r\n      const domElements = Array.from(\r\n        base.querySelectorAll(this.selectors[elementType])\r\n      );\r\n\r\n      // Filter the elements so only direct children of the base are kept.\r\n      const filteredElements = domElements.filter(\r\n        (item) => item.parentElement === base\r\n      );\r\n\r\n      if (overwrite) {\r\n        this._dom[elementType] = filteredElements;\r\n      } else {\r\n        this._dom[elementType] = [\r\n          ...this._dom[elementType],\r\n          ...filteredElements,\r\n        ];\r\n      }\r\n    } else {\r\n      throw new Error(\r\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets DOM elements within the menu.\r\n   *\r\n   * Elements that are not stored inside an array cannot be reset through this method.\r\n   *\r\n   * @protected\r\n   *\r\n   * @param {string} elementType - The type of element to clear.\r\n   */\r\n  _resetDOMElementType(elementType) {\r\n    if (typeof this.dom[elementType] !== \"undefined\") {\r\n      if (!Array.isArray(this.dom[elementType])) {\r\n        throw new Error(\r\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\r\n        );\r\n      }\r\n\r\n      this._dom[elementType] = [];\r\n    } else {\r\n      throw new Error(\r\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets all DOM elements within the menu.\r\n   *\r\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\r\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\r\n   *\r\n   * @protected\r\n   */\r\n  _setDOMElements() {\r\n    this._setDOMElementType(\"menuItems\");\r\n\r\n    if (this.selectors.submenuItems !== \"\") {\r\n      this._setDOMElementType(\"submenuItems\");\r\n\r\n      this._resetDOMElementType(\"submenuToggles\");\r\n      this._resetDOMElementType(\"submenus\");\r\n\r\n      this.dom.submenuItems.forEach((item) => {\r\n        this._setDOMElementType(\"submenuToggles\", item, false);\r\n        this._setDOMElementType(\"submenus\", item, false);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds the root menu element.\r\n   *\r\n   * @protected\r\n   *\r\n   * @param {BaseMenu} menu - The menu to check.\r\n   */\r\n  _findRootMenu(menu) {\r\n    if (menu.isTopLevel) {\r\n      this._elements.rootMenu = menu;\r\n    } else if (menu.elements.parentMenu !== null) {\r\n      this._findRootMenu(menu.elements.parentMenu);\r\n    } else {\r\n      throw new Error(\"Cannot find root menu.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates and initializes all menu items and submenus.\r\n   *\r\n   * @protected\r\n   */\r\n  _createChildElements() {\r\n    this.dom.menuItems.forEach((element) => {\r\n      let menuItem;\r\n\r\n      if (this.dom.submenuItems.includes(element)) {\r\n        // The menu's toggle controller DOM element.\r\n        const toggler = element.querySelector(this.selectors.submenuToggles);\r\n        // The actual menu DOM element.\r\n        const submenu = element.querySelector(this.selectors.submenus);\r\n\r\n        // Create the new menu and initialize it.\r\n        const menu = new this._MenuType({\r\n          menuElement: submenu,\r\n          menuItemSelector: this.selectors.menuItems,\r\n          menuLinkSelector: this.selectors.menuLinks,\r\n          submenuItemSelector: this.selectors.submenuItems,\r\n          submenuToggleSelector: this.selectors.submenuToggles,\r\n          submenuSelector: this.selectors.submenus,\r\n          openClass: this.openClass,\r\n          closeClass: this.closeClass,\r\n          isTopLevel: false,\r\n          parentMenu: this,\r\n          hoverType: this.hoverType,\r\n          hoverDelay: this.hoverDelay,\r\n        });\r\n\r\n        // Create the new menu toggle.\r\n        const toggle = new this._MenuToggleType({\r\n          menuToggleElement: toggler,\r\n          parentElement: element,\r\n          controlledMenu: menu,\r\n          parentMenu: this,\r\n        });\r\n\r\n        // Add the toggle to the list of toggles.\r\n        this._elements.submenuToggles.push(toggle);\r\n\r\n        // Create a new menu item.\r\n        menuItem = new this._MenuItemType({\r\n          menuItemElement: element,\r\n          menuLinkElement: toggler,\r\n          parentMenu: this,\r\n          isSubmenuItem: true,\r\n          childMenu: menu,\r\n          toggle,\r\n        });\r\n      } else {\r\n        const link = element.querySelector(this.selectors.menuLinks);\r\n\r\n        // Create a new menu item.\r\n        menuItem = new this._MenuItemType({\r\n          menuItemElement: element,\r\n          menuLinkElement: link,\r\n          parentMenu: this,\r\n        });\r\n      }\r\n\r\n      this._elements.menuItems.push(menuItem);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles focus events throughout the menu for proper menu use.\r\n   *\r\n   * - Adds a `focus` listener to every menu item so when it gains focus,\r\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\r\n   *   to \"self\".\r\n   *\r\n   * @protected\r\n   */\r\n  _handleFocus() {\r\n    this.elements.menuItems.forEach((menuItem, index) => {\r\n      menuItem.dom.link.addEventListener(\"focus\", () => {\r\n        this.focusState = \"self\";\r\n        this.currentChild = index;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles click events throughout the menu for proper use.\r\n   *\r\n   * Depending on what is supported either `touchstart` and `touchend` or\r\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\r\n   *\r\n   * - Adds a `touchend`/`mouseup` listener to the document so if the user clicks\r\n   *   outside of the menu when it is open, the menu will close.\r\n   * - Adds a `touchstart`/`mousedown` listener to every menu item that will blur\r\n   *   all menu items in the entire menu structure (starting at the root menu) and\r\n   *   then properly focus the clicked item.\r\n   * - Adds a `touchend`/`mouseup` listener to every submenu item that will properly\r\n   *   toggle the submenu open/closed.\r\n   * - Adds a `touchend`/`mouseup` listener to the menu's controller\r\n   *   (if the menu is the root menu) so when it is clicked it will properly\r\n   *   toggle open/closed.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleClick() {\r\n    // Use touch over mouse events when supported.\r\n    const startEventType = isEventSupported(\"touchstart\", this.dom.menu)\r\n      ? \"touchstart\"\r\n      : \"mousedown\";\r\n    const endEventTypes = isEventSupported(\"touchend\", this.dom.menu)\r\n      ? [\"touchend\", \"mouseup\"]\r\n      : [\"mouseup\"];\r\n\r\n    /**\r\n     * Toggles a toggle element.\r\n     *\r\n     * @param {BaseMenu}       menu   - This menu.\r\n     * @param {BaseMenuToggle} toggle - The menu toggle\r\n     * @param {Event}          event  - A Javascript event.\r\n     */\r\n    function toggleToggle(menu, toggle, event) {\r\n      preventEvent(event);\r\n\r\n      toggle.toggle();\r\n\r\n      if (toggle.isOpen) {\r\n        menu.focusState = \"self\";\r\n        toggle.elements.controlledMenu.focusState = \"none\";\r\n      }\r\n    }\r\n\r\n    this.elements.menuItems.forEach((item, index) => {\r\n      // Properly focus the current menu item.\r\n      item.dom.link.addEventListener(startEventType, () => {\r\n        this.currentEvent = \"mouse\";\r\n        this.elements.rootMenu.blurChildren();\r\n        this.focusChild(index);\r\n      });\r\n\r\n      // Properly toggle submenus open and closed.\r\n      if (item.isSubmenuItem) {\r\n        for (const endEventType of endEventTypes) {\r\n          item.elements.toggle.dom.toggle[`on${endEventType}`] = (event) => {\r\n            this.currentEvent = \"mouse\";\r\n            toggleToggle(this, item.elements.toggle, event);\r\n          };\r\n        };\r\n      }\r\n    });\r\n\r\n    // Open the this menu if it's controller is clicked.\r\n    if (this.isTopLevel && this.elements.controller) {\r\n      for (const endEventType of endEventTypes) {\r\n        this.elements.controller.dom.toggle[`on${endEventType}`] = (event) => {\r\n          this.currentEvent = \"mouse\";\r\n          toggleToggle(this, this.elements.controller, event);\r\n        };\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles hover events throughout the menu for proper use.\r\n   *\r\n   * Adds `mouseenter` listeners to all menu items and `mouseleave` listeners\r\n   * to all submenu items which function differently depending on\r\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\r\n   *\r\n   * <strong>Hover Type \"on\"</strong>\r\n   * - When a `mouseenter` event triggers on any menu item the menu's\r\n   *   {@link BaseMenu#currentChild| current child} value will change to that\r\n   *   menu item.\r\n   * - When a `mouseenter` event triggers on a submenu item the\r\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\r\n   *   toggle will be called.\r\n   * - When a `mouseleave` event triggers on an open submenu item the\r\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\r\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\r\n   *\r\n   * <strong>Hover Type \"dynamic\"</strong>\r\n   * - When a `mouseenter` event triggers on any menu item the menu's\r\n   *   current child value will change to that menu item.\r\n   * - When a `mouseenter` event triggers on any menu item, and the menu's\r\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\r\n   *   will be focused.\r\n   * - When a `mouseenter` event triggers on a submenu item, and a submenu is\r\n   *   already open, the preview method for the submenu item's toggle will be called.\r\n   * - When a `mouseenter` event triggers on a submenu item, and no submenu is\r\n   *   open, no submenu-specific methods will be called.\r\n   * - When a `mouseleave` event triggers on an open submenu item that is not a\r\n   *   root-level submenu item the close method for the submenu item's toggle\r\n   *   will be called and the submenu item will be focused after a delay set by\r\n   *   the menu's hover delay.\r\n   * - When a `mouseleave` event triggers on an open submenu item that is a\r\n   *   root-level submenu item no submenu-specific methods will be called.\r\n   *\r\n   * <strong>Hover Type \"off\"</strong>\r\n   * All `mouseenter` and `mouseleave` events are ignored.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleHover() {\r\n    this.elements.menuItems.forEach((menuItem, index) => {\r\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\r\n        if (this.hoverType === \"on\") {\r\n          this.currentEvent = \"mouse\";\r\n          this.currentChild = index;\r\n\r\n          if (menuItem.isSubmenuItem) {\r\n            menuItem.elements.toggle.preview();\r\n          }\r\n        } else if (this.hoverType === \"dynamic\") {\r\n          const isOpen = this.elements.submenuToggles.some(\r\n            (toggle) => toggle.isOpen\r\n          );\r\n          this.currentChild = index;\r\n\r\n          if (!this.isTopLevel || this.focusState !== \"none\") {\r\n            this.currentEvent = \"mouse\";\r\n            this.focusCurrentChild();\r\n          }\r\n\r\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\r\n            this.currentEvent = \"mouse\";\r\n            menuItem.elements.toggle.preview();\r\n          }\r\n        }\r\n      });\r\n\r\n      if (menuItem.isSubmenuItem) {\r\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\r\n          if (this.hoverType === \"on\") {\r\n            if (this.hoverDelay > 0) {\r\n              setTimeout(() => {\r\n                this.currentEvent = \"mouse\";\r\n                menuItem.elements.toggle.close();\r\n              }, this.hoverDelay);\r\n            } else {\r\n              this.currentEvent = \"mouse\";\r\n              menuItem.elements.toggle.close();\r\n            }\r\n          } else if (this.hoverType === \"dynamic\") {\r\n            if (!this.isTopLevel) {\r\n              if (this.hoverDelay > 0) {\r\n                setTimeout(() => {\r\n                  this.currentEvent = \"mouse\";\r\n                  menuItem.elements.toggle.close();\r\n                  this.focusCurrentChild();\r\n                }, this.hoverDelay);\r\n              } else {\r\n                this.currentEvent = \"mouse\";\r\n                menuItem.elements.toggle.close();\r\n                this.focusCurrentChild();\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles keydown events throughout the menu for proper menu use.\r\n   *\r\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\r\n   *\r\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\r\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeydown() {\r\n    if (this.isTopLevel && this.elements.controller) {\r\n      this.elements.controller.dom.toggle.addEventListener(\r\n        \"keydown\",\r\n        (event) => {\r\n          this.currentEvent = \"keyboard\";\r\n\r\n          const key = keyPress(event);\r\n\r\n          if (key === \"Space\" || key === \"Enter\") {\r\n            preventEvent(event);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keyup events throughout the menu for proper menu use.\r\n   *\r\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\r\n   *   - Opens the menu when the user hits \"Space\" or \"Enter\".\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeyup() {\r\n    if (this.isTopLevel && this.elements.controller) {\r\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\r\n        this.currentEvent = \"keyboard\";\r\n\r\n        const key = keyPress(event);\r\n\r\n        if (key === \"Space\" || key === \"Enter\") {\r\n          preventEvent(event);\r\n          this.elements.controller.open();\r\n          this.focusFirstChild();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu.\r\n   *\r\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\r\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\r\n   * value is `true`.\r\n   */\r\n  focus() {\r\n    this.focusState = \"self\";\r\n\r\n    if (this.shouldFocus) {\r\n      this.dom.menu.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unfocus the menu.\r\n   *\r\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\r\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\r\n   * vallue is `true`.\r\n   */\r\n  blur() {\r\n    this.focusState = \"none\";\r\n\r\n    if (this.shouldFocus) {\r\n      this.dom.menu.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's current child.\r\n   */\r\n  focusCurrentChild() {\r\n    this.focusState = \"self\";\r\n\r\n    if (this.currentChild !== -1) {\r\n      this.currentMenuItem.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu's child at a given index.\r\n   *\r\n   * @param {number} index - The index of the child to focus.\r\n   */\r\n  focusChild(index) {\r\n    this.blurCurrentChild();\r\n    this.currentChild = index;\r\n    this.focusCurrentChild();\r\n  }\r\n\r\n  /**\r\n   * Focues the menu's first child.\r\n   */\r\n  focusFirstChild() {\r\n    this.focusChild(0);\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's last child.\r\n   */\r\n  focusLastChild() {\r\n    this.focusChild(this.elements.menuItems.length - 1);\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's next child.\r\n   */\r\n  focusNextChild() {\r\n    if (this.currentChild < this.elements.menuItems.length - 1) {\r\n      this.focusChild(this.currentChild + 1);\r\n    } else {\r\n      this.focusCurrentChild();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's previous child.\r\n   */\r\n  focusPreviousChild() {\r\n    if (this.currentChild > 0) {\r\n      this.focusChild(this.currentChild - 1);\r\n    } else {\r\n      this.focusCurrentChild();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blurs the menu's current child.\r\n   */\r\n  blurCurrentChild() {\r\n    this.focusState = \"none\";\r\n\r\n    if (this.currentChild !== -1) {\r\n      this.currentMenuItem.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's controller.\r\n   */\r\n  focusController() {\r\n    if (this.dom.controller) {\r\n      if (this.shouldFocus) {\r\n        this.dom.controller.focus();\r\n      }\r\n\r\n      this.focusState = \"none\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's container.\r\n   */\r\n  focusContainer() {\r\n    if (this.dom.container) {\r\n      if (this.shouldFocus) {\r\n        this.dom.container.focus();\r\n      }\r\n\r\n      this.focusState = \"none\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close all submenu children.\r\n   */\r\n  closeChildren() {\r\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\r\n  }\r\n\r\n  /**\r\n   * Blurs all children and submenu's children.\r\n   */\r\n  blurChildren() {\r\n    this.elements.menuItems.forEach((menuItem) => {\r\n      menuItem.blur();\r\n\r\n      if (menuItem.isSubmenuItem) {\r\n        menuItem.elements.childMenu.blurChildren();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default BaseMenu;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuItem from \"./_baseMenuItem.js\";\r\n\r\n/**\r\n * A basic navigation link contained inside of a {@link DisclousreMenu}.\r\n *\r\n * @extends BaseMenuItem\r\n */\r\nclass DisclosureMenuItem extends BaseMenuItem {\r\n  /**\r\n   * Constructs the menu item.\r\n   *\r\n   * @param {object}                    options                         - The options for generating the menu item.\r\n   * @param {HTMLElement}               options.menuItemElement         - The menu item in the DOM.\r\n   * @param {HTMLElement}               options.menuLinkElement         - The menu item's link in the DOM.\r\n   * @param {DisclosureMenu}            options.parentMenu              - The parent menu.\r\n   * @param {boolean}                   [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\r\n   * @param {DisclosureMenu|null}       [options.childMenu = null]      - The child menu.\r\n   * @param {DisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\r\n   * @param {boolean}                   [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuItemElement,\r\n    menuLinkElement,\r\n    parentMenu,\r\n    isSubmenuItem = false,\r\n    childMenu = null,\r\n    toggle = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuItemElement,\r\n      menuLinkElement,\r\n      parentMenu,\r\n      isSubmenuItem,\r\n      childMenu,\r\n      toggle,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n}\r\n\r\nexport default DisclosureMenuItem;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\r\n\r\n/**\r\n * A link or button that controls the visibility of a {@link DisclousreMenu}.\r\n *\r\n * @extends BaseMenuToggle\r\n */\r\nclass DisclosureMenuToggle extends BaseMenuToggle {\r\n  /**\r\n   * Constructs the menu toggle.\r\n   *\r\n   * @param {object}              options                     - The options for generating the menu toggle.\r\n   * @param {HTMLElement}         options.menuToggleElement   - The toggle element in the DOM.\r\n   * @param {HTMLElement}         options.parentElement       - The element containing the controlled menu.\r\n   * @param {DisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\r\n   * @param {DisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\r\n   * @param {boolean}             [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuToggleElement,\r\n    parentElement,\r\n    controlledMenu,\r\n    parentMenu = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuToggleElement,\r\n      parentElement,\r\n      controlledMenu,\r\n      parentMenu,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu.\r\n   *\r\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\r\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\r\n   */\r\n  open() {\r\n    // Close all siblings.\r\n    this.closeSiblings();\r\n\r\n    super.open();\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu without the current focus entering it.\r\n   *\r\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\r\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\r\n   */\r\n  preview() {\r\n    // Close all siblings.\r\n    this.closeSiblings();\r\n\r\n    super.preview();\r\n  }\r\n\r\n  /**\r\n   * Closes the controlled menu.\r\n   *\r\n   * Calls the {@link DisclosureMenuToggle#closeChildren| closeChildren method}\r\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\r\n   */\r\n  close() {\r\n    if (this.isOpen) {\r\n      // Close all children.\r\n      this.closeChildren();\r\n    }\r\n\r\n    super.close();\r\n  }\r\n}\r\n\r\nexport default DisclosureMenuToggle;\r\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType, isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html|Example Disclosure for Navigation Menus}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { DisclosureMenu } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new DisclosureMenu({\n *   menuElement,\n * });\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenu}\n   */\n  _MenuType = DisclosureMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuItem}\n   */\n  _MenuItemType = DisclosureMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuToggle}\n   */\n  _MenuToggleType = DisclosureMenuToggle;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = -1;\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _optionalSupport = false;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                              - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                  - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]      - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]       - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]        - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a]  - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]       - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]   - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]    - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]           - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]          - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]         - A flag to mark the root menu.\n   * @param {(DisclosureMenu|null)}  [options.parentMenu = null]          - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]            - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]           - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.optionalKeySupport = false] - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                [options.initialize = true]          - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set optional key support.\n    this._optionalSupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link DisclosureMenu#_handleFocus|focus},\n   * {@link DisclosureMenu#_handleClick|click},\n   * {@link DisclosureMenu#_handleHover|hover},\n   * {@link DisclosureMenu#_handleKeydown|keydown}, and\n   * {@link DisclosureMenu#_handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   *\n   * @see _optionalSupport\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this._optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this._optionalSupport = value;\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = super._validate();\n\n    if (\n      !isValidType(\"boolean\", { optionalKeySupport: this._optionalSupport })\n    ) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * Depending on what is supported either `touchstart` and `touchend` or\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `touchend`/`mouseup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link DisclosureMenu#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link DisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link DisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuItem from \"./_baseMenuItem.js\";\r\n\r\n/**\r\n * A basic navigation link contained inside of a {@link Menubar}.\r\n *\r\n * @extends BaseMenuItem\r\n */\r\nclass MenubarItem extends BaseMenuItem {\r\n  /**\r\n   * Constructs the menu item.\r\n   *\r\n   * @param {object}             options                         - The options for generating the menu item.\r\n   * @param {HTMLElement}        options.menuItemElement         - The menu item in the DOM.\r\n   * @param {HTMLElement}        options.menuLinkElement         - The menu item's link in the DOM.\r\n   * @param {Menubar}            options.parentMenu              - The parent menu.\r\n   * @param {boolean}            [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\r\n   * @param {Menubar|null}       [options.childMenu = null]      - The child menu.\r\n   * @param {MenubarToggle|null} [options.toggle = null]         - The controller for the child menu.\r\n   * @param {boolean}            [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuItemElement,\r\n    menuLinkElement,\r\n    parentMenu,\r\n    isSubmenuItem = false,\r\n    childMenu = null,\r\n    toggle = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuItemElement,\r\n      menuLinkElement,\r\n      parentMenu,\r\n      isSubmenuItem,\r\n      childMenu,\r\n      toggle,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the menu item.\r\n   *\r\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\r\n   * as well as set the menu item's `role` to \"none\",\r\n   * the menu link's `role` to \"menuitem\", and\r\n   * the menu link's `tabIndex` to -1 in the DOM.\r\n   */\r\n  initialize() {\r\n    super.initialize();\r\n\r\n    this.dom.item.setAttribute(\"role\", \"none\");\r\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\r\n    this.dom.link.tabIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu item's link if the parent menu's\r\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\r\n   *\r\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\r\n   * as well as set the menu link's `tabIndex` to 0 if the parent menu\r\n   * is the root menu.\r\n   */\r\n  focus() {\r\n    super.focus();\r\n\r\n    if (this.elements.parentMenu.isTopLevel) {\r\n      this.dom.link.tabIndex = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blurs the menu item's link if the parent menu's\r\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\r\n   *\r\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\r\n   * as well as set the menu link's `tabIndex` to -1 if the parent menu\r\n   * is the root menu.\r\n   */\r\n  blur() {\r\n    super.blur();\r\n\r\n    if (this.elements.parentMenu.isTopLevel) {\r\n      this.dom.link.tabIndex = -1;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MenubarItem;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\r\n\r\n/**\r\n * A link or button that controls the visibility of a {@link Menubar}.\r\n *\r\n * @extends BaseMenuToggle\r\n */\r\nclass MenubarToggle extends BaseMenuToggle {\r\n  /**\r\n   * Constructs the menu toggle.\r\n   *\r\n   * @param {object}       options                     - The options for generating the menu toggle.\r\n   * @param {HTMLElement}  options.menuToggleElement   - The toggle element in the DOM.\r\n   * @param {HTMLElement}  options.parentElement       - The element containing the controlled menu.\r\n   * @param {Menubar}      options.controlledMenu      - The menu controlled by this toggle.\r\n   * @param {Menubar|null} [options.parentMenu = null] - The menu containing this toggle.\r\n   * @param {boolean}      [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuToggleElement,\r\n    parentElement,\r\n    controlledMenu,\r\n    parentMenu = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuToggleElement,\r\n      parentElement,\r\n      controlledMenu,\r\n      parentMenu,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu.\r\n   *\r\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\r\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\r\n   */\r\n  open() {\r\n    // Close all siblings.\r\n    this.closeSiblings();\r\n\r\n    super.open();\r\n  }\r\n\r\n  /**\r\n   * Opens the controlled menu without the current focus entering it.\r\n   *\r\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\r\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\r\n   */\r\n  preview() {\r\n    // Close all siblings.\r\n    this.closeSiblings();\r\n\r\n    super.preview();\r\n  }\r\n\r\n  /**\r\n   * Closes the controlled menu.\r\n   *\r\n   * Calls the {@link MenubarToggle#closeChildren| closeChildren method}\r\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\r\n   */\r\n  close() {\r\n    if (this.isOpen) {\r\n      // Close all children.\r\n      this.closeChildren();\r\n    }\r\n\r\n    super.close();\r\n  }\r\n}\r\n\r\nexport default MenubarToggle;\r\n","import BaseMenu from \"./_baseMenu.js\";\r\nimport MenubarItem from \"./menubarItem.js\";\r\nimport MenubarToggle from \"./menubarToggle.js\";\r\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\r\nimport { isEventSupported } from \"./validate.js\";\r\n\r\n/**\r\n * An accessible menubar navigation in the DOM.\r\n *\r\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html|Navigation Menubar Example}\r\n *\r\n * @extends BaseMenu\r\n *\r\n * @example\r\n * // Import the class.\r\n * import { Menubar } from \"accessible-menu\";\r\n *\r\n * // Select the desired menu element.\r\n * const menuElement = document.querySelector(\"nav ul\");\r\n *\r\n * // Create the menu.\r\n * const menu = new Menubar({\r\n *   menuElement,\r\n * });\r\n */\r\nclass Menubar extends BaseMenu {\r\n  /**\r\n   * The class to use when generating submenus.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof Menubar}\r\n   */\r\n  _MenuType = Menubar;\r\n\r\n  /**\r\n   * The class to use when generating menu items.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof MenubarItem}\r\n   */\r\n  _MenuItemType = MenubarItem;\r\n\r\n  /**\r\n   * The class to use when generating submenu toggles.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof MenubarToggle}\r\n   */\r\n  _MenuToggleType = MenubarToggle;\r\n\r\n  /**\r\n   * Constructs the menu.\r\n   *\r\n   * @param {object}                 options                             - The options for generating the menu.\r\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\r\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\r\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\r\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\r\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\r\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\r\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\r\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\r\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\r\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\r\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\r\n   * @param {(Menubar|null)}         [options.parentMenu = null]         - The parent menu to this menu.\r\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\r\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\r\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuElement,\r\n    menuItemSelector = \"li\",\r\n    menuLinkSelector = \"a\",\r\n    submenuItemSelector = \"\",\r\n    submenuToggleSelector = \"a\",\r\n    submenuSelector = \"ul\",\r\n    controllerElement = null,\r\n    containerElement = null,\r\n    openClass = \"show\",\r\n    closeClass = \"hide\",\r\n    isTopLevel = true,\r\n    parentMenu = null,\r\n    hoverType = \"off\",\r\n    hoverDelay = 250,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuElement,\r\n      menuItemSelector,\r\n      menuLinkSelector,\r\n      submenuItemSelector,\r\n      submenuToggleSelector,\r\n      submenuSelector,\r\n      controllerElement,\r\n      containerElement,\r\n      openClass,\r\n      closeClass,\r\n      isTopLevel,\r\n      parentMenu,\r\n      hoverType,\r\n      hoverDelay,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the menu.\r\n   *\r\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\r\n   * as well as set up {@link Menubar#_handleFocus|focus},\r\n   * {@link Menubar#_handleClick|click},\r\n   * {@link Menubar#_handleHover|hover},\r\n   * {@link Menubar#_handleKeydown|keydown}, and\r\n   * {@link Menubar#_handleKeyup|keyup} events for the menu.\r\n   *\r\n   * This will also set the menu's `role` to \"menubar\" in the DOM.\r\n   *\r\n   * If the menu is a root menu the first menu item's `tabIndex` will be set to\r\n   * 0 in the DOM.\r\n   *\r\n   * If the BaseMenu's initialize method throws an error,\r\n   * this will catch it and log it to the console.\r\n   */\r\n  initialize() {\r\n    try {\r\n      super.initialize();\r\n\r\n      this.dom.menu.setAttribute(\"role\", \"menubar\");\r\n\r\n      this._handleFocus();\r\n      this._handleClick();\r\n      this._handleHover();\r\n      this._handleKeydown();\r\n      this._handleKeyup();\r\n\r\n      if (this.isTopLevel) {\r\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles click events throughout the menu for proper use.\r\n   *\r\n   * Depending on what is supported either `touchstart` and `touchend` or\r\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\r\n   *\r\n   * - Adds all event listeners listed in\r\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\r\n   * - adds a `touchend`/`mouseup` listener to the `document` so if the user\r\n   *   clicks outside of the menu it will close if it is open.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleClick() {\r\n    super._handleClick();\r\n\r\n    // Use touch over mouse events when supported.\r\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\r\n      ? \"touchend\"\r\n      : \"mouseup\";\r\n\r\n    // Close the menu if a click event happens outside of it.\r\n    document.addEventListener(endEventType, (event) => {\r\n      if (this.focusState !== \"none\") {\r\n        this.currentEvent = \"mouse\";\r\n\r\n        if (\r\n          !this.dom.menu.contains(event.target) &&\r\n          !this.dom.menu !== event.target\r\n        ) {\r\n          this.closeChildren();\r\n          this.blur();\r\n\r\n          if (this.elements.controller) {\r\n            this.elements.controller.close();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles keydown events throughout the menu for proper menu use.\r\n   *\r\n   * This method exists to assist the {@link Menubar#_handleKeyup|_handleKeyup method}.\r\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\r\n   * - Adds a `keydown` listener to the menu/all submenus.\r\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\r\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\r\n   *     and \"A\" through \"Z\".\r\n   *   - Completely closes the menu and moves focus out if the \"Tab\" key is pressed.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeydown() {\r\n    super._handleKeydown();\r\n\r\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\r\n      this.currentEvent = \"keyboard\";\r\n\r\n      const key = keyPress(event);\r\n\r\n      if (key === \"Tab\") {\r\n        // Hitting Tab:\r\n        // - Moves focus out of the menu.\r\n        if (this.elements.rootMenu.focusState !== \"none\") {\r\n          this.elements.rootMenu.blur();\r\n          this.elements.rootMenu.closeChildren();\r\n        } else {\r\n          this.elements.rootMenu.focus();\r\n        }\r\n      }\r\n\r\n      // Prevent default event actions if we're handling the keyup event.\r\n      if (key === \"Character\") {\r\n        preventEvent(event);\r\n      } else if (this.isTopLevel) {\r\n        if (this.focusState === \"self\") {\r\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\r\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\r\n          const controllerKeys = [\"Escape\"];\r\n\r\n          if (keys.includes(key)) {\r\n            preventEvent(event);\r\n          } else if (\r\n            this.currentMenuItem.isSubmenuItem &&\r\n            submenuKeys.includes(key)\r\n          ) {\r\n            preventEvent(event);\r\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\r\n            preventEvent(event);\r\n          }\r\n        }\r\n      } else {\r\n        const keys = [\r\n          \"Escape\",\r\n          \"ArrowRight\",\r\n          \"ArrowLeft\",\r\n          \"ArrowDown\",\r\n          \"ArrowUp\",\r\n          \"Home\",\r\n          \"End\",\r\n        ];\r\n        const submenuKeys = [\"Space\", \"Enter\"];\r\n\r\n        if (keys.includes(key)) {\r\n          preventEvent(event);\r\n        } else if (\r\n          this.currentMenuItem.isSubmenuItem &&\r\n          submenuKeys.includes(key)\r\n        ) {\r\n          preventEvent(event);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles keyup events throughout the menu for proper menu use.\r\n   *\r\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\r\n   *\r\n   * Adds the following keybindings (explanations are taken from the\r\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/menubar/menubar-1/menubar-1.html#kbd_label|Navigation Menubar Example}):\r\n   *\r\n   * <strong>Menubar</strong>\r\n   *\r\n   * | Key | Function |\r\n   * | --- | --- |\r\n   * | _Space_ or _Enter_ | Opens submenu and moves focus to first item in the submenu. |\r\n   * | _Right Arrow_ | <ul><li>Moves focus to the next item in the menubar.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\r\n   * | _Left Arrow_ | <ul><li>Moves focus to the previous item in the menubar.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\r\n   * | _Down Arrow_ | Opens submenu and moves focus to first item in the submenu. |\r\n   * | _Up Arrow_ | Opens submenu and moves focus to last item in the submenu. |\r\n   * | _Home_ | Moves focus to first item in the menubar. |\r\n   * | _End_ | Moves focus to last item in the menubar. |\r\n   * | _Character_ | <ul><li>Moves focus to next item in the menubar having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\r\n   *\r\n   * <strong>Submenu</strong>\r\n   *\r\n   * | Key | Function |\r\n   * | --- | --- |\r\n   * | _Space_ or _Enter_ | <ul><li>Activates menu item, causing the link to be activated.</li><li>NOTE: the links go to dummy pages; use the browser go-back function to return to this menubar example page.</li></ul> |\r\n   * | _Escape_ | <ul><li>Closes submenu.</li><li>Moves focus to parent menubar item.</li></ul> |\r\n   * | _Right Arrow_ | <ul><li>If focus is on an item with a submenu, opens the submenu and places focus on the first item.</li><li>If focus is on an item that does not have a submenu:<ul><li>Closes submenu.</li><li>Moves focus to next item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\r\n   * | _Left Arrow_ | <ul><li>Closes submenu and moves focus to parent menu item.</li><li>If parent menu item is in the menubar, also:<ul><li>moves focus to previous item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\r\n   * | _Down Arrow_ | <ul><li>Moves focus to the next item in the submenu.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\r\n   * | _Up Arrow_ | <ul><li>Moves focus to previous item in the submenu.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\r\n   * | Home | Moves focus to the first item in the submenu. |\r\n   * | End | Moves focus to the last item in the submenu. |\r\n   * | _Character_ | <ul><li>Moves focus to the next item having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeyup() {\r\n    super._handleKeyup();\r\n\r\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\r\n      this.currentEvent = \"keyboard\";\r\n\r\n      const key = keyPress(event);\r\n      const { altKey, crtlKey, metaKey } = event;\r\n      const modifier = altKey || crtlKey || metaKey;\r\n\r\n      if (key === \"Character\" && !modifier) {\r\n        // Hitting Character:\r\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\r\n        // - If none of the items have a name starting with the typed character, focus does not move.\r\n        preventEvent(event);\r\n        this.elements.rootMenu.currentEvent = \"character\";\r\n        this.focusNextChildWithCharacter(event.key);\r\n      } else if (this.isTopLevel) {\r\n        if (this.focusState === \"self\") {\r\n          if (key === \"Space\" || key === \"Enter\") {\r\n            // Hitting Space or Enter:\r\n            // - Opens submenu and moves focus to first item in the submenu.\r\n            if (this.currentMenuItem.isSubmenuItem) {\r\n              preventEvent(event);\r\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\r\n              this.currentMenuItem.elements.toggle.open();\r\n              // This ensures the the menu is _visually_ open before the child is focussed.\r\n              requestAnimationFrame(() => {\r\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n              });\r\n            } else {\r\n              this.currentMenuItem.dom.link.click();\r\n            }\r\n          } else if (key === \"ArrowRight\") {\r\n            // Hitting the Right Arrow:\r\n            // - Moves focus to the next item in the menubar.\r\n            // - If focus is on the last item, moves focus to the first item.\r\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\r\n            preventEvent(event);\r\n\r\n            // Store the current item's info if its an open dropdown.\r\n            const previousChildOpen =\r\n              this.currentMenuItem.isSubmenuItem &&\r\n              this.currentMenuItem.elements.toggle.isOpen;\r\n\r\n            this.focusNextChild();\r\n\r\n            // Open the newly focussed submenu if applicable.\r\n            if (previousChildOpen) {\r\n              if (this.currentMenuItem.isSubmenuItem) {\r\n                this.currentMenuItem.elements.childMenu.currentEvent =\r\n                  \"keyboard\";\r\n                this.currentMenuItem.elements.toggle.preview();\r\n              } else {\r\n                this.closeChildren();\r\n              }\r\n            }\r\n          } else if (key === \"ArrowLeft\") {\r\n            // Hitting the Left Arrow:\r\n            // - Moves focus to the previous item in the menubar.\r\n            // - If focus is on the first item, moves focus to the last item.\r\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\r\n            preventEvent(event);\r\n\r\n            // Store the current item's info if its an open dropdown.\r\n            const previousChildOpen =\r\n              this.currentMenuItem.isSubmenuItem &&\r\n              this.currentMenuItem.elements.toggle.isOpen;\r\n\r\n            this.focusPreviousChild();\r\n\r\n            // Open the newly focussed submenu if applicable.\r\n            if (previousChildOpen) {\r\n              if (this.currentMenuItem.isSubmenuItem) {\r\n                this.currentMenuItem.elements.childMenu.currentEvent =\r\n                  \"keyboard\";\r\n                this.currentMenuItem.elements.toggle.preview();\r\n              } else {\r\n                this.closeChildren();\r\n              }\r\n            }\r\n          } else if (key === \"ArrowDown\") {\r\n            // Hitting the Down Arrow:\r\n            // - Opens submenu and moves focus to first item in the submenu.\r\n            if (this.currentMenuItem.isSubmenuItem) {\r\n              preventEvent(event);\r\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\r\n              this.currentMenuItem.elements.toggle.open();\r\n              // This ensures the the menu is _visually_ open before the child is focussed.\r\n              requestAnimationFrame(() => {\r\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n              });\r\n            }\r\n          } else if (key === \"ArrowUp\") {\r\n            // Hitting the Up Arrow:\r\n            // - Opens submenu and moves focus to last item in the submenu.\r\n            if (this.currentMenuItem.isSubmenuItem) {\r\n              preventEvent(event);\r\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\r\n              this.currentMenuItem.elements.toggle.open();\r\n              // This ensures the the menu is _visually_ open before the child is focussed.\r\n              requestAnimationFrame(() => {\r\n                this.currentMenuItem.elements.childMenu.focusLastChild();\r\n              });\r\n            }\r\n          } else if (key === \"Home\") {\r\n            // Hitting Home:\r\n            // - Moves focus to first item in the menubar.\r\n            preventEvent(event);\r\n            this.focusFirstChild();\r\n          } else if (key === \"End\") {\r\n            // Hitting End:\r\n            // - Moves focus to last item in the menubar.\r\n            preventEvent(event);\r\n            this.focusLastChild();\r\n          } else if (key === \"Escape\") {\r\n            // Hitting Escape:\r\n            // - Closes menu.\r\n            const hasOpenChild = this.elements.submenuToggles.some(\r\n              (toggle) => toggle.isOpen\r\n            );\r\n\r\n            if (hasOpenChild) {\r\n              preventEvent(event);\r\n              this.closeChildren();\r\n            } else if (\r\n              this.isTopLevel &&\r\n              this.elements.controller &&\r\n              this.elements.controller.isOpen\r\n            ) {\r\n              preventEvent(event);\r\n              this.elements.controller.close();\r\n              this.focusController();\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (key === \"Space\" || key === \"Enter\") {\r\n          // Hitting Space or Enter:\r\n          // - Activates menu item, causing the link to be activated.\r\n          if (this.currentMenuItem.isSubmenuItem) {\r\n            preventEvent(event);\r\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\r\n            this.currentMenuItem.elements.toggle.open();\r\n            // This ensures the the menu is _visually_ open before the child is focussed.\r\n            requestAnimationFrame(() => {\r\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n            });\r\n          }\r\n        } else if (key === \"Escape\") {\r\n          // Hitting Escape:\r\n          // - Closes submenu.\r\n          // - Moves focus to parent menubar item.\r\n          preventEvent(event);\r\n          this.elements.rootMenu.closeChildren();\r\n          this.elements.rootMenu.focusCurrentChild();\r\n        } else if (key === \"ArrowRight\") {\r\n          // Hitting the Right Arrow:\r\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\r\n          // - If focus is on an item that does not have a submenu:\r\n          //   - Closes submenu.\r\n          //   - Moves focus to next item in the menubar.\r\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\r\n          if (this.currentMenuItem.isSubmenuItem) {\r\n            preventEvent(event);\r\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\r\n            this.currentMenuItem.elements.toggle.open();\r\n            // This ensures the the menu is _visually_ open before the child is focussed.\r\n            requestAnimationFrame(() => {\r\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n            });\r\n          } else {\r\n            preventEvent(event);\r\n            this.elements.rootMenu.closeChildren();\r\n            this.elements.rootMenu.focusNextChild();\r\n\r\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\r\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\r\n            }\r\n          }\r\n        } else if (key === \"ArrowLeft\") {\r\n          // Hitting the Left Arrow:\r\n          // - Closes submenu and moves focus to parent menu item.\r\n          // - If parent menu item is in the menubar, also:\r\n          //   - moves focus to previous item in the menubar.\r\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\r\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\r\n            preventEvent(event);\r\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\r\n            this.elements.parentMenu.focusCurrentChild();\r\n\r\n            if (this.elements.parentMenu === this.elements.rootMenu) {\r\n              this.elements.rootMenu.closeChildren();\r\n              this.elements.rootMenu.focusPreviousChild();\r\n\r\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\r\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\r\n                  \"keyboard\";\r\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\r\n              }\r\n            }\r\n          }\r\n        } else if (key === \"ArrowDown\") {\r\n          // Hitting the Down Arrow:\r\n          // - Moves focus to the next item in the menubar.\r\n          // - If focus is on the last item, moves focus to the first item.\r\n          preventEvent(event);\r\n          this.focusNextChild();\r\n        } else if (key === \"ArrowUp\") {\r\n          // Hitting the Up Arrow:\r\n          // - Moves focus to the previous item in the menubar.\r\n          // - If focus is on the first item, moves focus to the last item.\r\n          preventEvent(event);\r\n          this.focusPreviousChild();\r\n        } else if (key === \"Home\") {\r\n          // Hitting Home:\r\n          // - Moves focus to first item in the menubar.\r\n          preventEvent(event);\r\n          this.focusFirstChild();\r\n        } else if (key === \"End\") {\r\n          // Hitting End:\r\n          // - Moves focus to last item in the menubar.\r\n          preventEvent(event);\r\n          this.focusLastChild();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's next child.\r\n   *\r\n   * If the currently focussed child in the menu is the last child then this will\r\n   * focus the first child in the menu.\r\n   */\r\n  focusNextChild() {\r\n    // If the current child is the last child of the menu, focus the menu's first child.\r\n    if (this.currentChild === this.elements.menuItems.length - 1) {\r\n      this.focusFirstChild();\r\n    } else {\r\n      this.focusChild(this.currentChild + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's previous child.\r\n   *\r\n   * If the currently focussed child in the menu is the first child then this will\r\n   * focus the last child in the menu.\r\n   */\r\n  focusPreviousChild() {\r\n    // If the current child is the first child of the menu, focus the menu's last child.\r\n    if (this.currentChild === 0) {\r\n      this.focusLastChild();\r\n    } else {\r\n      this.focusChild(this.currentChild - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's next child starting with a specific letter.\r\n   *\r\n   * @param {string} char - The character to look for.\r\n   */\r\n  focusNextChildWithCharacter(char) {\r\n    // Ensure the character is lowercase just to be safe.\r\n    const match = char.toLowerCase();\r\n    let index = this.currentChild + 1;\r\n    let found = false;\r\n\r\n    while (!found && index < this.elements.menuItems.length) {\r\n      let text = \"\";\r\n\r\n      // Attempt to use the browser to get proper innerText,\r\n      // otherwise fall back to textContent.\r\n      if (this.elements.menuItems[index].dom.item.innerText) {\r\n        text = this.elements.menuItems[index].dom.item.innerText;\r\n      } else {\r\n        text = this.elements.menuItems[index].dom.item.textContent;\r\n      }\r\n\r\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\r\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\r\n\r\n      // Focus the child if the text matches, otherwise move on.\r\n      if (text === match) {\r\n        found = true;\r\n        this.focusChild(index);\r\n      }\r\n\r\n      index++;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Menubar;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuItem from \"./_baseMenuItem.js\";\r\n\r\n/**\r\n * A basic navigation link contained inside of a {@link Treeview}.\r\n *\r\n * @extends BaseMenuItem\r\n */\r\nclass TreeviewItem extends BaseMenuItem {\r\n  /**\r\n   * Constructs the menu item.\r\n   *\r\n   * @param {object}              options                         - The options for generating the menu item.\r\n   * @param {HTMLElement}         options.menuItemElement         - The menu item in the DOM.\r\n   * @param {HTMLElement}         options.menuLinkElement         - The menu item's link in the DOM.\r\n   * @param {Treeview}            options.parentMenu              - The parent menu.\r\n   * @param {boolean}             [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\r\n   * @param {Treeview|null}       [options.childMenu = null]      - The child menu.\r\n   * @param {TreeviewToggle|null} [options.toggle = null]         - The controller for the child menu.\r\n   * @param {boolean}             [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuItemElement,\r\n    menuLinkElement,\r\n    parentMenu,\r\n    isSubmenuItem = false,\r\n    childMenu = null,\r\n    toggle = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuItemElement,\r\n      menuLinkElement,\r\n      parentMenu,\r\n      isSubmenuItem,\r\n      childMenu,\r\n      toggle,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the menu item.\r\n   *\r\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\r\n   * as well as set the menu item's `role` to \"none\",\r\n   * the menu link's `role` to \"treeitem\", and\r\n   * the menu link's `tabIndex` to -1 in the DOM.\r\n   */\r\n  initialize() {\r\n    super.initialize();\r\n\r\n    this.dom.item.setAttribute(\"role\", \"none\");\r\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\r\n    this.dom.link.tabIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu item's link if the parent menu's\r\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\r\n   *\r\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\r\n   * as well as set the menu link's `tabIndex` to 0.\r\n   */\r\n  focus() {\r\n    super.focus();\r\n\r\n    this.dom.link.tabIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * Blurs the menu item's link if the parent menu's\r\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\r\n   *\r\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\r\n   * as well as set the menu link's `tabIndex` to -1.\r\n   */\r\n  blur() {\r\n    super.blur();\r\n\r\n    this.dom.link.tabIndex = -1;\r\n  }\r\n}\r\n\r\nexport default TreeviewItem;\r\n","/* eslint-disable jsdoc/no-undefined-types */\r\n\r\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\r\n\r\n/**\r\n * A link or button that controls the visibility of a {@link Treeview}.\r\n *\r\n * @extends BaseMenuToggle\r\n */\r\nclass TreeviewToggle extends BaseMenuToggle {\r\n  /**\r\n   * Constructs the menu toggle.\r\n   *\r\n   * @param {object}        options                     - The options for generating the menu toggle.\r\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\r\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\r\n   * @param {Treeview}      options.controlledMenu      - The menu controlled by this toggle.\r\n   * @param {Treeview|null} [options.parentMenu = null] - The menu containing this toggle.\r\n   * @param {boolean}       [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuToggleElement,\r\n    parentElement,\r\n    controlledMenu,\r\n    parentMenu = null,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuToggleElement,\r\n      parentElement,\r\n      controlledMenu,\r\n      parentMenu,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n}\r\n\r\nexport default TreeviewToggle;\r\n","import BaseMenu from \"./_baseMenu.js\";\r\nimport TreeviewItem from \"./treeviewItem.js\";\r\nimport TreeviewToggle from \"./treeviewToggle.js\";\r\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\r\n\r\n/**\r\n * An accessible treeview navigation in the DOM.\r\n *\r\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html|Navigation Treeview Example Using Computed Properties}\r\n *\r\n * @extends BaseMenu\r\n *\r\n * @example\r\n * // Import the class.\r\n * import { Treeview } from \"accessible-menu\";\r\n *\r\n * // Select the desired menu element.\r\n * const menuElement = document.querySelector(\"nav ul\");\r\n *\r\n * // Create the menu.\r\n * const menu = new Treeview({\r\n *   menuElement,\r\n * });\r\n */\r\nclass Treeview extends BaseMenu {\r\n  /**\r\n   * The class to use when generating submenus.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof Treeview}\r\n   */\r\n  _MenuType = Treeview;\r\n\r\n  /**\r\n   * The class to use when generating menu items.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof TreeviewItem}\r\n   */\r\n  _MenuItemType = TreeviewItem;\r\n\r\n  /**\r\n   * The class to use when generating submenu toggles.\r\n   *\r\n   * @protected\r\n   *\r\n   * @type {typeof TreeviewToggle}\r\n   */\r\n  _MenuToggleType = TreeviewToggle;\r\n\r\n  /**\r\n   * Constructs the menu.\r\n   *\r\n   * @param {object}                 options                             - The options for generating the menu.\r\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\r\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\r\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\r\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\r\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\r\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\r\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\r\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\r\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\r\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\r\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\r\n   * @param {(Treeview|null)}        [options.parentMenu = null]         - The parent menu to this menu.\r\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\r\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\r\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\r\n   */\r\n  constructor({\r\n    menuElement,\r\n    menuItemSelector = \"li\",\r\n    menuLinkSelector = \"a\",\r\n    submenuItemSelector = \"\",\r\n    submenuToggleSelector = \"a\",\r\n    submenuSelector = \"ul\",\r\n    controllerElement = null,\r\n    containerElement = null,\r\n    openClass = \"show\",\r\n    closeClass = \"hide\",\r\n    isTopLevel = true,\r\n    parentMenu = null,\r\n    hoverType = \"off\",\r\n    hoverDelay = 250,\r\n    initialize = true,\r\n  }) {\r\n    super({\r\n      menuElement,\r\n      menuItemSelector,\r\n      menuLinkSelector,\r\n      submenuItemSelector,\r\n      submenuToggleSelector,\r\n      submenuSelector,\r\n      controllerElement,\r\n      containerElement,\r\n      openClass,\r\n      closeClass,\r\n      isTopLevel,\r\n      parentMenu,\r\n      hoverType,\r\n      hoverDelay,\r\n    });\r\n\r\n    if (initialize) {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the menu.\r\n   *\r\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\r\n   * as well as set up {@link Treeview#_handleFocus|focus},\r\n   * {@link Treeview#_handleClick|click},\r\n   * {@link Treeview#_handleHover|hover},\r\n   * {@link Treeview#_handleKeydown|keydown}, and\r\n   * {@link Treeview#_handleKeyup|keyup} events for the menu.\r\n   *\r\n   * If the menu is a root menu it's `role` will be set to \"tree\" and the first\r\n   * menu item's `tabIndex` will be set to 0 in the DOM.\r\n   *\r\n   * If the menu is _not_ a root menu it's `role` will be set to \"group\".\r\n   *\r\n   * If the BaseMenu's initialize method throws an error,\r\n   * this will catch it and log it to the console.\r\n   */\r\n  initialize() {\r\n    try {\r\n      super.initialize();\r\n\r\n      if (this.isTopLevel) {\r\n        this.dom.menu.setAttribute(\"role\", \"tree\");\r\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\r\n      } else {\r\n        this.dom.menu.setAttribute(\"role\", \"group\");\r\n      }\r\n\r\n      this._handleFocus();\r\n      this._handleClick();\r\n      this._handleHover();\r\n      this._handleKeydown();\r\n      this._handleKeyup();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keydown events throughout the menu for proper menu use.\r\n   *\r\n   * This method exists to assist the {@link Treeview#_handleKeyup|_handleKeyup method}.\r\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\r\n   * - Adds a `keydown` listener to the menu/all submenus.\r\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\r\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\r\n   *     \"*\" (asterisk), and \"A\" through \"Z\".\r\n   *   - Moves focus out if the \"Tab\" key is pressed.\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeydown() {\r\n    super._handleKeydown();\r\n\r\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\r\n      this.currentEvent = \"keyboard\";\r\n\r\n      const key = keyPress(event);\r\n\r\n      if (key === \"Tab\") {\r\n        // Hitting Tab:\r\n        // - Moves focus out of the menu.\r\n        if (this.elements.rootMenu.focusState !== \"none\") {\r\n          this.elements.rootMenu.blur();\r\n        } else {\r\n          this.elements.rootMenu.focus();\r\n        }\r\n      }\r\n\r\n      if (this.focusState === \"self\") {\r\n        const keys = [\r\n          \"Space\",\r\n          \"ArrowUp\",\r\n          \"ArrowDown\",\r\n          \"ArrowLeft\",\r\n          \"Asterisk\",\r\n          \"Home\",\r\n          \"End\",\r\n        ];\r\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\r\n        const controllerKeys = [\"Escape\"];\r\n\r\n        if (keys.includes(key)) {\r\n          preventEvent(event);\r\n        } else if (\r\n          this.currentMenuItem.isSubmenuItem &&\r\n          submenuKeys.includes(key)\r\n        ) {\r\n          preventEvent(event);\r\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\r\n          preventEvent(event);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles keyup events throughout the menu for proper menu use.\r\n   *\r\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\r\n   *\r\n   * Adds the following keybindings (explanations are taken from the\r\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/treeview/treeview-2/treeview-2a.html#kbd_label|Navigation Treeview Example Using Computed Properties}):\r\n   *\r\n   * | Key | Function |\r\n   * | --- | --- |\r\n   * | _Enter_ or _Space_ | Performs the default action (e.g. onclick event) for the focused node. |\r\n   * | _Down arrow_ | <ul><li>Moves focus to the next node that is focusable without opening or closing a node.</li><li>If focus is on the last node, does nothing.</li></ul> |\r\n   * | _Up arrow_ | <ul><li>Moves focus to the previous node that is focusable without opening or closing a node.</li><li>If focus is on the first node, does nothing.</li></ul> |\r\n   * | _Right arrow_ | <ul><li>When focus is on a closed node, opens the node; focus does not move.</li><li>When focus is on a open node, moves focus to the first child node.</li><li>When focus is on an end node, does nothing.</li></ul> |\r\n   * | _Left arrow_ | <ul><li>When focus is on an open node, closes the node.</li><li>When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.</li><li>When focus is on a root node that is also either an end node or a closed node, does nothing.</li></ul> |\r\n   * | _Home_ | Moves focus to first node without opening or closing a node. |\r\n   * | _End_ | Moves focus to the last node that can be focused without expanding any nodes that are closed. |\r\n   * | _a-z_, _A-Z_ | <ul><li>Focus moves to the next node with a name that starts with the typed character.</li><li>Search wraps to first node if a matching name is not found among the nodes that follow the focused node.</li><li>Search ignores nodes that are descendants of closed nodes.</li></ul> |\r\n   * | _* (asterisk)_ | <ul><li>Expands all closed sibling nodes that are at the same level as the focused node.</li><li>Focus does not move.</li></ul> |\r\n   * | _Escape_ | If the root menu is collapsible, collapses the menu and focuses the menu's controlling element. |\r\n   *\r\n   * @protected\r\n   */\r\n  _handleKeyup() {\r\n    super._handleKeyup();\r\n\r\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\r\n      this.currentEvent = \"keyboard\";\r\n\r\n      const key = keyPress(event);\r\n      const { altKey, crtlKey, metaKey } = event;\r\n      const modifier = altKey || crtlKey || metaKey;\r\n\r\n      if (key === \"Character\" && !modifier) {\r\n        // Hitting Character:\r\n        // - Focus moves to the next node with a name that starts with the typed character.\r\n        // - Search wraps to first node if a matching name is not found among the nodes that follow the focused node.\r\n        // - Search ignores nodes that are descendants of closed nodes.\r\n        preventEvent(event);\r\n        this.elements.rootMenu.currentEvent = \"character\";\r\n        this.focusNextNodeWithCharacter(event.key);\r\n      } else if (this.focusState === \"self\") {\r\n        if (key === \"Enter\" || key === \"Space\") {\r\n          // Hitting Space or Enter:\r\n          // - Performs the default action (e.g. onclick event) for the focused node.\r\n          // - If focus is on a closed node, opens the node; focus does not move.\r\n          preventEvent(event);\r\n\r\n          if (this.currentMenuItem.isSubmenuItem) {\r\n            if (this.currentMenuItem.elements.toggle.isOpen) {\r\n              this.currentMenuItem.elements.toggle.close();\r\n            } else {\r\n              this.currentMenuItem.elements.toggle.preview();\r\n            }\r\n          } else {\r\n            this.currentMenuItem.dom.link.click();\r\n          }\r\n        } else if (key === \"Escape\") {\r\n          if (\r\n            this.isTopLevel &&\r\n            this.elements.controller &&\r\n            this.elements.controller.isOpen\r\n          ) {\r\n            this.elements.controller.close();\r\n            this.focusController();\r\n          }\r\n        } else if (key === \"ArrowDown\") {\r\n          // Hitting the Down Arrow:\r\n          // - Moves focus to the next node that is focusable without opening or closing a node.\r\n          // - If focus is on the last node, does nothing.\r\n          preventEvent(event);\r\n\r\n          if (\r\n            this.currentMenuItem.isSubmenuItem &&\r\n            this.currentMenuItem.elements.toggle.isOpen\r\n          ) {\r\n            this.blurCurrentChild();\r\n            this.currentMenuItem.elements.childMenu.currentEvent =\r\n              this.currentEvent;\r\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n          } else if (\r\n            !this.isTopLevel &&\r\n            this.currentChild === this.elements.menuItems.length - 1\r\n          ) {\r\n            this.focusParentsNextChild();\r\n          } else {\r\n            this.focusNextChild();\r\n          }\r\n        } else if (key === \"ArrowUp\") {\r\n          // Hitting the Up Arrow:\r\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\r\n          // - If focus is on the first node, does nothing.\r\n          preventEvent(event);\r\n\r\n          const previousMenuItem =\r\n            this.elements.menuItems[this.currentChild - 1];\r\n\r\n          if (\r\n            previousMenuItem &&\r\n            previousMenuItem.isSubmenuItem &&\r\n            previousMenuItem.elements.toggle.isOpen\r\n          ) {\r\n            this.blurCurrentChild();\r\n            this.currentChild = this.currentChild - 1;\r\n            this.currentMenuItem.elements.childMenu.currentEvent =\r\n              this.currentEvent;\r\n            this.focusChildsLastNode();\r\n          } else if (!this.isTopLevel && this.currentChild === 0) {\r\n            this.blurCurrentChild();\r\n            this.elements.parentMenu.currentEvent = this.currentEvent;\r\n            this.elements.parentMenu.focusCurrentChild();\r\n          } else {\r\n            this.focusPreviousChild();\r\n          }\r\n        } else if (key === \"ArrowRight\") {\r\n          // Hitting the Right Arrow:\r\n          // - When focus is on a closed node, opens the node; focus does not move.\r\n          // - When focus is on a open node, moves focus to the first child node.\r\n          // - When focus is on an end node, does nothing.\r\n          if (this.currentMenuItem.isSubmenuItem) {\r\n            preventEvent(event);\r\n\r\n            if (this.currentMenuItem.elements.toggle.isOpen) {\r\n              this.blurCurrentChild();\r\n              this.currentMenuItem.elements.childMenu.currentEvent =\r\n                this.currentEvent;\r\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\r\n            } else {\r\n              this.currentMenuItem.elements.toggle.preview();\r\n            }\r\n          }\r\n        } else if (key === \"ArrowLeft\") {\r\n          // Hitting the Left Arrow:\r\n          // - When focus is on an open node, closes the node.\r\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\r\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\r\n          preventEvent(event);\r\n\r\n          if (\r\n            this.currentMenuItem.isSubmenuItem &&\r\n            this.currentMenuItem.elements.toggle.isOpen\r\n          ) {\r\n            this.currentMenuItem.elements.childMenu.blurCurrentChild();\r\n            this.currentMenuItem.elements.toggle.close();\r\n          } else if (!this.isTopLevel) {\r\n            this.blurCurrentChild();\r\n            this.elements.parentMenu.currentEvent = this.currentEvent;\r\n            this.elements.parentMenu.focusCurrentChild();\r\n          }\r\n        } else if (key === \"Home\") {\r\n          // Hitting Home:\r\n          // - Moves focus to first node without opening or closing a node.\r\n          preventEvent(event);\r\n          this.blurCurrentChild();\r\n          this.elements.rootMenu.focusFirstChild();\r\n        } else if (key === \"End\") {\r\n          // Hitting End:\r\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\r\n          preventEvent(event);\r\n          this.blurCurrentChild();\r\n          this.elements.rootMenu.focusLastNode();\r\n        } else if (key === \"Asterisk\") {\r\n          // Hitting Asterisk:\r\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\r\n          // - Focus does not move.\r\n          preventEvent(event);\r\n          this.openChildren();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's last node of the entire expanded menu.\r\n   *\r\n   * This includes all _open_ child menu items.\r\n   */\r\n  focusLastNode() {\r\n    const numberOfItems = this.elements.menuItems.length - 1;\r\n    const lastChild = this.elements.menuItems[numberOfItems];\r\n\r\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\r\n      this.currentChild = numberOfItems;\r\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\r\n      lastChild.elements.childMenu.focusLastNode();\r\n    } else {\r\n      this.focusLastChild();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open all submenu children.\r\n   */\r\n  openChildren() {\r\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\r\n  }\r\n\r\n  /**\r\n   * Focus the menu's next node starting with a specific letter.\r\n   *\r\n   * This includes all _open_ child menu items.\r\n   *\r\n   * Wraps to the first node if no match is found after the current node.\r\n   *\r\n   * @param {string} char - The character to look for.\r\n   */\r\n  focusNextNodeWithCharacter(char) {\r\n    /**\r\n     * Gets all the menu's items and submenu's items.\r\n     *\r\n     * @param  {Treeview}       menu - The menu.\r\n     * @return {TreeviewItem[]}      - The menu items.\r\n     */\r\n    function getOpenMenuItems(menu) {\r\n      let menuItems = [];\r\n\r\n      menu.elements.menuItems.forEach((menuItem) => {\r\n        menuItems.push(menuItem);\r\n\r\n        if (menuItem.isSubmenuItem && menuItem.elements.toggle.isOpen) {\r\n          menuItems = [\r\n            ...menuItems,\r\n            ...getOpenMenuItems(\r\n              menuItem.elements.toggle.elements.controlledMenu\r\n            ),\r\n          ];\r\n        }\r\n      });\r\n\r\n      return menuItems;\r\n    }\r\n\r\n    // Ensure the character is lowercase just to be safe.\r\n    const match = char.toLowerCase();\r\n    // Sort the menu items so the child _after_ the current child is first to be searched.\r\n    const menuItems = getOpenMenuItems(this.elements.rootMenu);\r\n    const currentItem = menuItems.indexOf(this.currentMenuItem) + 1;\r\n    const sortedMenuItems = [\r\n      ...menuItems.slice(currentItem),\r\n      ...menuItems.slice(0, currentItem),\r\n    ];\r\n    let ctr = 0;\r\n    let found = false;\r\n\r\n    while (!found && ctr < sortedMenuItems.length) {\r\n      let text = \"\";\r\n\r\n      // Attempt to use the browser to get proper innerText,\r\n      // otherwise fall back to textContent.\r\n      if (sortedMenuItems[ctr].dom.item.innerText) {\r\n        text = sortedMenuItems[ctr].dom.item.innerText;\r\n      } else {\r\n        text = sortedMenuItems[ctr].dom.item.textContent;\r\n      }\r\n\r\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\r\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\r\n\r\n      // Focus the child if the text matches, otherwise move on.\r\n      if (text === match) {\r\n        found = true;\r\n        const menu = sortedMenuItems[ctr].elements.parentMenu;\r\n        const index = menu.elements.menuItems.indexOf(sortedMenuItems[ctr]);\r\n        this.elements.rootMenu.blurChildren();\r\n        menu.focusChild(index);\r\n      }\r\n\r\n      ctr++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the parent menu's next child.\r\n   *\r\n   * This will cascade up through to the root menu.\r\n   */\r\n  focusParentsNextChild() {\r\n    if (!this.elements.parentMenu) return;\r\n\r\n    this.elements.parentMenu.currentEvent = this.currentEvent;\r\n\r\n    if (\r\n      this.elements.parentMenu.currentChild ===\r\n      this.elements.parentMenu.elements.menuItems.length - 1\r\n    ) {\r\n      this.elements.parentMenu.blurCurrentChild();\r\n      this.elements.parentMenu.focusParentsNextChild();\r\n    } else {\r\n      this.blurChildren();\r\n      this.elements.parentMenu.focusNextChild();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the last child of the current child's submenu.\r\n   *\r\n   * This will cascade down through to the last open menu.\r\n   */\r\n  focusChildsLastNode() {\r\n    this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\r\n    this.currentMenuItem.elements.childMenu.focusLastChild();\r\n\r\n    if (\r\n      this.currentMenuItem.elements.childMenu.currentMenuItem.isSubmenuItem &&\r\n      this.currentMenuItem.elements.childMenu.currentMenuItem.elements.toggle\r\n        .isOpen\r\n    ) {\r\n      this.currentMenuItem.elements.childMenu.blurCurrentChild();\r\n      this.currentMenuItem.elements.childMenu.focusChildsLastNode();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Treeview;\r\n","import DisclosureMenu from \"./src/disclosureMenu.js\";\r\nimport Menubar from \"./src/menubar.js\";\r\nimport Treeview from \"./src/treeview.js\";\r\n\r\nexport default {\r\n  DisclosureMenu,\r\n  Menubar,\r\n  Treeview,\r\n};\r\n"],"names":["isValidInstance","contructor","elements","_typeof","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","toggle","parent","CustomEvent","bubbles","detail","_dom","_elements","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","_open","emit","closeClass","openClass","classList","add","remove","dispatchEvent","_expandEvent","_collapseEvent","focusState","_expand","isOpen","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","_submenu","shouldFocus","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","menuLinks","rootMenu","_selectors","_openClass","_closeClass","_root","_hoverType","_hoverDelay","_validate","_findRootMenu","_setDOMElements","_MenuToggleType","_createChildElements","_currentChild","setParentChild","updateEvents","currentEvent","index","found","menuItem","focusChild","_focusState","_currentEvent","submenuToggle","base","overwrite","selectors","domElements","from","querySelectorAll","filteredElements","filter","_setDOMElementType","_resetDOMElementType","toggler","submenu","_MenuType","push","_MenuItemType","addEventListener","startEventType","endEventTypes","toggleToggle","blurChildren","endEventType","preview","some","focusCurrentChild","setTimeout","focusFirstChild","currentMenuItem","blurCurrentChild","DisclosureMenuItem","initialize","DisclosureMenuToggle","closeSiblings","closeChildren","DisclosureMenu","optionalKeySupport","_optionalSupport","_handleFocus","_handleClick","_handleHover","_handleKeydown","_handleKeyup","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","focusController","focusNextChild","focusPreviousChild","focusLastChild","MenubarItem","tabIndex","MenubarToggle","Menubar","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","previousChildOpen","char","text","textContent","charAt","TreeviewItem","TreeviewToggle","Treeview","focusNextNodeWithCharacter","focusParentsNextChild","previousMenuItem","focusChildsLastNode","focusLastNode","openChildren","numberOfItems","lastChild","getOpenMenuItems","currentItem","indexOf","sortedMenuItems","ctr"],"mappings":"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"}