{"version":3,"file":"accessible-menu.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js","../src/treeviewItem.js","../src/treeviewToggle.js","../src/treeview.js","../rollup.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}        param0                     - The menu toggle object.\n   * @param {HTMLElement}   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   param0.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states to parent & child.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      this.elements.controlledMenu.focusState = \"none\";\n\n      // Collapse the controlled menu.\n      this.collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * Will return false unless any of the following criteria are met:\n   * - The menu's currentEvent is \"keyboard\".\n   * - The menu's currentEvent is \"character\".\n   * - The menu's currentEvent is \"mouse\" _and_ the menu's hoverType is \"dynamic\".\n   *\n   * @returns {boolean} - The flag.\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this.submenuOpenClass !== value) {\n      this.submenuOpenClass = value;\n    }\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this.submenuCloseClass !== value) {\n      this.submenuCloseClass = value;\n    }\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * - Attempting to set a value < -1 will set the currentChild to -1.\n   * - Attempting to set a value >= the number of menu items will set the currentChild to the number of menu items - 1.\n   *\n   * If the current menu has a parent menu _and_ the menu's current event is \"mouse\",\n   * The parent menu will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this.focussedChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this.focussedChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this.focussedChild = value;\n      setParentChild(this);\n    }\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this.state !== value) {\n      this.state = value;\n    }\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this.event !== value) {\n      this.event = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this.hover !== value) {\n      this.hover = value;\n    }\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this.delay !== value) {\n      this.delay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuOpenClass !== \"\" &&\n      !isValidClassList({ openClass: submenuOpenClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuCloseClass !== \"\" &&\n      !isValidClassList({ closeClass: submenuCloseClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    // Use touch over mouse events when supported.\n    const startEventType = isEventSupported(\"touchstart\", this.dom.menu)\n      ? \"touchstart\"\n      : \"mousedown\";\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(startEventType, () => {\n        this.currentEvent = \"mouse\";\n        this.elements.rootMenu.blurChildren();\n        this.focusChild(index);\n      });\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle[`on${endEventType}`] = (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, item.elements.toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle[`on${endEventType}`] = (event) => {\n        this.currentEvent = \"mouse\";\n        toggleToggle(this, this.elements.controller, event);\n      };\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a DisclosureMenu.\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                    param0                         - The menu item object.\n   * @param {HTMLElement}               param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                   [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a DisclosureMenu.\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                     - The menu toggle object.\n   * @param {HTMLElement}         param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         param0.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType, isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                               - The menu object.\n   * @param {HTMLElement}         param0.menuElement                   - The menu element in the DOM.\n   * @param {string}              [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}              [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}              [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}              [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}              [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}    [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}    [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}              [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}              [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}             [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {DisclosureMenu|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}              [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}              [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}             [param0.optionalKeySupport = false]  - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}             [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = DisclosureMenu;\n    this.MenuItemType = DisclosureMenuItem;\n    this.MenuToggleType = DisclosureMenuToggle;\n\n    this.currentChild = -1;\n    this.optionalKeySupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @returns {boolean} - The flag.\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this.optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  /**\n   * Set the flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   *\n   * @param {boolean} value - The flag.\n   */\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this.optionalSupport = value;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Menubar.\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}             param0                         - The menu item object.\n   * @param {HTMLElement}        param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            param0.parentMenu              - The parent menu.\n   * @param {boolean}            [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [param0.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}            [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item by setting its role and tab index.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link and set proper tabIndex.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link and set proper tabIndex.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Menubar.\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}       param0                     - The menu toggle object.\n   * @param {HTMLElement}  param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}  param0.parentElement       - The element containing the controlled menu.\n   * @param {Menubar}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {Menubar|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}      [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\nimport { isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html\n */\nclass Menubar extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}           param0                               - The menu object.\n   * @param {HTMLElement}      param0.menuElement                   - The menu element in the DOM.\n   * @param {string}           [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}           [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}           [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}           [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}           [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null} [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null} [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}           [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}           [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}          [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Menubar|null}     [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}           [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}           [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}          [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    this.MenuType = Menubar;\n    this.MenuItemType = MenubarItem;\n    this.MenuToggleType = MenubarToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.dom.menu.setAttribute(\"role\", \"menubar\");\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n\n      this.elements.menuItems[0].dom.link.tabIndex = 0;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            } else {\n              this.currentMenuItem.dom.link.click();\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              (toggle) => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    // If the current child is the last child of the menu, focus the menu's first child.\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.focusChild(this.currentChild + 1);\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    // If the current child is the first child of the menu, focus the menu's last child.\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.focusChild(this.currentChild - 1);\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      // Ensure the text in the item is lowercase just to be safe.\n      const text =\n        this.elements.menuItems[index].dom.item.innerText.toLowerCase();\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text.startsWith(match)) {\n        found = true;\n        this.focusChild(index);\n      }\n\n      index++;\n    }\n  }\n}\n\nexport default Menubar;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Treeview.\n */\nclass TreeviewItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Treeview|null}       [param0.childMenu = null]      - The child menu.\n   * @param {TreeviewToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}             [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item by setting its role and tab index.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link and set proper tabIndex.\n   */\n  focus() {\n    super.focus();\n\n    this.dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Blurs the menu item's link and set proper tabIndex.\n   */\n  blur() {\n    super.blur();\n\n    this.dom.link.tabIndex = -1;\n  }\n}\n\nexport default TreeviewItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a TreeviewNavigation.\n */\nclass TreeviewNavigationToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                  param0                     - The menu toggle object.\n   * @param {HTMLElement}             param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}             param0.parentElement       - The element containing the controlled menu.\n   * @param {TreeviewNavigation}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {TreeviewNavigation|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                 [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TreeviewNavigationToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TreeviewItem from \"./treeviewItem.js\";\nimport TreeviewToggle from \"./treeviewToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html\n * or https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2b.html\n */\nclass Treeview extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}           param0                               - The menu object.\n   * @param {HTMLElement}      param0.menuElement                   - The menu element in the DOM.\n   * @param {string}           [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}           [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}           [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}           [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}           [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null} [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null} [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}           [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}           [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}          [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Treeview|null}    [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}           [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}           [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}          [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = Treeview;\n    this.MenuItemType = TreeviewItem;\n    this.MenuToggleType = TreeviewToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"tree\");\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"group\");\n      }\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"Space\",\n          \"ArrowUp\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Asterisk\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\n        const controllerKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Character\") {\n        // Hitting Character:\n        // - Focus moves to the next node with a name that starts with the typed character.\n        // - Search wraps to first node if a matching name is not found among the nodes that follow the focused node.\n        // - Search ignores nodes that are descendants of closed nodes.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextNodeWithCharacter(event.key);\n      } else if (this.focusState === \"self\") {\n        if (key === \"Enter\" || key === \"Space\") {\n          // Hitting Space or Enter:\n          // - Performs the default action (e.g. onclick event) for the focused node.\n          // - If focus is on a closed node, opens the node; focus does not move.\n          preventEvent(event);\n\n          if (this.currentMenuItem.isSubmenuItem) {\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next node that is focusable without opening or closing a node.\n          // - If focus is on the last node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else if (\n            !this.isTopLevel &&\n            this.currentChild === this.elements.menuItems.length - 1\n          ) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusNextChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\n          // - If focus is on the first node, does nothing.\n          preventEvent(event);\n\n          const previousMenuItem =\n            this.elements.menuItems[this.currentChild - 1];\n\n          if (\n            previousMenuItem &&\n            previousMenuItem.isSubmenuItem &&\n            previousMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentChild = this.currentChild - 1;\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusLastChild();\n          } else if (!this.isTopLevel && this.currentChild === 0) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          } else {\n            this.focusPreviousChild();\n          }\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - When focus is on a closed node, opens the node; focus does not move.\n          // - When focus is on a open node, moves focus to the first child node.\n          // - When focus is on an end node, does nothing.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.blurCurrentChild();\n              this.currentMenuItem.elements.childMenu.currentEvent =\n                this.currentEvent;\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - When focus is on an open node, closes the node.\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.blurCurrentChild();\n            this.currentMenuItem.elements.toggle.close();\n          } else if (!this.isTopLevel) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          }\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first node without opening or closing a node.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusLastNode();\n        } else if (key === \"Asterisk\") {\n          // Hitting Asterisk:\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\n          // - Focus does not move.\n          preventEvent(event);\n          this.openChildren();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's last node of the entire expanded menu.\n   *\n   * This includes all _open_ child menu items.\n   */\n  focusLastNode() {\n    const numberOfItems = this.elements.menuItems.length - 1;\n    const lastChild = this.elements.menuItems[numberOfItems];\n\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\n      this.currentChild = numberOfItems;\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\n      lastChild.elements.childMenu.focusLastNode();\n    } else {\n      this.focusLastChild();\n    }\n  }\n\n  /**\n   * Open all submenu children.\n   */\n  openChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\n  }\n\n  /**\n   * Focus the menu's next node starting with a specific letter.\n   *\n   * Wraps to the first node if no match is found after the current node.\n   *\n   * This includes all _open_ child menu items.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextNodeWithCharacter(char) {\n    /**\n     * Gets all the menu's items and submenu's items.\n     *\n     * @param {Treeview} menu - The menu.\n     *\n     * @returns {TreeviewItem[]} - The menu items.\n     */\n    function getOpenMenuItems(menu) {\n      let menuItems = [];\n\n      menu.elements.menuItems.forEach((menuItem) => {\n        menuItems.push(menuItem);\n\n        if (menuItem.isSubmenuItem && menuItem.elements.toggle.isOpen) {\n          menuItems = [\n            ...menuItems,\n            ...getOpenMenuItems(\n              menuItem.elements.toggle.elements.controlledMenu\n            ),\n          ];\n        }\n      });\n\n      return menuItems;\n    }\n\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    // Sort the menu items so the child _after_ the current child is first to be searched.\n    const menuItems = getOpenMenuItems(this.elements.rootMenu);\n    const currentItem = menuItems.indexOf(this.currentMenuItem) + 1;\n    const sortedMenuItems = [\n      ...menuItems.slice(currentItem),\n      ...menuItems.slice(0, currentItem),\n    ];\n    let ctr = 0;\n    let found = false;\n\n    while (!found && ctr < sortedMenuItems.length) {\n      // Ensure the text in the item is lowercase just to be safe.\n      const text = sortedMenuItems[ctr].dom.item.innerText.toLowerCase();\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text.startsWith(match)) {\n        found = true;\n        const menu = sortedMenuItems[ctr].elements.parentMenu;\n        const index = menu.elements.menuItems.indexOf(sortedMenuItems[ctr]);\n        this.elements.rootMenu.blurChildren();\n        menu.focusChild(index);\n      }\n\n      ctr++;\n    }\n  }\n}\n\nexport default Treeview;\n","import DisclosureMenu from \"./src/disclosureMenu.js\";\nimport Menubar from \"./src/menubar.js\";\nimport Treeview from \"./src/treeview.js\";\n\nexport default {\n  DisclosureMenu,\n  Menubar,\n  Treeview,\n};\n"],"names":["isValidInstance","contructor","elements","_typeof","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","emit","closeClass","openClass","classList","add","remove","dispatchEvent","focusState","expand","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","shouldFocus","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","findRootMenu","setDOMElements","createChildElements","setParentChild","updateEvents","currentEvent","index","found","menuItem","focusChild","submenuToggle","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","setDOMElementType","clearDOMElementType","addDOMElementType","toggler","submenu","push","addEventListener","startEventType","endEventType","toggleToggle","blurChildren","preview","some","focusCurrentChild","setTimeout","focusFirstChild","currentMenuItem","blurCurrentChild","DisclosureMenuItem","DisclosureMenuToggle","closeSiblings","closeChildren","DisclosureMenu","optionalKeySupport","optionalSupport","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","focusController","focusNextChild","focusPreviousChild","focusLastChild","MenubarItem","tabIndex","MenubarToggle","Menubar","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","previousChildOpen","char","text","TreeviewItem","TreeviewNavigationToggle","Treeview","TreeviewToggle","focusNextNodeWithCharacter","previousMenuItem","focusLastNode","openChildren","numberOfItems","lastChild","getOpenMenuItems","currentItem","indexOf","sortedMenuItems","ctr"],"mappings":"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"}