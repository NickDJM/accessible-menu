{"version":3,"file":"accessible-menu.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js","../src/topLinkDisclosureMenuItem.js","../src/topLinkDisclosureMenuToggle.js","../src/topLinkDisclosureMenu.js","../src/treeviewItem.js","../src/treeviewToggle.js","../src/treeview.js","../rollup.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {object}  contructor - The constructor to check for.\n * @param  {object}  elements   - The element(s) to check.\n * @return {boolean}            - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {string}  type   - The type to check for.\n * @param  {object}  values - The value(s) to check.\n * @return {boolean}        - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string, string[]>} values - The value(s) to check.\n * @return {boolean}                         - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param  {string}               tagName  - The name of the tag.\n * @param  {Object<HTMLElement>} elements - The element(s) to check.\n * @return {boolean}                       - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param  {string}      event   - The event type.\n * @param  {HTMLElement} element - The element to check.\n * @return {boolean}             - The result.\n *\n * @deprecated Will be removed in v4 unless there is a new found need for it.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * The DOM elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  _dom = {\n    toggle: null,\n    parent: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  _elements = {\n    controlledMenu: null,\n    parentMenu: null,\n  };\n\n  /**\n   * The open state of the menu toggle.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _open = false;\n\n  /**\n   * Expand event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuExpand\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Collapse event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuCollapse\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Set DOM elements.\n    this._dom.toggle = menuToggleElement;\n    this._dom.parent = parentElement;\n\n    // Set menu elements.\n    this._elements.controlledMenu = controlledMenu;\n    this._elements.parentMenu = parentMenu;\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this._collapse(false);\n  }\n\n  /**\n   * Get the DOM elements within the toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * Get the declared accessible-menu elements within the menu toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * Get the open state on the menu.\n   *\n   * @type {boolean}\n   *\n   * @see _open\n   */\n  get isOpen() {\n    return this._open;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this._open = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuExpand\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  _expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuCollapse\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  _collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this._collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @protected\n   *\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  _dom = {\n    item: null,\n    link: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n  };\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  _submenu = false;\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Set DOM elements.\n    this._dom.item = menuItemElement;\n    this._dom.link = menuLinkElement;\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n\n    this._submenu = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @readonly\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @readonly\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   *\n   * @readonly\n   *\n   * @see _submenu\n   */\n  get isSubmenuItem() {\n    return this._submenu;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n * @return  {string}              - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenu}\n   */\n  _MenuType = BaseMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuItem}\n   */\n  _MenuItemType = BaseMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuToggle}\n   */\n  _MenuToggleType = BaseMenuToggle;\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  _dom = {\n    menu: null,\n    menuItems: [],\n    submenuItems: [],\n    submenuToggles: [],\n    submenus: [],\n    controller: null,\n    container: null,\n  };\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @protected\n   *\n   * @type {Object<string>}\n   *\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  _selectors = {\n    menuItems: \"\",\n    menuLinks: \"\",\n    submenuItems: \"\",\n    submenuToggles: \"\",\n    submenus: \"\",\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  _elements = {\n    menuItems: [],\n    submenuToggles: [],\n    controller: null,\n    parentMenu: null,\n    rootMenu: null,\n  };\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _openClass = \"show\";\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _closeClass = \"hide\";\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _root = true;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = 0;\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _focusState = \"none\";\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _currentEvent = \"none\";\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _hoverType = \"off\";\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _hoverDelay = 250;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Set DOM elements.\n    this._dom.menu = menuElement;\n    this._dom.controller = controllerElement;\n    this._dom.container = containerElement;\n\n    // Set DOM selectors.\n    this._selectors.menuItems = menuItemSelector;\n    this._selectors.menuLinks = menuLinkSelector;\n    this._selectors.submenuItems = submenuItemSelector;\n    this._selectors.submenuToggles = submenuToggleSelector;\n    this._selectors.submenus = submenuSelector;\n\n    // Set menu elements.\n    this._elements.menuItems = [];\n    this._elements.submenuToggles = [];\n    this._elements.controller = null;\n    this._elements.parentMenu = parentMenu;\n    this._elements.rootMenu = isTopLevel ? this : null;\n\n    // Set open/close classes.\n    this._openClass = openClass || \"\";\n    this._closeClass = closeClass || \"\";\n\n    // Set root.\n    this._root = isTopLevel;\n\n    // Set hover settings.\n    this._hoverType = hoverType;\n    this._hoverDelay = hoverDelay;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this._validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\n      );\n    }\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this._setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this._elements.controller = toggle;\n      }\n    }\n\n    this._createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @readonly\n   *\n   * @type {Object<string>}\n   *\n   * @see _selectors\n   */\n  get selectors() {\n    return this._selectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * The flag marking the root menu.\n   *\n   * @readonly\n   *\n   * @type {boolean}\n   *\n   * @see _root\n   */\n  get isTopLevel() {\n    return this._root;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _openClass\n   */\n  get openClass() {\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _closeClass\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this._closeClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   *\n   * @see _currentChild\n   */\n  get currentChild() {\n    return this._currentChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   *\n   * @see _focusState\n   */\n  get focusState() {\n    return this._focusState;\n  }\n\n  /**\n   * The last event triggered on the menu.\n   *\n   * @type {string}\n   *\n   * @see _currentEvent\n   */\n  get currentEvent() {\n    return this._currentEvent;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   *\n   * @see _hoverType\n   */\n  get hoverType() {\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   *\n   * @see _hoverDelay\n   */\n  get hoverDelay() {\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu_hoverTypeType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this._openClass !== value) {\n      this._openClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this._closeClass !== value) {\n      this._closeClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this._currentChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this._currentChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this._currentChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this._focusState !== value) {\n      this._focusState = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this._currentEvent !== value) {\n      this._currentEvent = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this._hoverType !== value) {\n      this._hoverType = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this._hoverDelay !== value) {\n      this._hoverDelay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = true;\n\n    if (this._dom.container !== null || this._dom.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: this._dom.menu,\n          controllerElement: this._dom.controller,\n          containerElement: this._dom.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: this._dom.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (this._selectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: this._selectors.menuItems,\n          menuLinkSelector: this._selectors.menuLinks,\n          submenuItemSelector: this._selectors.submenuItems,\n          submenuToggleSelector: this._selectors.submenuToggles,\n          submenuSelector: this._selectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: this._selectors.menuItems,\n        menuLinkSelector: this._selectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._openClass !== \"\" &&\n      !isValidClassList({ openClass: this._openClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._closeClass !== \"\" &&\n      !isValidClassList({ closeClass: this._closeClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\n      check = false;\n    }\n\n    if (\n      this._elements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be set through this method.\n   *\n   * @protected\n   *\n   * @param {string}      elementType            - The type of element to populate.\n   * @param {HTMLElement} [base = this.dom.menu] - The element used as the base for the querySelect.\n   * @param {boolean}     [overwrite = true]     - A flag to set if the existing elements will be overwritten.\n   */\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\n        );\n      }\n\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\n\n      // Get the all elements matching the selector in the base.\n      const domElements = Array.from(\n        base.querySelectorAll(this.selectors[elementType])\n      );\n\n      // Filter the elements so only direct children of the base are kept.\n      const filteredElements = domElements.filter(\n        (item) => item.parentElement === base\n      );\n\n      if (overwrite) {\n        this._dom[elementType] = filteredElements;\n      } else {\n        this._dom[elementType] = [\n          ...this._dom[elementType],\n          ...filteredElements,\n        ];\n      }\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Resets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be reset through this method.\n   *\n   * @protected\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  _resetDOMElementType(elementType) {\n    if (typeof this.dom[elementType] !== \"undefined\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\n        );\n      }\n\n      this._dom[elementType] = [];\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\n   *\n   * @protected\n   */\n  _setDOMElements() {\n    this._setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this._setDOMElementType(\"submenuItems\");\n\n      this._resetDOMElementType(\"submenuToggles\");\n      this._resetDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this._setDOMElementType(\"submenuToggles\", item, false);\n        this._setDOMElementType(\"submenus\", item, false);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @protected\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  _findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this._elements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this._findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   *\n   * @protected\n   */\n  _handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds a `pointerdown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `pointerup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `pointerup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   *\n   * @protected\n   */\n  _handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(\n        \"pointerdown\",\n        () => {\n          this.currentEvent = \"mouse\";\n          this.elements.rootMenu.blurChildren();\n          this.focusChild(index);\n        },\n        { passive: true }\n      );\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle.addEventListener(\n          \"pointerup\",\n          (event) => {\n            this.currentEvent = \"mouse\";\n            toggleToggle(this, item.elements.toggle, event);\n          }\n        );\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"pointerup\",\n        (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, this.elements.controller, event);\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Opens the menu when the user hits \"Space\" or \"Enter\".\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link DisclosureMenu}.\n *\n * @extends BaseMenuItem\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}                    options                         - The options for generating the menu item.\n   * @param {HTMLElement}               options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                   [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link DisclosureMenu}.\n *\n * @extends BaseMenuToggle\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}              options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}         options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         options.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html|Example Disclosure for Navigation Menus}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { DisclosureMenu } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new DisclosureMenu({\n *   menuElement,\n * });\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenu}\n   */\n  _MenuType = DisclosureMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuItem}\n   */\n  _MenuItemType = DisclosureMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuToggle}\n   */\n  _MenuToggleType = DisclosureMenuToggle;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = -1;\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _optionalSupport = false;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                              - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                  - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]      - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]       - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]        - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a]  - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]       - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]   - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]    - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]           - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]          - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = true]          - A flag to mark the root menu.\n   * @param {(DisclosureMenu|null)}  [options.parentMenu = null]          - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]            - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]           - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.optionalKeySupport = false] - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                [options.initialize = true]          - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set optional key support.\n    this._optionalSupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link DisclosureMenu#_handleFocus|focus},\n   * {@link DisclosureMenu#_handleClick|click},\n   * {@link DisclosureMenu#_handleHover|hover},\n   * {@link DisclosureMenu#_handleKeydown|keydown}, and\n   * {@link DisclosureMenu#_handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   *\n   * @see _optionalSupport\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this._optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this._optionalSupport = value;\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = super._validate();\n\n    if (\n      !isValidType(\"boolean\", { optionalKeySupport: this._optionalSupport })\n    ) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link DisclosureMenu#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link DisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link DisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Menubar}.\n *\n * @extends BaseMenuItem\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}             options                         - The options for generating the menu item.\n   * @param {HTMLElement}        options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            options.parentMenu              - The parent menu.\n   * @param {boolean}            [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [options.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}            [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"menuitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0 if the parent menu\n   * is the root menu.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1 if the parent menu\n   * is the root menu.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Menubar}.\n *\n * @extends BaseMenuToggle\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}       options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}  options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}  options.parentElement       - The element containing the controlled menu.\n   * @param {Menubar}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Menubar|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}      [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html|Navigation Menubar Example}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { Menubar } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new Menubar({\n *   menuElement,\n * });\n */\nclass Menubar extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof Menubar}\n   */\n  _MenuType = Menubar;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof MenubarItem}\n   */\n  _MenuItemType = MenubarItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof MenubarToggle}\n   */\n  _MenuToggleType = MenubarToggle;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = true]         - A flag to mark the root menu.\n   * @param {(Menubar|null)}         [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Menubar#_handleFocus|focus},\n   * {@link Menubar#_handleClick|click},\n   * {@link Menubar#_handleHover|hover},\n   * {@link Menubar#_handleKeydown|keydown}, and\n   * {@link Menubar#_handleKeyup|keyup} events for the menu.\n   *\n   * This will also set the menu's `role` to \"menubar\" in the DOM.\n   *\n   * If the menu is a root menu the first menu item's `tabIndex` will be set to\n   * 0 in the DOM.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.dom.menu.setAttribute(\"role\", \"menubar\");\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n\n      if (this.isTopLevel) {\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Menubar#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     and \"A\" through \"Z\".\n   *   - Completely closes the menu and moves focus out if the \"Tab\" key is pressed.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/menubar/menubar-1/menubar-1.html#kbd_label|Navigation Menubar Example}):\n   *\n   * <strong>Menubar</strong>\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Right Arrow_ | <ul><li>Moves focus to the next item in the menubar.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Left Arrow_ | <ul><li>Moves focus to the previous item in the menubar.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | _Down Arrow_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Up Arrow_ | Opens submenu and moves focus to last item in the submenu. |\n   * | _Home_ | Moves focus to first item in the menubar. |\n   * | _End_ | Moves focus to last item in the menubar. |\n   * | _Character_ | <ul><li>Moves focus to next item in the menubar having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   *\n   * <strong>Submenu</strong>\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | <ul><li>Activates menu item, causing the link to be activated.</li><li>NOTE: the links go to dummy pages; use the browser go-back function to return to this menubar example page.</li></ul> |\n   * | _Escape_ | <ul><li>Closes submenu.</li><li>Moves focus to parent menubar item.</li></ul> |\n   * | _Right Arrow_ | <ul><li>If focus is on an item with a submenu, opens the submenu and places focus on the first item.</li><li>If focus is on an item that does not have a submenu:<ul><li>Closes submenu.</li><li>Moves focus to next item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Left Arrow_ | <ul><li>Closes submenu and moves focus to parent menu item.</li><li>If parent menu item is in the menubar, also:<ul><li>moves focus to previous item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Down Arrow_ | <ul><li>Moves focus to the next item in the submenu.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Up Arrow_ | <ul><li>Moves focus to previous item in the submenu.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | Home | Moves focus to the first item in the submenu. |\n   * | End | Moves focus to the last item in the submenu. |\n   * | _Character_ | <ul><li>Moves focus to the next item having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            } else {\n              this.currentMenuItem.dom.link.click();\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              (toggle) => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's next child.\n   *\n   * If the currently focussed child in the menu is the last child then this will\n   * focus the first child in the menu.\n   */\n  focusNextChild() {\n    // If the current child is the last child of the menu, focus the menu's first child.\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.focusChild(this.currentChild + 1);\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   *\n   * If the currently focussed child in the menu is the first child then this will\n   * focus the last child in the menu.\n   */\n  focusPreviousChild() {\n    // If the current child is the first child of the menu, focus the menu's last child.\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.focusChild(this.currentChild - 1);\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (this.elements.menuItems[index].dom.item.innerText) {\n        text = this.elements.menuItems[index].dom.item.innerText;\n      } else {\n        text = this.elements.menuItems[index].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        this.focusChild(index);\n      }\n\n      index++;\n    }\n  }\n}\n\nexport default Menubar;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link TopLinkDisclosureMenu}.\n *\n * @extends BaseMenuItem\n */\nclass TopLinkDisclosureMenuItem extends BaseMenuItem {\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}                   parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}                  childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle}            toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   * @property {?TopLinkDisclosureMenuItem} sibling    - The sibling menu item that is a submenu item.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n    sibling: null,\n  };\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}                           options                         - The options for generating the menu item.\n   * @param {HTMLElement}                      options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                      options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {TopLinkDisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                          [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {TopLinkDisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {TopLinkDisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                          [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   * @param {TopLinkDisclosureMenuItem|null}   [options.submenuSibling = null] - The sibling menu item that controls a submenu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n    submenuSibling = null,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n    this._elements.sibling = submenuSibling;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TopLinkDisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link TopLinkDisclosureMenu}.\n *\n * @extends BaseMenuToggle\n */\nclass TopLinkDisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}                     options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}                options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}                options.parentElement       - The element containing the controlled menu.\n   * @param {TopLinkDisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {TopLinkDisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                    [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default TopLinkDisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TopLinkDisclosureMenuItem from \"./topLinkDisclosureMenuItem.js\";\nimport TopLinkDisclosureMenuToggle from \"./topLinkDisclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu with top-level links in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation-hybrid.html#mythical-page-content|Example Disclosure Navigation Menu with Top-Level Links}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { TopLinkDisclosureMenu } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new TopLinkDisclosureMenu({\n *   menuElement,\n * });\n */\nclass TopLinkDisclosureMenu extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenu}\n   */\n  _MenuType = TopLinkDisclosureMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenuItem}\n   */\n  _MenuItemType = TopLinkDisclosureMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenuToggle}\n   */\n  _MenuToggleType = TopLinkDisclosureMenuToggle;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = -1;\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _optionalSupport = false;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                       options                                          - The options for generating the menu.\n   * @param {HTMLElement}                  options.menuElement                              - The menu element in the DOM.\n   * @param {string}                       [options.menuItemSelector = li]                  - The CSS selector string for menu items.\n   * @param {string}                       [options.menuLinkSelector = a]                   - The CSS selector string for menu links.\n   * @param {string}                       [options.submenuItemSelector]                    - The CSS selector string for menu items containing submenus.\n   * @param {string}                       [options.submenuToggleSelector = button]         - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                       [options.submenuSelector = ul]                   - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}           [options.controllerElement = null]               - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}           [options.containerElement = null]                - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)}       [options.openClass = show]                       - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)}       [options.closeClass = hide]                      - The class to apply when a menu is \"closed\".\n   * @param {boolean}                      [options.isTopLevel = true]                      - A flag to mark the root menu.\n   * @param {(TopLinkDisclosureMenu|null)} [options.parentMenu = null]                      - The parent menu to this menu.\n   * @param {string}                       [options.hoverType = off]                        - The type of hoverability a menu has.\n   * @param {number}                       [options.hoverDelay = 250]                       - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                      [options.optionalKeySupport = false]             - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                      [options.initialize = true]                      - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"button\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set optional key support.\n    this._optionalSupport = optionalKeySupport;\n\n    // Set unique menu link selectors.\n    this._selectors.menuLinks = [\n      ...new Set([menuLinkSelector, submenuToggleSelector]),\n    ].join(\",\");\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link TopLinkDisclosureMenu#_handleFocus|focus},\n   * {@link TopLinkDisclosureMenu#_handleClick|click},\n   * {@link TopLinkDisclosureMenu#_handleHover|hover},\n   * {@link TopLinkDisclosureMenu#_handleKeydown|keydown}, and\n   * {@link TopLinkDisclosureMenu#_handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   *\n   * @see _optionalSupport\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this._optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this._optionalSupport = value;\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem, menuToggleItem;\n      const link = element.querySelector(this.selectors.menuLinks);\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item specifically for the toggle.\n        menuToggleItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n          submenuSibling: menuToggleItem,\n        });\n      } else {\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n\n      if (typeof menuToggleItem !== \"undefined\") {\n        this._elements.menuItems.push(menuToggleItem);\n      }\n    });\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = super._validate();\n\n    if (\n      !isValidType(\"boolean\", { optionalKeySupport: this._optionalSupport })\n    ) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          // Hovering over both the menu item _and_ the toggle item should work.\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          } else if (menuItem.elements.sibling !== null) {\n            menuItem.elements.sibling.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (!this.isTopLevel || isOpen) {\n            this.currentEvent = \"mouse\";\n\n            // Hovering over both the menu item _and_ the toggle item should work.\n            if (menuItem.isSubmenuItem) {\n              menuItem.elements.toggle.preview();\n            } else if (menuItem.elements.sibling !== null) {\n              menuItem.elements.sibling.elements.toggle.preview();\n            }\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link TopLinkDisclosureMenu#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link TopLinkDisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link TopLinkDisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            event.target.matches(this.selectors.submenuToggles)\n          ) {\n            preventEvent(event);\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default TopLinkDisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Treeview}.\n *\n * @extends BaseMenuItem\n */\nclass TreeviewItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}              options                         - The options for generating the menu item.\n   * @param {HTMLElement}         options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}            options.parentMenu              - The parent menu.\n   * @param {boolean}             [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Treeview|null}       [options.childMenu = null]      - The child menu.\n   * @param {TreeviewToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}             [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"treeitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0.\n   */\n  focus() {\n    super.focus();\n\n    this.dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1.\n   */\n  blur() {\n    super.blur();\n\n    this.dom.link.tabIndex = -1;\n  }\n}\n\nexport default TreeviewItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Treeview}.\n *\n * @extends BaseMenuToggle\n */\nclass TreeviewToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {Treeview}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Treeview|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}       [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TreeviewToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TreeviewItem from \"./treeviewItem.js\";\nimport TreeviewToggle from \"./treeviewToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html|Navigation Treeview Example Using Computed Properties}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { Treeview } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new Treeview({\n *   menuElement,\n * });\n */\nclass Treeview extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof Treeview}\n   */\n  _MenuType = Treeview;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof TreeviewItem}\n   */\n  _MenuItemType = TreeviewItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof TreeviewToggle}\n   */\n  _MenuToggleType = TreeviewToggle;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = true]         - A flag to mark the root menu.\n   * @param {(Treeview|null)}        [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Treeview#_handleFocus|focus},\n   * {@link Treeview#_handleClick|click},\n   * {@link Treeview#_handleHover|hover},\n   * {@link Treeview#_handleKeydown|keydown}, and\n   * {@link Treeview#_handleKeyup|keyup} events for the menu.\n   *\n   * If the menu is a root menu it's `role` will be set to \"tree\" and the first\n   * menu item's `tabIndex` will be set to 0 in the DOM.\n   *\n   * If the menu is _not_ a root menu it's `role` will be set to \"group\".\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"tree\");\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"group\");\n      }\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Treeview#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     \"*\" (asterisk), and \"A\" through \"Z\".\n   *   - Moves focus out if the \"Tab\" key is pressed.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"Space\",\n          \"ArrowUp\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Asterisk\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\n        const controllerKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/treeview/treeview-2/treeview-2a.html#kbd_label|Navigation Treeview Example Using Computed Properties}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Enter_ or _Space_ | Performs the default action (e.g. onclick event) for the focused node. |\n   * | _Down arrow_ | <ul><li>Moves focus to the next node that is focusable without opening or closing a node.</li><li>If focus is on the last node, does nothing.</li></ul> |\n   * | _Up arrow_ | <ul><li>Moves focus to the previous node that is focusable without opening or closing a node.</li><li>If focus is on the first node, does nothing.</li></ul> |\n   * | _Right arrow_ | <ul><li>When focus is on a closed node, opens the node; focus does not move.</li><li>When focus is on a open node, moves focus to the first child node.</li><li>When focus is on an end node, does nothing.</li></ul> |\n   * | _Left arrow_ | <ul><li>When focus is on an open node, closes the node.</li><li>When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.</li><li>When focus is on a root node that is also either an end node or a closed node, does nothing.</li></ul> |\n   * | _Home_ | Moves focus to first node without opening or closing a node. |\n   * | _End_ | Moves focus to the last node that can be focused without expanding any nodes that are closed. |\n   * | _a-z_, _A-Z_ | <ul><li>Focus moves to the next node with a name that starts with the typed character.</li><li>Search wraps to first node if a matching name is not found among the nodes that follow the focused node.</li><li>Search ignores nodes that are descendants of closed nodes.</li></ul> |\n   * | _* (asterisk)_ | <ul><li>Expands all closed sibling nodes that are at the same level as the focused node.</li><li>Focus does not move.</li></ul> |\n   * | _Escape_ | If the root menu is collapsible, collapses the menu and focuses the menu's controlling element. |\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Focus moves to the next node with a name that starts with the typed character.\n        // - Search wraps to first node if a matching name is not found among the nodes that follow the focused node.\n        // - Search ignores nodes that are descendants of closed nodes.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextNodeWithCharacter(event.key);\n      } else if (this.focusState === \"self\") {\n        if (key === \"Enter\" || key === \"Space\") {\n          // Hitting Space or Enter:\n          // - Performs the default action (e.g. onclick event) for the focused node.\n          // - If focus is on a closed node, opens the node; focus does not move.\n          preventEvent(event);\n\n          if (this.currentMenuItem.isSubmenuItem) {\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next node that is focusable without opening or closing a node.\n          // - If focus is on the last node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else if (\n            !this.isTopLevel &&\n            this.currentChild === this.elements.menuItems.length - 1\n          ) {\n            this.focusParentsNextChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\n          // - If focus is on the first node, does nothing.\n          preventEvent(event);\n\n          const previousMenuItem =\n            this.elements.menuItems[this.currentChild - 1];\n\n          if (\n            previousMenuItem &&\n            previousMenuItem.isSubmenuItem &&\n            previousMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentChild = this.currentChild - 1;\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.focusChildsLastNode();\n          } else if (!this.isTopLevel && this.currentChild === 0) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          } else {\n            this.focusPreviousChild();\n          }\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - When focus is on a closed node, opens the node; focus does not move.\n          // - When focus is on a open node, moves focus to the first child node.\n          // - When focus is on an end node, does nothing.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.blurCurrentChild();\n              this.currentMenuItem.elements.childMenu.currentEvent =\n                this.currentEvent;\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - When focus is on an open node, closes the node.\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.blurCurrentChild();\n            this.currentMenuItem.elements.toggle.close();\n          } else if (!this.isTopLevel) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          }\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first node without opening or closing a node.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusLastNode();\n        } else if (key === \"Asterisk\") {\n          // Hitting Asterisk:\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\n          // - Focus does not move.\n          preventEvent(event);\n          this.openChildren();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's last node of the entire expanded menu.\n   *\n   * This includes all _open_ child menu items.\n   */\n  focusLastNode() {\n    const numberOfItems = this.elements.menuItems.length - 1;\n    const lastChild = this.elements.menuItems[numberOfItems];\n\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\n      this.currentChild = numberOfItems;\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\n      lastChild.elements.childMenu.focusLastNode();\n    } else {\n      this.focusLastChild();\n    }\n  }\n\n  /**\n   * Open all submenu children.\n   */\n  openChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\n  }\n\n  /**\n   * Focus the menu's next node starting with a specific letter.\n   *\n   * This includes all _open_ child menu items.\n   *\n   * Wraps to the first node if no match is found after the current node.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextNodeWithCharacter(char) {\n    /**\n     * Gets all the menu's items and submenu's items.\n     *\n     * @param  {Treeview}       menu - The menu.\n     * @return {TreeviewItem[]}      - The menu items.\n     */\n    function getOpenMenuItems(menu) {\n      let menuItems = [];\n\n      menu.elements.menuItems.forEach((menuItem) => {\n        menuItems.push(menuItem);\n\n        if (menuItem.isSubmenuItem && menuItem.elements.toggle.isOpen) {\n          menuItems = [\n            ...menuItems,\n            ...getOpenMenuItems(\n              menuItem.elements.toggle.elements.controlledMenu\n            ),\n          ];\n        }\n      });\n\n      return menuItems;\n    }\n\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    // Sort the menu items so the child _after_ the current child is first to be searched.\n    const menuItems = getOpenMenuItems(this.elements.rootMenu);\n    const currentItem = menuItems.indexOf(this.currentMenuItem) + 1;\n    const sortedMenuItems = [\n      ...menuItems.slice(currentItem),\n      ...menuItems.slice(0, currentItem),\n    ];\n    let ctr = 0;\n    let found = false;\n\n    while (!found && ctr < sortedMenuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (sortedMenuItems[ctr].dom.item.innerText) {\n        text = sortedMenuItems[ctr].dom.item.innerText;\n      } else {\n        text = sortedMenuItems[ctr].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        const menu = sortedMenuItems[ctr].elements.parentMenu;\n        const index = menu.elements.menuItems.indexOf(sortedMenuItems[ctr]);\n        this.elements.rootMenu.blurChildren();\n        menu.focusChild(index);\n      }\n\n      ctr++;\n    }\n  }\n\n  /**\n   * Focus the parent menu's next child.\n   *\n   * This will cascade up through to the root menu.\n   */\n  focusParentsNextChild() {\n    if (!this.elements.parentMenu) return;\n\n    this.elements.parentMenu.currentEvent = this.currentEvent;\n\n    if (\n      this.elements.parentMenu.currentChild ===\n      this.elements.parentMenu.elements.menuItems.length - 1\n    ) {\n      this.elements.parentMenu.blurCurrentChild();\n      this.elements.parentMenu.focusParentsNextChild();\n    } else {\n      this.blurChildren();\n      this.elements.parentMenu.focusNextChild();\n    }\n  }\n\n  /**\n   * Focus the last child of the current child's submenu.\n   *\n   * This will cascade down through to the last open menu.\n   */\n  focusChildsLastNode() {\n    this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n    this.currentMenuItem.elements.childMenu.focusLastChild();\n\n    if (\n      this.currentMenuItem.elements.childMenu.currentMenuItem.isSubmenuItem &&\n      this.currentMenuItem.elements.childMenu.currentMenuItem.elements.toggle\n        .isOpen\n    ) {\n      this.currentMenuItem.elements.childMenu.blurCurrentChild();\n      this.currentMenuItem.elements.childMenu.focusChildsLastNode();\n    }\n  }\n}\n\nexport default Treeview;\n","import DisclosureMenu from \"./src/disclosureMenu.js\";\nimport Menubar from \"./src/menubar.js\";\nimport TopLinkDisclosureMenu from \"./src/topLinkDisclosureMenu.js\";\nimport Treeview from \"./src/treeview.js\";\n\nexport default {\n  DisclosureMenu,\n  Menubar,\n  TopLinkDisclosureMenu,\n  Treeview,\n};\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","BaseMenuToggle","constructor","menuToggleElement","parentElement","controlledMenu","parentMenu","_defineProperty","toggle","parent","CustomEvent","bubbles","detail","_dom","_elements","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","isOpen","_open","_expand","emit","closeClass","openClass","classList","add","remove","dispatchEvent","_expandEvent","_collapseEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","_submenu","focus","shouldFocus","keyPress","event","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","menuLinks","rootMenu","_selectors","_openClass","_closeClass","_root","_hoverType","_hoverDelay","_validate","_findRootMenu","_setDOMElements","_MenuToggleType","_createChildElements","selectors","_currentChild","_focusState","currentEvent","_currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","_setDOMElementType","base","overwrite","domElements","from","querySelectorAll","filteredElements","filter","_resetDOMElementType","element","toggler","submenu","_MenuType","push","_MenuItemType","_handleFocus","addEventListener","_handleClick","toggleToggle","blurChildren","passive","_handleHover","pointerType","some","focusCurrentChild","setTimeout","_handleKeydown","_handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","DisclosureMenuItem","DisclosureMenuToggle","DisclosureMenu","optionalKeySupport","_optionalSupport","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","MenubarItem","tabIndex","MenubarToggle","Menubar","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","previousChildOpen","char","text","textContent","charAt","TopLinkDisclosureMenuItem","submenuSibling","sibling","TopLinkDisclosureMenuToggle","TopLinkDisclosureMenu","Set","menuToggleItem","matches","TreeviewItem","TreeviewToggle","Treeview","focusNextNodeWithCharacter","focusParentsNextChild","previousMenuItem","focusChildsLastNode","focusLastNode","openChildren","numberOfItems","lastChild","getOpenMenuItems","currentItem","indexOf","sortedMenuItems","ctr"],"mappings":"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"}