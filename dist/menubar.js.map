{"version":3,"file":"menubar.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {object}  contructor - The constructor to check for.\n * @param  {object}  elements   - The element(s) to check.\n * @return {boolean}            - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {string}  type   - The type to check for.\n * @param  {object}  values - The value(s) to check.\n * @return {boolean}        - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string, string[]>} values - The value(s) to check.\n * @return {boolean}                         - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param  {string}               tagName  - The name of the tag.\n * @param  {Object<HTMLElement>} elements - The element(s) to check.\n * @return {boolean}                       - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param  {string}      event   - The event type.\n * @param  {HTMLElement} element - The element to check.\n * @return {boolean}             - The result.\n *\n * @deprecated Will be removed in v4 unless there is a new found need for it.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","// eslint-disable-next-line no-unused-vars\n/* global BaseMenu */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * The DOM elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  _dom = {\n    toggle: null,\n    parent: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  _elements = {\n    controlledMenu: null,\n    parentMenu: null,\n  };\n\n  /**\n   * The open state of the menu toggle.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _open = false;\n\n  /**\n   * Expand event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuExpand\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Collapse event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuCollapse\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Set DOM elements.\n    this._dom.toggle = menuToggleElement;\n    this._dom.parent = parentElement;\n\n    // Set menu elements.\n    this._elements.controlledMenu = controlledMenu;\n    this._elements.parentMenu = parentMenu;\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this._collapse(false);\n  }\n\n  /**\n   * Get the DOM elements within the toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * Get the declared accessible-menu elements within the menu toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * Get the open state on the menu.\n   *\n   * @type {boolean}\n   *\n   * @see _open\n   */\n  get isOpen() {\n    return this._open;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this._open = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuExpand\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  _expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuCollapse\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  _collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this._collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","// eslint-disable-next-line no-unused-vars\n/* global BaseMenu BaseMenuToggle */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @protected\n   *\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  _dom = {\n    item: null,\n    link: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n  };\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  _submenu = false;\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Set DOM elements.\n    this._dom.item = menuItemElement;\n    this._dom.link = menuLinkElement;\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n\n    this._submenu = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @readonly\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @readonly\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   *\n   * @readonly\n   *\n   * @see _submenu\n   */\n  get isSubmenuItem() {\n    return this._submenu;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n * @return  {string}              - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","// eslint-disable-next-line no-unused-vars\n/* global DisclosureMenu, Menubar, Treeview */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenu}\n   */\n  _MenuType = BaseMenu; // eslint-disable-line no-use-before-define\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuItem}\n   */\n  _MenuItemType = BaseMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuToggle}\n   */\n  _MenuToggleType = BaseMenuToggle;\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  _dom = {\n    menu: null,\n    menuItems: [],\n    submenuItems: [],\n    submenuToggles: [],\n    submenus: [],\n    controller: null,\n    container: null,\n  };\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @protected\n   *\n   * @type {Object<string>}\n   *\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  _selectors = {\n    menuItems: \"\",\n    menuLinks: \"\",\n    submenuItems: \"\",\n    submenuToggles: \"\",\n    submenus: \"\",\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  _elements = {\n    menuItems: [],\n    submenuToggles: [],\n    controller: null,\n    parentMenu: null,\n    rootMenu: null,\n  };\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _openClass = \"show\";\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _closeClass = \"hide\";\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _root = true;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = 0;\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _focusState = \"none\";\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _currentEvent = \"none\";\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _hoverType = \"off\";\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _hoverDelay = 250;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Set DOM elements.\n    this._dom.menu = menuElement;\n    this._dom.controller = controllerElement;\n    this._dom.container = containerElement;\n\n    // Set DOM selectors.\n    this._selectors.menuItems = menuItemSelector;\n    this._selectors.menuLinks = menuLinkSelector;\n    this._selectors.submenuItems = submenuItemSelector;\n    this._selectors.submenuToggles = submenuToggleSelector;\n    this._selectors.submenus = submenuSelector;\n\n    // Set menu elements.\n    this._elements.menuItems = [];\n    this._elements.submenuToggles = [];\n    this._elements.controller = null;\n    this._elements.parentMenu = parentMenu;\n    this._elements.rootMenu = isTopLevel ? this : null;\n\n    // Set open/close classes.\n    this._openClass = openClass || \"\";\n    this._closeClass = closeClass || \"\";\n\n    // Set root.\n    this._root = isTopLevel;\n\n    // Set hover settings.\n    this._hoverType = hoverType;\n    this._hoverDelay = hoverDelay;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this._validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\n      );\n    }\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this._setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this._elements.controller = toggle;\n      }\n    }\n\n    this._createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @readonly\n   *\n   * @type {Object<string>}\n   *\n   * @see _selectors\n   */\n  get selectors() {\n    return this._selectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * The flag marking the root menu.\n   *\n   * @readonly\n   *\n   * @type {boolean}\n   *\n   * @see _root\n   */\n  get isTopLevel() {\n    return this._root;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _openClass\n   */\n  get openClass() {\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _closeClass\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this._closeClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   *\n   * @see _currentChild\n   */\n  get currentChild() {\n    return this._currentChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   *\n   * @see _focusState\n   */\n  get focusState() {\n    return this._focusState;\n  }\n\n  /**\n   * The last event triggered on the menu.\n   *\n   * @type {string}\n   *\n   * @see _currentEvent\n   */\n  get currentEvent() {\n    return this._currentEvent;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   *\n   * @see _hoverType\n   */\n  get hoverType() {\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   *\n   * @see _hoverDelay\n   */\n  get hoverDelay() {\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu#_hoverType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this._openClass !== value) {\n      this._openClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this._closeClass !== value) {\n      this._closeClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this._currentChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this._currentChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this._currentChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this._focusState !== value) {\n      this._focusState = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this._currentEvent !== value) {\n      this._currentEvent = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this._hoverType !== value) {\n      this._hoverType = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this._hoverDelay !== value) {\n      this._hoverDelay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = true;\n\n    if (this._dom.container !== null || this._dom.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: this._dom.menu,\n          controllerElement: this._dom.controller,\n          containerElement: this._dom.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: this._dom.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (this._selectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: this._selectors.menuItems,\n          menuLinkSelector: this._selectors.menuLinks,\n          submenuItemSelector: this._selectors.submenuItems,\n          submenuToggleSelector: this._selectors.submenuToggles,\n          submenuSelector: this._selectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: this._selectors.menuItems,\n        menuLinkSelector: this._selectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._openClass !== \"\" &&\n      !isValidClassList({ openClass: this._openClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._closeClass !== \"\" &&\n      !isValidClassList({ closeClass: this._closeClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\n      check = false;\n    }\n\n    if (\n      this._elements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be set through this method.\n   *\n   * @protected\n   *\n   * @param {string}      elementType            - The type of element to populate.\n   * @param {HTMLElement} [base] - The element used as the base for the querySelect.\n   * @param {boolean}     [overwrite]     - A flag to set if the existing elements will be overwritten.\n   */\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\n        );\n      }\n\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\n\n      // Get the all elements matching the selector in the base.\n      const domElements = Array.from(\n        base.querySelectorAll(this.selectors[elementType])\n      );\n\n      // Filter the elements so only direct children of the base are kept.\n      const filteredElements = domElements.filter(\n        (item) => item.parentElement === base\n      );\n\n      if (overwrite) {\n        this._dom[elementType] = filteredElements;\n      } else {\n        this._dom[elementType] = [\n          ...this._dom[elementType],\n          ...filteredElements,\n        ];\n      }\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Resets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be reset through this method.\n   *\n   * @protected\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  _resetDOMElementType(elementType) {\n    if (typeof this.dom[elementType] !== \"undefined\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\n        );\n      }\n\n      this._dom[elementType] = [];\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\n   *\n   * @protected\n   */\n  _setDOMElements() {\n    this._setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this._setDOMElementType(\"submenuItems\");\n\n      this._resetDOMElementType(\"submenuToggles\");\n      this._resetDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this._setDOMElementType(\"submenuToggles\", item, false);\n        this._setDOMElementType(\"submenus\", item, false);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @protected\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  _findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this._elements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this._findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   *\n   * @protected\n   */\n  _handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds a `pointerdown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `pointerup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `pointerup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   *\n   * @protected\n   */\n  _handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(\n        \"pointerdown\",\n        () => {\n          this.currentEvent = \"mouse\";\n          this.elements.rootMenu.blurChildren();\n          this.focusChild(index);\n        },\n        { passive: true }\n      );\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle.addEventListener(\n          \"pointerup\",\n          (event) => {\n            this.currentEvent = \"mouse\";\n            toggleToggle(this, item.elements.toggle, event);\n          }\n        );\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"pointerup\",\n        (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, this.elements.controller, event);\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu#_hoverType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu#_hoverDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Toggles the menu when the user hits \"Space\" or \"Enter\".\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.toggle();\n\n          // If the menu is open, focus the first child.\n          if (this.elements.controller.isOpen) {\n            this.focusFirstChild();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","// eslint-disable-next-line no-unused-vars\n/* global Menubar, MenubarToggle */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Menubar}.\n *\n * @extends BaseMenuItem\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}             options                         - The options for generating the menu item.\n   * @param {HTMLElement}        options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            options.parentMenu              - The parent menu.\n   * @param {boolean}            [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [options.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}            [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"menuitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0 if the parent menu\n   * is the root menu.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1 if the parent menu\n   * is the root menu.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","// eslint-disable-next-line no-unused-vars\n/* global Menubar */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Menubar}.\n *\n * @extends BaseMenuToggle\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}       options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}  options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}  options.parentElement       - The element containing the controlled menu.\n   * @param {Menubar}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Menubar|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}      [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html|Navigation Menubar Example}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { Menubar } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new Menubar({\n *   menuElement,\n * });\n */\nclass Menubar extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof Menubar}\n   */\n  _MenuType = Menubar; // eslint-disable-line no-use-before-define\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof MenubarItem}\n   */\n  _MenuItemType = MenubarItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof MenubarToggle}\n   */\n  _MenuToggleType = MenubarToggle;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = true]         - A flag to mark the root menu.\n   * @param {(Menubar|null)}         [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Menubar#_handleFocus|focus},\n   * {@link Menubar#_handleClick|click},\n   * {@link Menubar#_handleHover|hover},\n   * {@link Menubar#_handleKeydown|keydown}, and\n   * {@link Menubar#_handleKeyup|keyup} events for the menu.\n   *\n   * This will also set the menu's `role` to \"menubar\" in the DOM.\n   *\n   * If the menu is a root menu the first menu item's `tabIndex` will be set to\n   * 0 in the DOM.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      // Set the role of the menu.\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"menubar\");\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"menu\");\n      }\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n\n      if (this.isTopLevel) {\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Menubar#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     and \"A\" through \"Z\".\n   *   - Completely closes the menu and moves focus out if the \"Tab\" key is pressed.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/menubar/menubar-1/menubar-1.html#kbd_label|Navigation Menubar Example}):\n   *\n   * <strong>Menubar</strong>\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Right Arrow_ | <ul><li>Moves focus to the next item in the menubar.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Left Arrow_ | <ul><li>Moves focus to the previous item in the menubar.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | _Down Arrow_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Up Arrow_ | Opens submenu and moves focus to last item in the submenu. |\n   * | _Home_ | Moves focus to first item in the menubar. |\n   * | _End_ | Moves focus to last item in the menubar. |\n   * | _Character_ | <ul><li>Moves focus to next item in the menubar having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   *\n   * <strong>Submenu</strong>\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | <ul><li>Activates menu item, causing the link to be activated.</li><li>NOTE: the links go to dummy pages; use the browser go-back function to return to this menubar example page.</li></ul> |\n   * | _Escape_ | <ul><li>Closes submenu.</li><li>Moves focus to parent menubar item.</li></ul> |\n   * | _Right Arrow_ | <ul><li>If focus is on an item with a submenu, opens the submenu and places focus on the first item.</li><li>If focus is on an item that does not have a submenu:<ul><li>Closes submenu.</li><li>Moves focus to next item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Left Arrow_ | <ul><li>Closes submenu and moves focus to parent menu item.</li><li>If parent menu item is in the menubar, also:<ul><li>moves focus to previous item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Down Arrow_ | <ul><li>Moves focus to the next item in the submenu.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Up Arrow_ | <ul><li>Moves focus to previous item in the submenu.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | Home | Moves focus to the first item in the submenu. |\n   * | End | Moves focus to the last item in the submenu. |\n   * | _Character_ | <ul><li>Moves focus to the next item having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            } else {\n              this.currentMenuItem.dom.link.click();\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              (toggle) => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's next child.\n   *\n   * If the currently focussed child in the menu is the last child then this will\n   * focus the first child in the menu.\n   */\n  focusNextChild() {\n    // If the current child is the last child of the menu, focus the menu's first child.\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.focusChild(this.currentChild + 1);\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   *\n   * If the currently focussed child in the menu is the first child then this will\n   * focus the last child in the menu.\n   */\n  focusPreviousChild() {\n    // If the current child is the first child of the menu, focus the menu's last child.\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.focusChild(this.currentChild - 1);\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (this.elements.menuItems[index].dom.item.innerText) {\n        text = this.elements.menuItems[index].dom.item.innerText;\n      } else {\n        text = this.elements.menuItems[index].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        this.focusChild(index);\n      }\n\n      index++;\n    }\n  }\n}\n\nexport default Menubar;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","BaseMenuToggle","_dom","toggle","parent","_elements","controlledMenu","parentMenu","_open","_expandEvent","CustomEvent","bubbles","detail","_collapseEvent","constructor","_ref","menuToggleElement","parentElement","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","isOpen","_expand","emit","arguments","undefined","closeClass","openClass","classList","add","remove","dispatchEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","item","link","childMenu","_submenu","menuItemElement","menuLinkElement","isSubmenuItem","focus","shouldFocus","keyPress","event","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","_MenuType","_MenuItemType","_MenuToggleType","menuItems","submenuItems","submenus","controller","container","_selectors","menuLinks","rootMenu","_openClass","_closeClass","_root","_currentChild","_focusState","_currentEvent","_hoverType","_hoverDelay","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","_validate","_findRootMenu","_setDOMElements","_createChildElements","selectors","currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","_setDOMElementType","base","overwrite","domElements","from","querySelectorAll","filteredElements","filter","_resetDOMElementType","element","toggler","submenu","push","_handleFocus","addEventListener","_handleClick","toggleToggle","blurChildren","passive","_handleHover","pointerType","some","focusCurrentChild","setTimeout","_handleKeydown","_handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","MenubarItem","tabIndex","MenubarToggle","Menubar","contains","target","submenuKeys","controllerKeys","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","click","previousChildOpen","hasOpenChild","char","text","textContent","charAt"],"mappings":"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"}