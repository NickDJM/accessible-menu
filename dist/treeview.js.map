{"version":3,"file":"treeview.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/treeviewItem.js","../src/treeviewToggle.js","../src/treeview.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  isValidType(\"string\", { event });\n  isValidInstance(HTMLElement, { element });\n\n  const eventProp = `on${event}`;\n\n  return typeof element[eventProp] !== \"undefined\";\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}        param0                     - The menu toggle object.\n   * @param {HTMLElement}   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   param0.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) this.elements.parentMenu.focusState = \"child\";\n    this.elements.controlledMenu.focusState = \"self\";\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      this.isOpen = false;\n\n      // Close the controlled menu and close all children.\n      this.collapse();\n      this.closeChildren();\n\n      // Set proper focus states to parent & child.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    this.submenuOpenClass = value;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    this.submenuCloseClass = value;\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    this.focussedChild = value;\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    this.state = value;\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    this.event = value;\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    this.hover = value;\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    this.delay = value;\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (submenuOpenClass !== \"\" && !isValidClassList({ submenuOpenClass })) {\n      check = false;\n    }\n\n    if (submenuCloseClass !== \"\" && !isValidClassList({ submenuCloseClass })) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      menu.currentEvent = \"mouse\";\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"mouseup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n\n    // Toggle submenus when their controllers are clicked.\n    this.elements.submenuToggles.forEach((toggle) => {\n      if (isEventSupported(\"touchend\", toggle.dom.toggle)) {\n        toggle.dom.toggle.ontouchend = (event) => {\n          toggleToggle(this, toggle, event);\n        };\n      } else {\n        toggle.dom.toggle.onmouseup = (event) => {\n          toggleToggle(this, toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      if (isEventSupported(\"touchend\", this.elements.controller.dom.toggle)) {\n        this.elements.controller.dom.toggle.ontouchend = (event) => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      } else {\n        this.elements.controller.dom.toggle.onmouseup = (event) => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      }\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.blur();\n    }\n\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.close();\n    }\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.blurCurrentChild();\n    this.currentChild = 0;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.blurCurrentChild();\n    this.currentChild = this.elements.menuItems.length - 1;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild + 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild - 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Treeview.\n */\nclass TreeviewItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Treeview|null}       [param0.childMenu = null]      - The child menu.\n   * @param {TreeviewToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}             [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item by setting its role and tab index.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link and set proper tabIndex.\n   */\n  focus() {\n    super.focus();\n\n    this.dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Blurs the menu item's link and set proper tabIndex.\n   */\n  blur() {\n    super.blur();\n\n    this.dom.link.tabIndex = -1;\n  }\n}\n\nexport default TreeviewItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a TreeviewNavigation.\n */\nclass TreeviewNavigationToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                  param0                     - The menu toggle object.\n   * @param {HTMLElement}             param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}             param0.parentElement       - The element containing the controlled menu.\n   * @param {TreeviewNavigation}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {TreeviewNavigation|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                 [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    this.isOpen = true;\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) this.elements.parentMenu.focusState = \"child\";\n    this.elements.controlledMenu.focusState = \"self\";\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    this.isOpen = true;\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      this.isOpen = false;\n\n      // Close the controlled menu.\n      this.collapse();\n\n      // Set proper focus states to parent & child.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n    }\n  }\n}\n\nexport default TreeviewNavigationToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TreeviewItem from \"./treeviewItem.js\";\nimport TreeviewToggle from \"./treeviewToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html\n * or https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2b.html\n */\nclass Treeview extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}           param0                               - The menu object.\n   * @param {HTMLElement}      param0.menuElement                   - The menu element in the DOM.\n   * @param {string}           [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}           [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}           [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}           [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}           [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null} [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null} [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}           [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}           [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}          [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Treeview|null}    [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}           [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}           [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}          [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = Treeview;\n    this.MenuItemType = TreeviewItem;\n    this.MenuToggleType = TreeviewToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"tree\");\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"group\");\n      }\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n\n      this.elements.menuItems[0].dom.link.tabIndex = 0;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"Space\",\n          \"ArrowUp\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Asterisk\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\n        const controllerKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Enter\" || key === \"Space\") {\n          // Hitting Space or Enter:\n          // - Performs the default action (e.g. onclick event) for the focused node.\n          // - If focus is on a closed node, opens the node; focus does not move.\n          preventEvent(event);\n\n          if (this.currentMenuItem.isSubmenuItem) {\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next node that is focusable without opening or closing a node.\n          // - If focus is on the last node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else if (\n            !this.isTopLevel &&\n            this.currentChild === this.elements.menuItems.length - 1\n          ) {\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusNextChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\n          // - If focus is on the first node, does nothing.\n          preventEvent(event);\n\n          const previousMenuItem = this.elements.menuItems[\n            this.currentChild - 1\n          ];\n\n          if (\n            previousMenuItem &&\n            previousMenuItem.isSubmenuItem &&\n            previousMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentChild = this.currentChild - 1;\n            this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusLastChild();\n          } else if (!this.isTopLevel && this.currentChild === 0) {\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          } else {\n            this.focusPreviousChild();\n          }\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - When focus is on a closed node, opens the node; focus does not move.\n          // - When focus is on a open node, moves focus to the first child node.\n          // - When focus is on an end node, does nothing.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - When focus is on an open node, closes the node.\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.toggle.close();\n          } else if (!this.isTopLevel) {\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          }\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first node without opening or closing a node.\n          this.elements.rootMenu.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\n          this.elements.rootMenu.focusLastNode();\n        } else if (key === \"Asterisk\") {\n          // Hitting Asterisk:\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\n          // - Focus does not move.\n          this.openChildren();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's last node of the entire expanded menu.\n   *\n   * This includes all _open_ child menu items.\n   */\n  focusLastNode() {\n    const numberOfItems = this.elements.menuItems.length - 1;\n    const lastChild = this.elements.menuItems[numberOfItems];\n\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\n      this.currentChild = numberOfItems;\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\n      lastChild.elements.childMenu.focusLastNode();\n    } else {\n      this.focusLastChild();\n    }\n  }\n\n  /**\n   * Open all submenu children.\n   */\n  openChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\n  }\n}\n\nexport default Treeview;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","emit","closeClass","openClass","classList","add","remove","dispatchEvent","expand","closeSiblings","focusState","closeChildren","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","currentEvent","hoverType","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","Error","findRootMenu","setDOMElements","createChildElements","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","setDOMElementType","clearDOMElementType","addDOMElementType","menuItem","toggler","submenu","push","index","addEventListener","toggleToggle","contains","target","ontouchend","onmouseup","preview","some","focusCurrentChild","setTimeout","focusFirstChild","blurCurrentChild","currentMenuItem","TreeviewItem","tabIndex","TreeviewNavigationToggle","Treeview","TreeviewToggle","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","submenuKeys","controllerKeys","click","focusNextChild","previousMenuItem","focusLastChild","focusPreviousChild","focusLastNode","openChildren","numberOfItems","lastChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,SAASA,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EACpD,MAAI;EACF,QAAI,QAAOA,QAAP,MAAoB,QAAxB,EAAkC;EAChC,UAAMC,YAAY,WAAUD,QAAV,CAAlB;;EAEA,YAAM,IAAIE,SAAJ,4FACgFD,YADhF,aAAN;EAGD;;EAED,SAAK,IAAME,GAAX,IAAkBH,QAAlB,EAA4B;EAC1B,UAAI,EAAEA,QAAQ,CAACG,GAAD,CAAR,YAAyBJ,UAA3B,CAAJ,EAA4C;EAC1C,YAAMK,WAAW,WAAUJ,QAAQ,CAACG,GAAD,CAAlB,CAAjB;;EACA,cAAM,IAAID,SAAJ,2BACeC,GADf,qCAC6CJ,UAD7C,eAC4DK,WAD5D,aAAN;EAGD;EACF;;EAED,WAAO,IAAP;EACD,GAnBD,CAmBE,OAAOC,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASE,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;EACxC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMC,UAAU,WAAUD,MAAV,CAAhB;;EAEA,YAAM,IAAIP,SAAJ,sFAC0EQ,UAD1E,aAAN;EAGD;;EAED,SAAK,IAAMP,GAAX,IAAkBM,MAAlB,EAA0B;EACxB,UAAME,SAAS,WAAUF,MAAM,CAACN,GAAD,CAAhB,CAAf;;EAEA,UAAIQ,SAAS,KAAKH,IAAlB,EAAwB;EACtB,cAAM,IAAIN,SAAJ,2BACeC,GADf,wBACgCK,IADhC,eACyCG,SADzC,aAAN;EAGD;EACF;;EAED,WAAO,IAAP;EACD,GApBD,CAoBE,OAAON,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASO,aAAT,CAAuBH,MAAvB,EAA+B;EACpC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMD,IAAI,WAAUC,MAAV,CAAV;;EAEA,YAAM,IAAIP,SAAJ,wFAC4EM,IAD5E,aAAN;EAGD;;EAED,SAAK,IAAML,GAAX,IAAkBM,MAAlB,EAA0B;EACxB,UAAI;EACFI,QAAAA,QAAQ,CAACC,aAAT,CAAuBL,MAAM,CAACN,GAAD,CAA7B;EACD,OAFD,CAEE,OAAOE,KAAP,EAAc;EACd,cAAM,IAAIH,SAAJ,2BACeC,GADf,8CACqDM,MAAM,CAACN,GAAD,CAD3D,eAAN;EAGD;EACF;;EAED,WAAO,IAAP;EACD,GApBD,CAoBE,OAAOE,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASU,gBAAT,CAA0BN,MAA1B,EAAkC;EACvC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMD,IAAI,WAAUC,MAAV,CAAV;;EAEA,YAAM,IAAIP,SAAJ,2FAC+EM,IAD/E,aAAN;EAGD;;EAPC,+BASSL,GATT;EAUA,UAAMK,IAAI,WAAUC,MAAM,CAACN,GAAD,CAAhB,CAAV;;EAEA,UAAIK,IAAI,KAAK,QAAb,EAAuB;EACrB,YAAIQ,KAAK,CAACC,OAAN,CAAcR,MAAM,CAACN,GAAD,CAApB,CAAJ,EAAgC;EAC9BM,UAAAA,MAAM,CAACN,GAAD,CAAN,CAAYe,OAAZ,CAAoB,UAACC,KAAD,EAAW;EAC7B,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7B,oBAAM,IAAIjB,SAAJ,2BACeC,GADf,sFAAN;EAGD;EACF,WAND;EAOD,SARD,MAQO;EACL,gBAAM,IAAID,SAAJ,2BACeC,GADf,uDAC+DK,IAD/D,aAAN;EAGD;EACF,OAdD,MAcO;EACL,YAAMY,GAAG,GAAG,EAAZ;EACAA,QAAAA,GAAG,CAACjB,GAAD,CAAH,GAAWM,MAAM,CAACN,GAAD,CAAjB;EAEAS,QAAAA,aAAa,CAACQ,GAAD,CAAb;EACD;EA/BD;;EASF,SAAK,IAAMjB,GAAX,IAAkBM,MAAlB,EAA0B;EAAA,YAAfN,GAAe;EAuBzB;;EAED,WAAO,IAAP;EACD,GAnCD,CAmCE,OAAOE,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASgB,YAAT,CAAsBZ,MAAtB,EAA8B;EACnC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMD,IAAI,WAAUC,MAAV,CAAV;;EAEA,YAAM,IAAIP,SAAJ,uFAC2EM,IAD3E,aAAN;EAGD;;EAED,QAAMc,WAAW,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,CAApB;;EAEA,SAAK,IAAMnB,GAAX,IAAkBM,MAAlB,EAA0B;EACxB,UAAI,CAACa,WAAW,CAACC,QAAZ,CAAqBd,MAAM,CAACN,GAAD,CAA3B,CAAL,EAAwC;EACtC,cAAM,IAAID,SAAJ,2BACeC,GADf,mDAC2DmB,WAAW,CAACE,IAAZ,CAC7D,IAD6D,CAD3D,iBAGGf,MAAM,CAACN,GAAD,CAHT,eAAN;EAKD;EACF;;EAED,WAAO,IAAP;EACD,GAtBD,CAsBE,OAAOE,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASoB,YAAT,CAAsBhB,MAAtB,EAA8B;EACnC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMD,IAAI,WAAUC,MAAV,CAAV;;EAEA,YAAM,IAAIP,SAAJ,uFAC2EM,IAD3E,aAAN;EAGD;;EAED,QAAMkB,WAAW,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CAApB;;EAEA,SAAK,IAAMvB,GAAX,IAAkBM,MAAlB,EAA0B;EACxB,UAAI,CAACiB,WAAW,CAACH,QAAZ,CAAqBd,MAAM,CAACN,GAAD,CAA3B,CAAL,EAAwC;EACtC,cAAM,IAAID,SAAJ,2BACeC,GADf,mDAC2DuB,WAAW,CAACF,IAAZ,CAC7D,IAD6D,CAD3D,iBAGGf,MAAM,CAACN,GAAD,CAHT,eAAN;EAKD;EACF;;EAED,WAAO,IAAP;EACD,GAtBD,CAsBE,OAAOE,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASsB,gBAAT,CAA0BlB,MAA1B,EAAkC;EACvC,MAAI;EACF,QAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;EAC9B,UAAMD,IAAI,WAAUC,MAAV,CAAV;;EAEA,YAAM,IAAIP,SAAJ,2FAC+EM,IAD/E,aAAN;EAGD;;EAED,QAAMkB,WAAW,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,SAAd,CAApB;;EAEA,SAAK,IAAMvB,GAAX,IAAkBM,MAAlB,EAA0B;EACxB,UAAI,CAACiB,WAAW,CAACH,QAAZ,CAAqBd,MAAM,CAACN,GAAD,CAA3B,CAAL,EAAwC;EACtC,cAAM,IAAID,SAAJ,2BACeC,GADf,mDAC2DuB,WAAW,CAACF,IAAZ,CAC7D,IAD6D,CAD3D,iBAGGf,MAAM,CAACN,GAAD,CAHT,eAAN;EAKD;EACF;;EAED,WAAO,IAAP;EACD,GAtBD,CAsBE,OAAOE,KAAP,EAAc;EACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASuB,KAAT,CAAeC,OAAf,EAAwB7B,QAAxB,EAAkC;EACvC,MACEO,WAAW,CAAC,QAAD,EAAW;EAAEsB,IAAAA,OAAO,EAAPA;EAAF,GAAX,CAAX,IACA/B,eAAe,CAACgC,WAAD,EAAc9B,QAAd,CAFjB,EAGE;EACA,QAAM+B,GAAG,GAAGF,OAAO,CAACG,WAAR,EAAZ;EACA,QAAIC,KAAK,GAAG,IAAZ;;EAEA,SAAK,IAAM9B,GAAX,IAAkBH,QAAlB,EAA4B;EAC1B,UAAIA,QAAQ,CAACG,GAAD,CAAR,CAAc0B,OAAd,CAAsBG,WAAtB,OAAwCD,GAA5C,EAAiDE,KAAK,GAAG,KAAR;EAClD;;EAED,WAAOA,KAAP;EACD,GAZD,MAYO;EACL,WAAO,KAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;EAC/C7B,EAAAA,WAAW,CAAC,QAAD,EAAW;EAAE4B,IAAAA,KAAK,EAALA;EAAF,GAAX,CAAX;EACArC,EAAAA,eAAe,CAACgC,WAAD,EAAc;EAAEM,IAAAA,OAAO,EAAPA;EAAF,GAAd,CAAf;EAEA,MAAMC,SAAS,eAAQF,KAAR,CAAf;EAEA,SAAO,OAAOC,OAAO,CAACC,SAAD,CAAd,KAA8B,WAArC;EACD;;ECrVD;EACA;EACA;;MACMC;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,gCAKG;EAAA,QAJDC,iBAIC,QAJDA,iBAIC;EAAA,QAHDC,aAGC,QAHDA,aAGC;EAAA,QAFDC,cAEC,QAFDA,cAEC;EAAA,+BADDC,UACC;EAAA,QADDA,UACC,gCADY,IACZ;;EAAA;;EACD,SAAKC,WAAL,GAAmB;EACjBC,MAAAA,MAAM,EAAEL,iBADS;EAEjBM,MAAAA,MAAM,EAAEL;EAFS,KAAnB;EAIA,SAAKM,YAAL,GAAoB;EAClBL,MAAAA,cAAc,EAAdA,cADkB;EAElBC,MAAAA,UAAU,EAAVA;EAFkB,KAApB;EAIA,SAAKK,MAAL,GAAc,KAAd;EAEA,SAAKC,WAAL,GAAmB,IAAIC,WAAJ,CAAgB,sBAAhB,EAAwC;EACzDC,MAAAA,OAAO,EAAE,IADgD;EAEzDC,MAAAA,MAAM,EAAE;EAAEP,QAAAA,MAAM,EAAE;EAAV;EAFiD,KAAxC,CAAnB;EAIA,SAAKQ,aAAL,GAAqB,IAAIH,WAAJ,CAAgB,wBAAhB,EAA0C;EAC7DC,MAAAA,OAAO,EAAE,IADoD;EAE7DC,MAAAA,MAAM,EAAE;EAAEP,QAAAA,MAAM,EAAE;EAAV;EAFqD,KAA1C,CAArB;EAKA,SAAKS,UAAL;EACD;EAED;EACF;EACA;EACA;;;;;aACE,sBAAa;EACX;EACA,WAAKC,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CAA6B,eAA7B,EAA8C,MAA9C;EACA,WAAKD,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CAA6B,eAA7B,EAA8C,OAA9C,EAHW;;EAMX,UAAI,CAAC3B,KAAK,CAAC,QAAD,EAAW;EAAEgB,QAAAA,MAAM,EAAE,KAAKU,GAAL,CAASV;EAAnB,OAAX,CAAV,EAAmD;EACjD,aAAKU,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CAA6B,MAA7B,EAAqC,QAArC;EACD,OARU;;;EAWX,UACE,KAAKD,GAAL,CAASV,MAAT,CAAgBY,EAAhB,KAAuB,EAAvB,IACA,KAAKxD,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCD,EAAtC,KAA6C,EAF/C,EAGE;EACA,YAAME,YAAY,GAAGC,IAAI,CAACC,MAAL,GAClBC,QADkB,CACT,EADS,EAElBC,OAFkB,CAEV,UAFU,EAEE,EAFF,EAGlBC,MAHkB,CAGX,CAHW,EAGR,EAHQ,CAArB;EAKA,YAAIP,EAAE,GAAG,KAAKF,GAAL,CAASV,MAAT,CAAgBoB,SAAhB,CAA0BF,OAA1B,CAAkC,iBAAlC,EAAqD,EAArD,CAAT;EACA,YAAIG,OAAO,GAAGP,YAAd;;EAEA,YACE,CAACF,EAAE,CAACM,OAAH,CAAW,KAAX,EAAkB,EAAlB,EAAsBI,MAAvB,IACA,KAAKZ,GAAL,CAASV,MAAT,CAAgBuB,YAAhB,CAA6B,YAA7B,CAFF,EAGE;EACAX,UAAAA,EAAE,GAAG,KAAKF,GAAL,CAASV,MAAT,CACFuB,YADE,CACW,YADX,EAEFL,OAFE,CAEM,iBAFN,EAEyB,EAFzB,CAAL;EAGD;;EAED,YAAIN,EAAE,CAACM,OAAH,CAAW,KAAX,EAAkB,EAAlB,EAAsBI,MAAtB,GAA+B,CAAnC,EAAsC;EACpCV,UAAAA,EAAE,GAAGA,EAAE,CAACxB,WAAH,GAAiB8B,OAAjB,CAAyB,MAAzB,EAAiC,GAAjC,CAAL;;EAEA,cAAIN,EAAE,CAACY,UAAH,CAAc,GAAd,CAAJ,EAAwB;EACtBZ,YAAAA,EAAE,GAAGA,EAAE,CAACa,SAAH,CAAa,CAAb,CAAL;EACD;;EAED,cAAIb,EAAE,CAACc,QAAH,CAAY,GAAZ,CAAJ,EAAsB;EACpBd,YAAAA,EAAE,GAAGA,EAAE,CAACe,KAAH,CAAS,CAAT,EAAY,CAAC,CAAb,CAAL;EACD;;EAEDN,UAAAA,OAAO,aAAMT,EAAN,cAAYS,OAAZ,CAAP;EACD;;EAED,aAAKX,GAAL,CAASV,MAAT,CAAgBY,EAAhB,GAAqB,KAAKF,GAAL,CAASV,MAAT,CAAgBY,EAAhB,cAAyBS,OAAzB,iBAArB;EACA,aAAKjE,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCD,EAAtC,GACE,KAAKxD,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCD,EAAtC,cAA+CS,OAA/C,UADF;EAED,OAjDU;;;EAoDX,WAAKjE,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCF,YAAtC,CACE,iBADF,EAEE,KAAKD,GAAL,CAASV,MAAT,CAAgBY,EAFlB;EAIA,WAAKF,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CACE,eADF,EAEE,KAAKvD,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCD,EAFxC,EAxDW;;EA8DX,WAAKgB,QAAL,CAAc,KAAd;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAU;EACR,aAAO,KAAK7B,WAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAe;EACb,aAAO,KAAKG,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAa;EACX,aAAO,KAAK2B,IAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;WACE,aAAWtD,KAAX,EAAkB;EAChBZ,MAAAA,WAAW,CAAC,SAAD,EAAY;EAAEY,QAAAA,KAAK,EAALA;EAAF,OAAZ,CAAX;EAEA,WAAKsD,IAAL,GAAYtD,KAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;;;;aACE,kBAAoB;EAAA;;EAAA,UAAbuD,IAAa,uEAAN,IAAM;EAAA,kCACgB,KAAK1E,QAAL,CAAcyC,cAD9B;EAAA,UACVkC,UADU,yBACVA,UADU;EAAA,UACEC,SADF,yBACEA,SADF;EAGlB,WAAKtB,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CAA6B,eAA7B,EAA8C,MAA9C,EAHkB;;EAMlB,UAAIqB,SAAS,KAAK,EAAlB,EAAsB;EACpB,YAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;EACjC,eAAK5E,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDC,GAAhD,CAAoDF,SAApD;EACD,SAFD,MAEO,IAAI5D,KAAK,CAACC,OAAN,CAAc2D,SAAd,CAAJ,EAA8B;EACnCA,UAAAA,SAAS,CAAC1D,OAAV,CAAkB,UAACC,KAAD,EAAW;EAC3B,YAAA,KAAI,CAACnB,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDC,GAAhD,CAAoD3D,KAApD;EACD,WAFD;EAGD;EACF,OAdiB;;;EAiBlB,UAAIwD,UAAU,KAAK,EAAnB,EAAuB;EACrB,YAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;EAClC,eAAK3E,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDE,MAAhD,CAAuDJ,UAAvD;EACD,SAFD,MAEO,IAAI3D,KAAK,CAACC,OAAN,CAAc0D,UAAd,CAAJ,EAA+B;EACpCA,UAAAA,UAAU,CAACzD,OAAX,CAAmB,UAACC,KAAD,EAAW;EAC5B,YAAA,KAAI,CAACnB,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDE,MAAhD,CAAuD5D,KAAvD;EACD,WAFD;EAGD;EACF;;EAED,UAAIuD,IAAJ,EAAU;EACR,aAAKpB,GAAL,CAASV,MAAT,CAAgBoC,aAAhB,CAA8B,KAAKhC,WAAnC;EACD;EACF;EAED;EACF;EACA;EACA;EACA;EACA;EACA;;;;aACE,oBAAsB;EAAA;;EAAA,UAAb0B,IAAa,uEAAN,IAAM;EAAA,mCACc,KAAK1E,QAAL,CAAcyC,cAD5B;EAAA,UACZkC,UADY,0BACZA,UADY;EAAA,UACAC,SADA,0BACAA,SADA;EAGpB,WAAKtB,GAAL,CAASV,MAAT,CAAgBW,YAAhB,CAA6B,eAA7B,EAA8C,OAA9C,EAHoB;;EAMpB,UAAIoB,UAAU,KAAK,EAAnB,EAAuB;EACrB,YAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;EAClC,eAAK3E,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDC,GAAhD,CAAoDH,UAApD;EACD,SAFD,MAEO,IAAI3D,KAAK,CAACC,OAAN,CAAc0D,UAAd,CAAJ,EAA+B;EACpCA,UAAAA,UAAU,CAACzD,OAAX,CAAmB,UAACC,KAAD,EAAW;EAC5B,YAAA,MAAI,CAACnB,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDC,GAAhD,CAAoD3D,KAApD;EACD,WAFD;EAGD;EACF,OAdmB;;;EAiBpB,UAAIyD,SAAS,KAAK,EAAlB,EAAsB;EACpB,YAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;EACjC,eAAK5E,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDE,MAAhD,CAAuDH,SAAvD;EACD,SAFD,MAEO,IAAI5D,KAAK,CAACC,OAAN,CAAc2D,SAAd,CAAJ,EAA8B;EACnCA,UAAAA,SAAS,CAAC1D,OAAV,CAAkB,UAACC,KAAD,EAAW;EAC3B,YAAA,MAAI,CAACnB,QAAL,CAAcyC,cAAd,CAA6Ba,GAA7B,CAAiCG,IAAjC,CAAsCoB,SAAtC,CAAgDE,MAAhD,CAAuD5D,KAAvD;EACD,WAFD;EAGD;EACF;;EAED,UAAIuD,IAAJ,EAAU;EACR,aAAKpB,GAAL,CAASV,MAAT,CAAgBoC,aAAhB,CAA8B,KAAK5B,aAAnC;EACD;EACF;EAED;EACF;EACA;;;;aACE,gBAAO;EACL,WAAKL,MAAL,GAAc,IAAd,CADK;;EAIL,WAAKkC,MAAL;EACA,WAAKC,aAAL,GALK;;EAQL,UAAI,KAAKlF,QAAL,CAAc0C,UAAlB,EAA8B,KAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,OAAtC;EAC9B,WAAKnF,QAAL,CAAcyC,cAAd,CAA6B0C,UAA7B,GAA0C,MAA1C;EACD;EAED;EACF;EACA;;;;aACE,mBAAU;EACR,WAAKpC,MAAL,GAAc,IAAd,CADQ;;EAIR,WAAKkC,MAAL;EACA,WAAKC,aAAL,GALQ;;EAQR,UAAI,KAAKlF,QAAL,CAAc0C,UAAlB,EAA8B;EAC5B,aAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,MAAtC;EACD;;EAED,WAAKnF,QAAL,CAAcyC,cAAd,CAA6B0C,UAA7B,GAA0C,MAA1C;EACD;EAED;EACF;EACA;;;;aACE,iBAAQ;EACN,UAAI,KAAKpC,MAAT,EAAiB;EACf,aAAKA,MAAL,GAAc,KAAd,CADe;;EAIf,aAAKyB,QAAL;EACA,aAAKY,aAAL,GALe;;EAQf,aAAKpF,QAAL,CAAcyC,cAAd,CAA6B4C,YAA7B,GAA4C,CAA5C;EACA,aAAKrF,QAAL,CAAcyC,cAAd,CAA6B6C,IAA7B;;EAEA,YAAI,KAAKtF,QAAL,CAAc0C,UAAlB,EAA8B;EAC5B,eAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,MAAtC;EACD;EACF;EACF;EAED;EACF;EACA;;;;aACE,kBAAS;EACP,UAAI,KAAKpC,MAAT,EAAiB;EACf,aAAKwC,KAAL;EACD,OAFD,MAEO;EACL,aAAKC,IAAL;EACD;EACF;EAED;EACF;EACA;;;;aACE,yBAAgB;EAAA;;EACd,UAAI,KAAKxF,QAAL,CAAc0C,UAAlB,EAA8B;EAC5B,aAAK1C,QAAL,CAAc0C,UAAd,CAAyB1C,QAAzB,CAAkCyF,cAAlC,CAAiDvE,OAAjD,CAAyD,UAAC0B,MAAD,EAAY;EACnE,cAAIA,MAAM,KAAK,MAAf,EAAqBA,MAAM,CAAC2C,KAAP;EACtB,SAFD;EAGD;EACF;EAED;EACF;EACA;;;;aACE,yBAAgB;EACd,WAAKvF,QAAL,CAAcyC,cAAd,CAA6BzC,QAA7B,CAAsCyF,cAAtC,CAAqDvE,OAArD,CAA6D,UAAC0B,MAAD;EAAA,eAC3DA,MAAM,CAAC2C,KAAP,EAD2D;EAAA,OAA7D;EAGD;;;;;;ECzTH;;EAEA;EACA;EACA;MACMG;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,8BAOG;EAAA,QANDC,eAMC,QANDA,eAMC;EAAA,QALDC,eAKC,QALDA,eAKC;EAAA,QAJDlD,UAIC,QAJDA,UAIC;EAAA,kCAHDmD,aAGC;EAAA,QAHDA,aAGC,mCAHe,KAGf;EAAA,8BAFDC,SAEC;EAAA,QAFDA,SAEC,+BAFW,IAEX;EAAA,2BADDlD,MACC;EAAA,QADDA,MACC,4BADQ,IACR;;EAAA;;EACD,SAAKD,WAAL,GAAmB;EACjBoD,MAAAA,IAAI,EAAEJ,eADW;EAEjBK,MAAAA,IAAI,EAAEJ;EAFW,KAAnB;EAIA,SAAK9C,YAAL,GAAoB;EAClBJ,MAAAA,UAAU,EAAVA,UADkB;EAElBoD,MAAAA,SAAS,EAATA,SAFkB;EAGlBlD,MAAAA,MAAM,EAANA;EAHkB,KAApB;EAKA,SAAKqD,YAAL,GAAoBJ,aAApB;EACD;EAED;EACF;EACA;;;;;aACE,sBAAa;EAEb;EACF;EACA;EACA;EACA;;;;WACE,eAAU;EACR,aAAO,KAAKlD,WAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAe;EACb,aAAO,KAAKG,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAoB;EAClB,aAAO,KAAKmD,YAAZ;EACD;EAED;EACF;EACA;;;;aACE,iBAAQ;EACN,UACE,KAAKjG,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,KAA0C,UAA1C,IACC,KAAKlG,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,KAA0C,OAA1C,IACC,KAAKlG,QAAL,CAAc0C,UAAd,CAAyByD,SAAzB,KAAuC,SAH3C,EAIE;EACA,aAAK7C,GAAL,CAAS0C,IAAT,CAAcI,KAAd;EACD;EACF;EAED;EACF;EACA;;;;aACE,gBAAO;EACL,UACE,KAAKpG,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,KAA0C,UAA1C,IACC,KAAKlG,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,KAA0C,OAA1C,IACC,KAAKlG,QAAL,CAAc0C,UAAd,CAAyByD,SAAzB,KAAuC,SAH3C,EAIE;EACA,aAAK7C,GAAL,CAAS0C,IAAT,CAAcV,IAAd;EACD;EACF;;;;;;EC7FH;EACA;EACA;EACA;EACA;EACA;EACA;EACO,SAASe,QAAT,CAAkBlE,KAAlB,EAAyB;EAC9B,MAAI;EACF;EACA,QAAMhC,GAAG,GAAGgC,KAAK,CAAChC,GAAN,IAAagC,KAAK,CAACmE,OAA/B;EACA,QAAMC,IAAI,GAAG;EACXC,MAAAA,KAAK,EAAErG,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,EADvB;EAEXsG,MAAAA,KAAK,EAAEtG,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,UAAvB,IAAqCA,GAAG,KAAK,EAFzC;EAGXuG,MAAAA,MAAM,EAAEvG,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,KAA5B,IAAqCA,GAAG,KAAK,EAH1C;EAIXwG,MAAAA,OAAO,EAAExG,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,IAA7B,IAAqCA,GAAG,KAAK,EAJ3C;EAKXyG,MAAAA,UAAU,EAAEzG,GAAG,KAAK,YAAR,IAAwBA,GAAG,KAAK,OAAhC,IAA2CA,GAAG,KAAK,EALpD;EAMX0G,MAAAA,SAAS,EAAE1G,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,MAA/B,IAAyCA,GAAG,KAAK,EANjD;EAOX2G,MAAAA,SAAS,EAAE3G,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,MAA/B,IAAyCA,GAAG,KAAK,EAPjD;EAQX4G,MAAAA,IAAI,EAAE5G,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,EARrB;EASX6G,MAAAA,GAAG,EAAE7G,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,EATnB;EAUX8G,MAAAA,SAAS,EAAE,CAAC,CAAC9G,GAAG,CAAC+G,KAAJ,CAAU,eAAV,CAVF;EAWXC,MAAAA,GAAG,EAAEhH,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,CAXnB;EAYXiH,MAAAA,QAAQ,EAAEjH,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK;EAZtB,KAAb;EAeA,WAAOkH,MAAM,CAACd,IAAP,CAAYA,IAAZ,EAAkBe,IAAlB,CAAuB,UAACnH,GAAD;EAAA,aAASoG,IAAI,CAACpG,GAAD,CAAJ,KAAc,IAAvB;EAAA,KAAvB,KAAuD,EAA9D;EACD,GAnBD,CAmBE,OAAOE,KAAP,EAAc;EACd;EACA,WAAO,EAAP;EACD;EACF;EAED;EACA;EACA;EACA;EACA;;EACO,SAASkH,YAAT,CAAsBpF,KAAtB,EAA6B;EAClCA,EAAAA,KAAK,CAACqF,cAAN;EACArF,EAAAA,KAAK,CAACsF,eAAN;EACD;;EC3BD;EACA;EACA;;MACMC;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,0BAeG;EAAA,QAdDC,WAcC,QAdDA,WAcC;EAAA,qCAbDC,gBAaC;EAAA,QAbDA,gBAaC,sCAbkB,IAalB;EAAA,qCAZDC,gBAYC;EAAA,QAZDA,gBAYC,sCAZkB,GAYlB;EAAA,qCAXDC,mBAWC;EAAA,QAXDA,mBAWC,sCAXqB,EAWrB;EAAA,qCAVDC,qBAUC;EAAA,QAVDA,qBAUC,sCAVuB,GAUvB;EAAA,oCATDC,eASC;EAAA,QATDA,eASC,qCATiB,IASjB;EAAA,qCARDC,iBAQC;EAAA,QARDA,iBAQC,sCARmB,IAQnB;EAAA,qCAPDC,gBAOC;EAAA,QAPDA,gBAOC,sCAPkB,IAOlB;EAAA,8BANDtD,SAMC;EAAA,QANDA,SAMC,+BANW,MAMX;EAAA,+BALDD,UAKC;EAAA,QALDA,UAKC,gCALY,MAKZ;EAAA,+BAJDwD,UAIC;EAAA,QAJDA,UAIC,gCAJY,IAIZ;EAAA,+BAHDzF,UAGC;EAAA,QAHDA,UAGC,gCAHY,IAGZ;EAAA,8BAFDyD,SAEC;EAAA,QAFDA,SAEC,+BAFW,KAEX;EAAA,+BADDiC,UACC;EAAA,QADDA,UACC,gCADY,GACZ;;EAAA;;EACD,SAAKzF,WAAL,GAAmB;EACjBc,MAAAA,IAAI,EAAEkE,WADW;EAEjBU,MAAAA,SAAS,EAAE,EAFM;EAGjBC,MAAAA,YAAY,EAAE,EAHG;EAIjB7C,MAAAA,cAAc,EAAE,EAJC;EAKjB8C,MAAAA,QAAQ,EAAE,EALO;EAMjBC,MAAAA,UAAU,EAAEP,iBANK;EAOjBQ,MAAAA,SAAS,EAAEP;EAPM,KAAnB;EASA,SAAKQ,YAAL,GAAoB;EAClBL,MAAAA,SAAS,EAAET,gBADO;EAElBe,MAAAA,SAAS,EAAEd,gBAFO;EAGlBS,MAAAA,YAAY,EAAER,mBAHI;EAIlBrC,MAAAA,cAAc,EAAEsC,qBAJE;EAKlBQ,MAAAA,QAAQ,EAAEP;EALQ,KAApB;EAOA,SAAKlF,YAAL,GAAoB;EAClBuF,MAAAA,SAAS,EAAE,EADO;EAElB5C,MAAAA,cAAc,EAAE,EAFE;EAGlB+C,MAAAA,UAAU,EAAE,IAHM;EAIlB9F,MAAAA,UAAU,EAAVA,UAJkB;EAKlBkG,MAAAA,QAAQ,EAAET,UAAU,GAAG,IAAH,GAAU;EALZ,KAApB;EAOA,SAAKU,gBAAL,GAAwBjE,SAAS,IAAI,EAArC;EACA,SAAKkE,iBAAL,GAAyBnE,UAAU,IAAI,EAAvC;EACA,SAAKoE,IAAL,GAAYZ,UAAZ;EACA,SAAKa,aAAL,GAAqB,CAArB;EACA,SAAKC,KAAL,GAAa,MAAb;EACA,SAAK9G,KAAL,GAAa,MAAb;EACA,SAAK+G,KAAL,GAAa/C,SAAb;EACA,SAAKgD,KAAL,GAAaf,UAAb,CA/BC;;EAkCD,SAAKgB,QAAL,GAAgB1B,QAAhB;EACA,SAAK2B,YAAL,GAAoB3D,YAApB;EACA,SAAK4D,cAAL,GAAsBhH,cAAtB;EACD;EAED;EACF;EACA;EACA;EACA;;;;;aACE,sBAAa;EACX,UAAI,CAAC,KAAKiH,QAAL,EAAL,EAAsB;EACpB,cAAM,IAAIC,KAAJ,CACJ,uFADI,CAAN;EAGD;;EALU,UAOHF,cAPG,GAOgB,IAPhB,CAOHA,cAPG;;EAUX,UAAI,KAAKtJ,QAAL,CAAc4I,QAAd,KAA2B,IAA/B,EAAqC,KAAKa,YAAL,CAAkB,IAAlB,EAV1B;;EAaX,WAAKC,cAAL;;EAEA,UAAI,KAAKvB,UAAT,EAAqB;EACnB,YAAI,KAAK7E,GAAL,CAASkF,UAAT,IAAuB,KAAKlF,GAAL,CAASmF,SAApC,EAA+C;EAC7C;EACA,cAAM7F,MAAM,GAAG,IAAI0G,cAAJ,CAAmB;EAChC/G,YAAAA,iBAAiB,EAAE,KAAKe,GAAL,CAASkF,UADI;EAEhChG,YAAAA,aAAa,EAAE,KAAKc,GAAL,CAASmF,SAFQ;EAGhChG,YAAAA,cAAc,EAAE,IAHgB;EAIhCmC,YAAAA,SAAS,EAAE,KAAKA,SAJgB;EAKhCD,YAAAA,UAAU,EAAE,KAAKA;EALe,WAAnB,CAAf;EAQA,eAAK7B,YAAL,CAAkB0F,UAAlB,GAA+B5F,MAA/B;EACD;EACF;;EAED,WAAK+G,mBAAL;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAU;EACR,aAAO,KAAKhH,WAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAgB;EACd,aAAO,KAAK+F,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAe;EACb,aAAO,KAAK5F,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;;WACE,eAAgB;EACd,aAAO,KAAKqF,UAAL,GACH,KAAKU,gBADF,GAEH,KAAK7I,QAAL,CAAc4I,QAAd,CAAuBhE,SAF3B;EAGD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;EA4EE;EACF;EACA;EACA;EACA;EACE,iBAAczD,KAAd,EAAqB;EACnBJ,MAAAA,gBAAgB,CAAC;EAAE6D,QAAAA,SAAS,EAAEzD;EAAb,OAAD,CAAhB;EAEA,WAAK0H,gBAAL,GAAwB1H,KAAxB;EACD;EAED;EACF;EACA;EACA;EACA;;;;WA1FE,eAAiB;EACf,aAAO,KAAKgH,UAAL,GACH,KAAKW,iBADF,GAEH,KAAK9I,QAAL,CAAc4I,QAAd,CAAuBjE,UAF3B;EAGD;EAED;EACF;EACA;EACA;EACA;;WAiFE,aAAexD,KAAf,EAAsB;EACpBJ,MAAAA,gBAAgB,CAAC;EAAE4D,QAAAA,UAAU,EAAExD;EAAd,OAAD,CAAhB;EAEA,WAAK2H,iBAAL,GAAyB3H,KAAzB;EACD;EAED;EACF;EACA;EACA;EACA;;;;WA1FE,eAAiB;EACf,aAAO,KAAK4H,IAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;;WACE,eAAmB;EACjB,aAAO,KAAKC,aAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;WA0EE,aAAiB7H,KAAjB,EAAwB;EACtBZ,MAAAA,WAAW,CAAC,QAAD,EAAW;EAAEY,QAAAA,KAAK,EAALA;EAAF,OAAX,CAAX;EAEA,WAAK6H,aAAL,GAAqB7H,KAArB;EACD;EAED;EACF;EACA;EACA;EACA;;;;WAnFE,eAAiB;EACf,aAAO,KAAK8H,KAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;WA4EE,aAAe9H,KAAf,EAAsB;EACpBE,MAAAA,YAAY,CAAC;EAAEF,QAAAA,KAAK,EAALA;EAAF,OAAD,CAAZ;EAEA,WAAK8H,KAAL,GAAa9H,KAAb;EACD;EAED;EACF;EACA;EACA;EACA;;;;WArFE,eAAmB;EACjB,aAAO,KAAKgB,KAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;WA8EE,aAAiBhB,KAAjB,EAAwB;EACtBM,MAAAA,YAAY,CAAC;EAAEN,QAAAA,KAAK,EAALA;EAAF,OAAD,CAAZ;EAEA,WAAKgB,KAAL,GAAahB,KAAb;EACD;EAED;EACF;EACA;EACA;EACA;;;;WAvFE,eAAsB;EACpB,aAAO,KAAKnB,QAAL,CAAcqI,SAAd,CAAwB,KAAKhD,YAA7B,CAAP;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;;WACE,eAAgB;EACd,aAAO,KAAK0D,IAAL,GAAY,KAAKG,KAAjB,GAAyB,KAAKlJ,QAAL,CAAc4I,QAAd,CAAuBzC,SAAvD;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;WAiEE,aAAchF,KAAd,EAAqB;EACnBQ,MAAAA,gBAAgB,CAAC;EAAER,QAAAA,KAAK,EAALA;EAAF,OAAD,CAAhB;EAEA,WAAK+H,KAAL,GAAa/H,KAAb;EACD;EAED;EACF;EACA;EACA;EACA;;;;WA1EE,eAAiB;EACf,aAAO,KAAK4H,IAAL,GAAY,KAAKI,KAAjB,GAAyB,KAAKnJ,QAAL,CAAc4I,QAAd,CAAuBR,UAAvD;EACD;WAyED,aAAejH,KAAf,EAAsB;EACpBZ,MAAAA,WAAW,CAAC,QAAD,EAAW;EAAEY,QAAAA,KAAK,EAALA;EAAF,OAAX,CAAX;EAEA,WAAKgI,KAAL,GAAahI,KAAb;EACD;EAED;EACF;EACA;EACA;EACA;;;;aACE,oBAAW;EAAA,UAEPwB,WAFO,GAUL,IAVK,CAEPA,WAFO;EAAA,UAGP+F,YAHO,GAUL,IAVK,CAGPA,YAHO;EAAA,UAIP5F,YAJO,GAUL,IAVK,CAIPA,YAJO;EAAA,UAKP+F,gBALO,GAUL,IAVK,CAKPA,gBALO;EAAA,UAMPC,iBANO,GAUL,IAVK,CAMPA,iBANO;EAAA,UAOPC,IAPO,GAUL,IAVK,CAOPA,IAPO;EAAA,UAQPG,KARO,GAUL,IAVK,CAQPA,KARO;EAAA,UASPC,KATO,GAUL,IAVK,CASPA,KATO;EAYT,UAAIlH,KAAK,GAAG,IAAZ;;EAEA,UAAIU,WAAW,CAAC8F,SAAZ,KAA0B,IAA1B,IAAkC9F,WAAW,CAAC6F,UAAZ,KAA2B,IAAjE,EAAuE;EACrE,YACE,CAAC1I,eAAe,CAACgC,WAAD,EAAc;EAC5B6F,UAAAA,WAAW,EAAEhF,WAAW,CAACc,IADG;EAE5BwE,UAAAA,iBAAiB,EAAEtF,WAAW,CAAC6F,UAFH;EAG5BN,UAAAA,gBAAgB,EAAEvF,WAAW,CAAC8F;EAHF,SAAd,CADlB,EAME;EACAxG,UAAAA,KAAK,GAAG,KAAR;EACD;EACF,OAVD,MAUO,IACL,CAACnC,eAAe,CAACgC,WAAD,EAAc;EAC5B6F,QAAAA,WAAW,EAAEhF,WAAW,CAACc;EADG,OAAd,CADX,EAIL;EACAxB,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAIyG,YAAY,CAACJ,YAAb,KAA8B,EAAlC,EAAsC;EACpC,YACE,CAAC1H,aAAa,CAAC;EACbgH,UAAAA,gBAAgB,EAAEc,YAAY,CAACL,SADlB;EAEbR,UAAAA,gBAAgB,EAAEa,YAAY,CAACC,SAFlB;EAGbb,UAAAA,mBAAmB,EAAEY,YAAY,CAACJ,YAHrB;EAIbP,UAAAA,qBAAqB,EAAEW,YAAY,CAACjD,cAJvB;EAKbuC,UAAAA,eAAe,EAAEU,YAAY,CAACH;EALjB,SAAD,CADhB,EAQE;EACAtG,UAAAA,KAAK,GAAG,KAAR;EACD;EACF,OAZD,MAYO,IACL,CAACrB,aAAa,CAAC;EACbgH,QAAAA,gBAAgB,EAAEc,YAAY,CAACL,SADlB;EAEbR,QAAAA,gBAAgB,EAAEa,YAAY,CAACC;EAFlB,OAAD,CADT,EAKL;EACA1G,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAI4G,gBAAgB,KAAK,EAArB,IAA2B,CAAC9H,gBAAgB,CAAC;EAAE8H,QAAAA,gBAAgB,EAAhBA;EAAF,OAAD,CAAhD,EAAwE;EACtE5G,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAI6G,iBAAiB,KAAK,EAAtB,IAA4B,CAAC/H,gBAAgB,CAAC;EAAE+H,QAAAA,iBAAiB,EAAjBA;EAAF,OAAD,CAAjD,EAA0E;EACxE7G,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAI,CAAC1B,WAAW,CAAC,SAAD,EAAY;EAAE4H,QAAAA,UAAU,EAAEY;EAAd,OAAZ,CAAhB,EAAmD;EACjD9G,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UACEa,YAAY,CAACJ,UAAb,KAA4B,IAA5B,IACA,CAAC5C,eAAe,CAAC4H,QAAD,EAAW;EAAEhF,QAAAA,UAAU,EAAEI,YAAY,CAACJ;EAA3B,OAAX,CAFlB,EAGE;EACAT,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAI,CAACN,gBAAgB,CAAC;EAAEwE,QAAAA,SAAS,EAAE+C;EAAb,OAAD,CAArB,EAA6C;EAC3CjH,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,UAAI,CAAC1B,WAAW,CAAC,QAAD,EAAW;EAAE6H,QAAAA,UAAU,EAAEe;EAAd,OAAX,CAAhB,EAAmD;EACjDlH,QAAAA,KAAK,GAAG,KAAR;EACD;;EAED,aAAOA,KAAP;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;;;;aACE,2BAAkB7B,WAAlB,EAA+BwJ,IAA/B,EAAqCC,MAArC,EAA6C;EAC3C,UAAI,OAAO,KAAKC,SAAL,CAAe1J,WAAf,CAAP,KAAuC,QAA3C,EAAqD;EACnD,YAAIwJ,IAAJ,EAAU9J,eAAe,CAACgC,WAAD,EAAc;EAAE8H,UAAAA,IAAI,EAAJA;EAAF,SAAd,CAAf;EAEV,YAAMG,WAAW,GAAGH,IAAI,IAAI,KAAKtG,GAAL,CAASG,IAArC;;EACA,YAAMuG,UAAU,GAAG,SAAbA,UAAa,CAACjE,IAAD;EAAA,iBAAUA,IAAI,CAACvD,aAAL,KAAuBuH,WAAjC;EAAA,SAAnB;;EACA,YAAME,QAAQ,GAAG,KAAKH,SAAL,CAAe1J,WAAf,CAAjB;EACA,YAAMuC,WAAW,GAAG3B,KAAK,CAACkJ,IAAN,CAAWH,WAAW,CAACI,gBAAZ,CAA6BF,QAA7B,CAAX,CAApB;;EAEA,YAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;EACjC,cAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;EAChC,iBAAKlH,WAAL,CAAiBvC,WAAjB,IAAgCuC,WAAW,CAACkH,MAAZ,CAAmB,UAAC9D,IAAD;EAAA,qBACjD8D,MAAM,CAAC9D,IAAD,CAD2C;EAAA,aAAnB,CAAhC;EAGD,WAJD,MAIO;EACL,iBAAKpD,WAAL,CAAiBvC,WAAjB,IAAgCuC,WAAhC;EACD;EACF,SARD,MAQO;EACL,eAAKA,WAAL,CAAiBvC,WAAjB,IAAgCuC,WAAW,CAACkH,MAAZ,CAAmB,UAAC9D,IAAD;EAAA,mBACjDiE,UAAU,CAACjE,IAAD,CADuC;EAAA,WAAnB,CAAhC;EAGD;EACF,OArBD,MAqBO;EACL,cAAM,IAAIyD,KAAJ,WACDpJ,WADC,mDAAN;EAGD;EACF;EAED;EACF;EACA;EACA;EACA;EACA;EACA;;;;aACE,2BAAkBA,WAAlB,EAA+BwJ,IAA/B,EAAqCC,MAArC,EAA6C;EAC3C,UAAI,OAAO,KAAKC,SAAL,CAAe1J,WAAf,CAAP,KAAuC,QAA3C,EAAqD;EACnD,YAAIwJ,IAAJ,EAAU9J,eAAe,CAACgC,WAAD,EAAc;EAAE8H,UAAAA,IAAI,EAAJA;EAAF,SAAd,CAAf;EAEV,YAAMG,WAAW,GAAGH,IAAI,IAAI,KAAKtG,GAAL,CAASG,IAArC;;EACA,YAAMuG,UAAU,GAAG,SAAbA,UAAa,CAACjE,IAAD;EAAA,iBAAUA,IAAI,CAACvD,aAAL,KAAuBuH,WAAjC;EAAA,SAAnB;;EACA,YAAME,QAAQ,GAAG,KAAKH,SAAL,CAAe1J,WAAf,CAAjB;EACA,YAAMuC,WAAW,GAAG3B,KAAK,CAACkJ,IAAN,CAAWH,WAAW,CAACI,gBAAZ,CAA6BF,QAA7B,CAAX,CAApB;;EAEA,YAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;EACjC,cAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;EAChC,iBAAKlH,WAAL,CAAiBvC,WAAjB,iCACK,KAAKuC,WAAL,CAAiBvC,WAAjB,CADL,sBAEKuC,WAAW,CAACkH,MAAZ,CAAmB,UAAC9D,IAAD;EAAA,qBAAU8D,MAAM,CAAC9D,IAAD,CAAhB;EAAA,aAAnB,CAFL;EAID,WALD,MAKO;EACL,iBAAKpD,WAAL,CAAiBvC,WAAjB,iCACK,KAAKuC,WAAL,CAAiBvC,WAAjB,CADL,sBAEKuC,WAFL;EAID;EACF,SAZD,MAYO;EACL,eAAKA,WAAL,CAAiBvC,WAAjB,iCACK,KAAKuC,WAAL,CAAiBvC,WAAjB,CADL,sBAEKuC,WAAW,CAACkH,MAAZ,CAAmB,UAAC9D,IAAD;EAAA,mBAAUiE,UAAU,CAACjE,IAAD,CAApB;EAAA,WAAnB,CAFL;EAID;EACF,OA1BD,MA0BO;EACL,cAAM,IAAIyD,KAAJ,WACDpJ,WADC,mDAAN;EAGD;EACF;EAED;EACF;EACA;EACA;EACA;;;;aACE,6BAAoBA,WAApB,EAAiC;EAC/B,UAAIA,WAAW,KAAK,MAApB,EAA4B;;EAE5B,UAAIY,KAAK,CAACC,OAAN,CAAc,KAAK0B,WAAL,CAAiBvC,WAAjB,CAAd,CAAJ,EAAkD;EAChD,aAAKuC,WAAL,CAAiBvC,WAAjB,IAAgC,EAAhC;EACD,OAFD,MAEO,IAAI,OAAO,KAAKuC,WAAL,CAAiBvC,WAAjB,CAAP,KAAyC,WAA7C,EAA0D;EAC/D,aAAKuC,WAAL,CAAiBvC,WAAjB,IAAgC,IAAhC;EACD,OAFM,MAEA;EACL,cAAM,IAAIoJ,KAAJ,WACDpJ,WADC,mDAAN;EAGD;EACF;EAED;EACF;EACA;;;;aACE,0BAAiB;EAAA;;EACf,WAAKgK,iBAAL,CAAuB,WAAvB;;EAEA,UAAI,KAAKN,SAAL,CAAexB,YAAf,KAAgC,EAApC,EAAwC;EACtC,aAAK8B,iBAAL,CAAuB,cAAvB;EAEA,aAAKC,mBAAL,CAAyB,gBAAzB;EACA,aAAKA,mBAAL,CAAyB,UAAzB;EAEA,aAAK/G,GAAL,CAASgF,YAAT,CAAsBpH,OAAtB,CAA8B,UAAC6E,IAAD,EAAU;EACtC,UAAA,KAAI,CAACuE,iBAAL,CAAuB,gBAAvB,EAAyCvE,IAAzC;;EACA,UAAA,KAAI,CAACuE,iBAAL,CAAuB,UAAvB,EAAmCvE,IAAnC;EACD,SAHD;EAID;EACF;EAED;EACF;EACA;EACA;EACA;;;;aACE,sBAAatC,IAAb,EAAmB;EACjB,UAAIA,IAAI,CAAC0E,UAAT,EAAqB;EACnB,aAAKrF,YAAL,CAAkB8F,QAAlB,GAA6BnF,IAA7B;EACD,OAFD,MAEO,IAAIA,IAAI,CAACzD,QAAL,CAAc0C,UAAd,KAA6B,IAAjC,EAAuC;EAC5C,aAAK+G,YAAL,CAAkBhG,IAAI,CAACzD,QAAL,CAAc0C,UAAhC;EACD,OAFM,MAEA;EACL,cAAM,IAAI8G,KAAJ,CAAU,wBAAV,CAAN;EACD;EACF;EAED;EACF;EACA;;;;aACE,+BAAsB;EAAA;;EAAA,UACZJ,QADY,GAC+B,IAD/B,CACZA,QADY;EAAA,UACFC,YADE,GAC+B,IAD/B,CACFA,YADE;EAAA,UACYC,cADZ,GAC+B,IAD/B,CACYA,cADZ;EAGpB,WAAKhG,GAAL,CAAS+E,SAAT,CAAmBnH,OAAnB,CAA2B,UAACkB,OAAD,EAAa;EACtC,YAAImI,QAAJ;;EAEA,YAAI,MAAI,CAACjH,GAAL,CAASgF,YAAT,CAAsB/G,QAAtB,CAA+Ba,OAA/B,CAAJ,EAA6C;EAC3C;EACA,cAAMoI,OAAO,GAAGpI,OAAO,CAACtB,aAAR,CAAsB,MAAI,CAACgJ,SAAL,CAAerE,cAArC,CAAhB,CAF2C;;EAI3C,cAAMgF,OAAO,GAAGrI,OAAO,CAACtB,aAAR,CAAsB,MAAI,CAACgJ,SAAL,CAAevB,QAArC,CAAhB,CAJ2C;;EAO3C,cAAM9E,IAAI,GAAG,IAAI2F,QAAJ,CAAa;EACxBzB,YAAAA,WAAW,EAAE8C,OADW;EAExB7C,YAAAA,gBAAgB,EAAE,MAAI,CAACkC,SAAL,CAAezB,SAFT;EAGxBR,YAAAA,gBAAgB,EAAE,MAAI,CAACiC,SAAL,CAAenB,SAHT;EAIxBb,YAAAA,mBAAmB,EAAE,MAAI,CAACgC,SAAL,CAAexB,YAJZ;EAKxBP,YAAAA,qBAAqB,EAAE,MAAI,CAAC+B,SAAL,CAAerE,cALd;EAMxBuC,YAAAA,eAAe,EAAE,MAAI,CAAC8B,SAAL,CAAevB,QANR;EAOxB3D,YAAAA,SAAS,EAAE,MAAI,CAACA,SAPQ;EAQxBD,YAAAA,UAAU,EAAE,MAAI,CAACA,UARO;EASxBwD,YAAAA,UAAU,EAAE,KATY;EAUxBzF,YAAAA,UAAU,EAAE,MAVY;EAWxByD,YAAAA,SAAS,EAAE,MAAI,CAACA,SAXQ;EAYxBiC,YAAAA,UAAU,EAAE,MAAI,CAACA;EAZO,WAAb,CAAb,CAP2C;;EAuB3C,cAAMxF,MAAM,GAAG,IAAI0G,cAAJ,CAAmB;EAChC/G,YAAAA,iBAAiB,EAAEiI,OADa;EAEhChI,YAAAA,aAAa,EAAEJ,OAFiB;EAGhCK,YAAAA,cAAc,EAAEgB,IAHgB;EAIhCf,YAAAA,UAAU,EAAE;EAJoB,WAAnB,CAAf,CAvB2C;;EA+B3C,UAAA,MAAI,CAACI,YAAL,CAAkB2C,cAAlB,CAAiCiF,IAAjC,CAAsC9H,MAAtC,EA/B2C;;;EAkC3C2H,UAAAA,QAAQ,GAAG,IAAIlB,YAAJ,CAAiB;EAC1B1D,YAAAA,eAAe,EAAEvD,OADS;EAE1BwD,YAAAA,eAAe,EAAE4E,OAFS;EAG1B9H,YAAAA,UAAU,EAAE,MAHc;EAI1BmD,YAAAA,aAAa,EAAE,IAJW;EAK1BC,YAAAA,SAAS,EAAErC,IALe;EAM1Bb,YAAAA,MAAM,EAANA;EAN0B,WAAjB,CAAX;EAQD,SA1CD,MA0CO;EACL,cAAMoD,IAAI,GAAG5D,OAAO,CAACtB,aAAR,CAAsB,MAAI,CAACgJ,SAAL,CAAenB,SAArC,CAAb,CADK;;EAIL4B,UAAAA,QAAQ,GAAG,IAAIlB,YAAJ,CAAiB;EAC1B1D,YAAAA,eAAe,EAAEvD,OADS;EAE1BwD,YAAAA,eAAe,EAAEI,IAFS;EAG1BtD,YAAAA,UAAU,EAAE;EAHc,WAAjB,CAAX;EAKD;;EAED,QAAA,MAAI,CAACI,YAAL,CAAkBuF,SAAlB,CAA4BqC,IAA5B,CAAiCH,QAAjC;EACD,OAzDD;EA0DD;EAED;EACF;EACA;;;;aACE,uBAAc;EAAA;;EACZ,WAAKvK,QAAL,CAAcqI,SAAd,CAAwBnH,OAAxB,CAAgC,UAACqJ,QAAD,EAAWI,KAAX,EAAqB;EACnDJ,QAAAA,QAAQ,CAACjH,GAAT,CAAa0C,IAAb,CAAkB4E,gBAAlB,CAAmC,OAAnC,EAA4C,YAAM;EAChD,cAAI,MAAI,CAAC5K,QAAL,CAAc0C,UAAlB,EACE,MAAI,CAAC1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,OAAtC;EACF,cAAIoF,QAAQ,CAACvK,QAAT,CAAkB8F,SAAtB,EACEyE,QAAQ,CAACvK,QAAT,CAAkB8F,SAAlB,CAA4BX,UAA5B,GAAyC,MAAzC;EAEF,UAAA,MAAI,CAACA,UAAL,GAAkB,MAAlB;EACA,UAAA,MAAI,CAACE,YAAL,GAAoBsF,KAApB;EACD,SARD;EASD,OAVD;EAWD;EAED;EACF;EACA;;;;aACE,uBAAc;EAAA;;EACZ;EACJ;EACA;EACA;EACA;EACA;EACA;EACI,eAASE,YAAT,CAAsBpH,IAAtB,EAA4Bb,MAA5B,EAAoCT,KAApC,EAA2C;EACzCoF,QAAAA,YAAY,CAACpF,KAAD,CAAZ;EAEAsB,QAAAA,IAAI,CAACyC,YAAL,GAAoB,OAApB;EAEAtD,QAAAA,MAAM,CAACA,MAAP;;EAEA,YAAIA,MAAM,CAACG,MAAX,EAAmB;EACjBU,UAAAA,IAAI,CAAC0B,UAAL,GAAkB,MAAlB;EACAvC,UAAAA,MAAM,CAAC5C,QAAP,CAAgByC,cAAhB,CAA+B0C,UAA/B,GAA4C,MAA5C;EACD;EACF,OAnBW;;;EAsBZtE,MAAAA,QAAQ,CAAC+J,gBAAT,CAA0B,SAA1B,EAAqC,UAACzI,KAAD,EAAW;EAC9C,YAAI,MAAI,CAACgD,UAAL,KAAoB,MAAxB,EAAgC;EAC9B,UAAA,MAAI,CAACe,YAAL,GAAoB,OAApB;;EAEA,cACE,CAAC,MAAI,CAAC5C,GAAL,CAASG,IAAT,CAAcqH,QAAd,CAAuB3I,KAAK,CAAC4I,MAA7B,CAAD,IACA,CAAC,MAAI,CAACzH,GAAL,CAASG,IAAV,KAAmBtB,KAAK,CAAC4I,MAF3B,EAGE;EACA,YAAA,MAAI,CAAC3F,aAAL;;EACA,YAAA,MAAI,CAACE,IAAL;;EAEA,gBAAI,MAAI,CAACtF,QAAL,CAAcwI,UAAlB,EAA8B;EAC5B,cAAA,MAAI,CAACxI,QAAL,CAAcwI,UAAd,CAAyBjD,KAAzB;EACD;EACF;EACF;EACF,OAhBD,EAtBY;;EAyCZ,WAAKvF,QAAL,CAAcyF,cAAd,CAA6BvE,OAA7B,CAAqC,UAAC0B,MAAD,EAAY;EAC/C,YAAIV,gBAAgB,CAAC,UAAD,EAAaU,MAAM,CAACU,GAAP,CAAWV,MAAxB,CAApB,EAAqD;EACnDA,UAAAA,MAAM,CAACU,GAAP,CAAWV,MAAX,CAAkBoI,UAAlB,GAA+B,UAAC7I,KAAD,EAAW;EACxC0I,YAAAA,YAAY,CAAC,MAAD,EAAOjI,MAAP,EAAeT,KAAf,CAAZ;EACD,WAFD;EAGD,SAJD,MAIO;EACLS,UAAAA,MAAM,CAACU,GAAP,CAAWV,MAAX,CAAkBqI,SAAlB,GAA8B,UAAC9I,KAAD,EAAW;EACvC0I,YAAAA,YAAY,CAAC,MAAD,EAAOjI,MAAP,EAAeT,KAAf,CAAZ;EACD,WAFD;EAGD;EACF,OAVD,EAzCY;;EAsDZ,UAAI,KAAKgG,UAAL,IAAmB,KAAKnI,QAAL,CAAcwI,UAArC,EAAiD;EAC/C,YAAItG,gBAAgB,CAAC,UAAD,EAAa,KAAKlC,QAAL,CAAcwI,UAAd,CAAyBlF,GAAzB,CAA6BV,MAA1C,CAApB,EAAuE;EACrE,eAAK5C,QAAL,CAAcwI,UAAd,CAAyBlF,GAAzB,CAA6BV,MAA7B,CAAoCoI,UAApC,GAAiD,UAAC7I,KAAD,EAAW;EAC1D0I,YAAAA,YAAY,CAAC,MAAD,EAAO,MAAI,CAAC7K,QAAL,CAAcwI,UAArB,EAAiCrG,KAAjC,CAAZ;EACD,WAFD;EAGD,SAJD,MAIO;EACL,eAAKnC,QAAL,CAAcwI,UAAd,CAAyBlF,GAAzB,CAA6BV,MAA7B,CAAoCqI,SAApC,GAAgD,UAAC9I,KAAD,EAAW;EACzD0I,YAAAA,YAAY,CAAC,MAAD,EAAO,MAAI,CAAC7K,QAAL,CAAcwI,UAArB,EAAiCrG,KAAjC,CAAZ;EACD,WAFD;EAGD;EACF;EACF;EAED;EACF;EACA;;;;aACE,uBAAc;EAAA;;EACZ,WAAKnC,QAAL,CAAcqI,SAAd,CAAwBnH,OAAxB,CAAgC,UAACqJ,QAAD,EAAWI,KAAX,EAAqB;EACnDJ,QAAAA,QAAQ,CAACjH,GAAT,CAAa0C,IAAb,CAAkB4E,gBAAlB,CAAmC,YAAnC,EAAiD,YAAM;EACrD,cAAI,MAAI,CAACzE,SAAL,KAAmB,IAAvB,EAA6B;EAC3B,YAAA,MAAI,CAACD,YAAL,GAAoB,OAApB;EACA,YAAA,MAAI,CAACb,YAAL,GAAoBsF,KAApB;;EAEA,gBAAIJ,QAAQ,CAAC1E,aAAb,EAA4B;EAC1B0E,cAAAA,QAAQ,CAACvK,QAAT,CAAkB4C,MAAlB,CAAyBsI,OAAzB;EACD;EACF,WAPD,MAOO,IAAI,MAAI,CAAC/E,SAAL,KAAmB,SAAvB,EAAkC;EACvC,gBAAMpD,MAAM,GAAG,MAAI,CAAC/C,QAAL,CAAcyF,cAAd,CAA6B0F,IAA7B,CACb,UAACvI,MAAD;EAAA,qBAAYA,MAAM,CAACG,MAAnB;EAAA,aADa,CAAf;;EAGA,YAAA,MAAI,CAACsC,YAAL,GAAoBsF,KAApB;;EAEA,gBAAI,CAAC,MAAI,CAACxC,UAAN,IAAoB,MAAI,CAAChD,UAAL,KAAoB,MAA5C,EAAoD;EAClD,cAAA,MAAI,CAACe,YAAL,GAAoB,OAApB;;EACA,cAAA,MAAI,CAACkF,iBAAL;EACD;;EAED,gBAAIb,QAAQ,CAAC1E,aAAT,KAA2B,CAAC,MAAI,CAACsC,UAAN,IAAoBpF,MAA/C,CAAJ,EAA4D;EAC1D,cAAA,MAAI,CAACmD,YAAL,GAAoB,OAApB;EACAqE,cAAAA,QAAQ,CAACvK,QAAT,CAAkB4C,MAAlB,CAAyBsI,OAAzB;EACD;EACF;EACF,SAxBD;;EA0BA,YAAIX,QAAQ,CAAC1E,aAAb,EAA4B;EAC1B0E,UAAAA,QAAQ,CAACjH,GAAT,CAAayC,IAAb,CAAkB6E,gBAAlB,CAAmC,YAAnC,EAAiD,YAAM;EACrD,gBAAI,MAAI,CAACzE,SAAL,KAAmB,IAAvB,EAA6B;EAC3BkF,cAAAA,UAAU,CAAC,YAAM;EACf,gBAAA,MAAI,CAACnF,YAAL,GAAoB,OAApB;EACAqE,gBAAAA,QAAQ,CAACvK,QAAT,CAAkB4C,MAAlB,CAAyB2C,KAAzB;EACD,eAHS,EAGP,MAAI,CAAC6C,UAHE,CAAV;EAID,aALD,MAKO,IAAI,MAAI,CAACjC,SAAL,KAAmB,SAAvB,EAAkC;EACvC,kBAAI,CAAC,MAAI,CAACgC,UAAV,EAAsB;EACpBkD,gBAAAA,UAAU,CAAC,YAAM;EACf,kBAAA,MAAI,CAACnF,YAAL,GAAoB,OAApB;EACAqE,kBAAAA,QAAQ,CAACvK,QAAT,CAAkB4C,MAAlB,CAAyB2C,KAAzB;;EACA,kBAAA,MAAI,CAAC6F,iBAAL;EACD,iBAJS,EAIP,MAAI,CAAChD,UAJE,CAAV;EAKD;EACF;EACF,WAfD;EAgBD;EACF,OA7CD;EA8CD;EAED;EACF;EACA;;;;aACE,yBAAgB;EAAA;;EACd,UAAI,KAAKD,UAAL,IAAmB,KAAKnI,QAAL,CAAcwI,UAArC,EAAiD;EAC/C,aAAKxI,QAAL,CAAcwI,UAAd,CAAyBlF,GAAzB,CAA6BV,MAA7B,CAAoCgI,gBAApC,CACE,SADF,EAEE,UAACzI,KAAD,EAAW;EACT,UAAA,MAAI,CAAC+D,YAAL,GAAoB,UAApB;EAEA,cAAM/F,GAAG,GAAGkG,QAAQ,CAAClE,KAAD,CAApB;;EAEA,cAAIhC,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,OAA/B,EAAwC;EACtCoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;EACD;EACF,SAVH;EAYD;EACF;EAED;EACF;EACA;;;;aACE,uBAAc;EAAA;;EACZ,UAAI,KAAKgG,UAAL,IAAmB,KAAKnI,QAAL,CAAcwI,UAArC,EAAiD;EAC/C,aAAKxI,QAAL,CAAcwI,UAAd,CAAyBlF,GAAzB,CAA6BV,MAA7B,CAAoCgI,gBAApC,CAAqD,OAArD,EAA8D,UAACzI,KAAD,EAAW;EACvE,UAAA,MAAI,CAAC+D,YAAL,GAAoB,UAApB;EAEA,cAAM/F,GAAG,GAAGkG,QAAQ,CAAClE,KAAD,CAApB;;EAEA,cAAIhC,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,OAA/B,EAAwC;EACtCoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;;EACA,YAAA,MAAI,CAACnC,QAAL,CAAcwI,UAAd,CAAyBhD,IAAzB;;EACA,YAAA,MAAI,CAAC8F,eAAL;EACD;EACF,SAVD;EAWD;EACF;EAED;EACF;EACA;;;;aACE,iBAAQ;EACN,WAAKnG,UAAL,GAAkB,MAAlB;;EAEA,UACE,KAAKe,YAAL,KAAsB,UAAtB,IACC,KAAKA,YAAL,KAAsB,OAAtB,IAAiC,KAAKC,SAAL,KAAmB,SAFvD,EAGE;EACA,aAAK7C,GAAL,CAASG,IAAT,CAAc2C,KAAd;EACD;EACF;EAED;EACF;EACA;;;;aACE,gBAAO;EACL,WAAKjB,UAAL,GAAkB,MAAlB;;EAEA,UACE,KAAKe,YAAL,KAAsB,UAAtB,IACC,KAAKA,YAAL,KAAsB,OAAtB,IAAiC,KAAKC,SAAL,KAAmB,SAFvD,EAGE;EACA,aAAK7C,GAAL,CAASG,IAAT,CAAc6B,IAAd;EACD;;EAED,UAAI,KAAK6C,UAAL,IAAmB,KAAKnI,QAAL,CAAcwI,UAArC,EAAiD;EAC/C,aAAKxI,QAAL,CAAcwI,UAAd,CAAyBjD,KAAzB;EACD;EACF;EAED;EACF;EACA;;;;aACE,2BAAkB;EAChB,WAAKgG,gBAAL;EACA,WAAKlG,YAAL,GAAoB,CAApB;EACA,WAAK+F,iBAAL;EACD;EAED;EACF;EACA;;;;aACE,0BAAiB;EACf,WAAKG,gBAAL;EACA,WAAKlG,YAAL,GAAoB,KAAKrF,QAAL,CAAcqI,SAAd,CAAwBnE,MAAxB,GAAiC,CAArD;EACA,WAAKkH,iBAAL;EACD;EAED;EACF;EACA;;;;aACE,0BAAiB;EACf,UAAI,KAAK/F,YAAL,GAAoB,KAAKrF,QAAL,CAAcqI,SAAd,CAAwBnE,MAAxB,GAAiC,CAAzD,EAA4D;EAC1D,aAAKqH,gBAAL;EACA,aAAKlG,YAAL,GAAoB,KAAKA,YAAL,GAAoB,CAAxC;EACA,aAAK+F,iBAAL;EACD;EACF;EAED;EACF;EACA;;;;aACE,8BAAqB;EACnB,UAAI,KAAK/F,YAAL,GAAoB,CAAxB,EAA2B;EACzB,aAAKkG,gBAAL;EACA,aAAKlG,YAAL,GAAoB,KAAKA,YAAL,GAAoB,CAAxC;EACA,aAAK+F,iBAAL;EACD;EACF;EAED;EACF;EACA;;;;aACE,6BAAoB;EAClB,UAAI,KAAK/F,YAAL,KAAsB,CAAC,CAA3B,EAA8B;EAC5B,aAAKmG,eAAL,CAAqBpF,KAArB;EACD;EACF;EAED;EACF;EACA;;;;aACE,4BAAmB;EACjB,UAAI,KAAKf,YAAL,KAAsB,CAAC,CAA3B,EAA8B;EAC5B,aAAKmG,eAAL,CAAqBlG,IAArB;EACD;EACF;EAED;EACF;EACA;;;;aACE,2BAAkB;EAChB,UAAI,KAAKhC,GAAL,CAASkF,UAAb,EAAyB;EACvB,YAAI,KAAKtC,YAAL,KAAsB,OAA1B,EAAmC;EACjC,eAAK5C,GAAL,CAASkF,UAAT,CAAoBpC,KAApB;EACD;;EAED,aAAKjB,UAAL,GAAkB,MAAlB;EACD;EACF;EAED;EACF;EACA;;;;aACE,0BAAiB;EACf,UAAI,KAAK7B,GAAL,CAASmF,SAAb,EAAwB;EACtB,YAAI,KAAKvC,YAAL,KAAsB,OAA1B,EAAmC;EACjC,eAAK5C,GAAL,CAASmF,SAAT,CAAmBrC,KAAnB;EACD;;EAED,aAAKjB,UAAL,GAAkB,MAAlB;EACD;EACF;EAED;EACF;EACA;;;;aACE,yBAAgB;EACd,WAAKnF,QAAL,CAAcyF,cAAd,CAA6BvE,OAA7B,CAAqC,UAAC0B,MAAD;EAAA,eAAYA,MAAM,CAAC2C,KAAP,EAAZ;EAAA,OAArC;EACD;;;;;;EC74BH;EACA;EACA;;MACMkG;;;;;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,8BAQG;EAAA;;EAAA,QAPD9F,eAOC,QAPDA,eAOC;EAAA,QANDC,eAMC,QANDA,eAMC;EAAA,QALDlD,UAKC,QALDA,UAKC;EAAA,kCAJDmD,aAIC;EAAA,QAJDA,aAIC,mCAJe,KAIf;EAAA,8BAHDC,SAGC;EAAA,QAHDA,SAGC,+BAHW,IAGX;EAAA,2BAFDlD,MAEC;EAAA,QAFDA,MAEC,4BAFQ,IAER;EAAA,+BADDS,UACC;EAAA,QADDA,UACC,gCADY,IACZ;;EAAA;;EACD,8BAAM;EACJsC,MAAAA,eAAe,EAAfA,eADI;EAEJC,MAAAA,eAAe,EAAfA,eAFI;EAGJlD,MAAAA,UAAU,EAAVA,UAHI;EAIJmD,MAAAA,aAAa,EAAbA,aAJI;EAKJC,MAAAA,SAAS,EAATA,SALI;EAMJlD,MAAAA,MAAM,EAANA;EANI,KAAN;;EASA,QAAIS,UAAJ,EAAgB;EACd,YAAKA,UAAL;EACD;;EAZA;EAaF;EAED;EACF;EACA;;;;;aACE,sBAAa;EACX;;EAEA,WAAKC,GAAL,CAASyC,IAAT,CAAcxC,YAAd,CAA2B,MAA3B,EAAmC,MAAnC;EACA,WAAKD,GAAL,CAAS0C,IAAT,CAAczC,YAAd,CAA2B,MAA3B,EAAmC,UAAnC;EACA,WAAKD,GAAL,CAAS0C,IAAT,CAAc0F,QAAd,GAAyB,CAAC,CAA1B;EACD;EAED;EACF;EACA;;;;aACE,iBAAQ;EACN;;EAEA,WAAKpI,GAAL,CAAS0C,IAAT,CAAc0F,QAAd,GAAyB,CAAzB;EACD;EAED;EACF;EACA;;;;aACE,gBAAO;EACL;;EAEA,WAAKpI,GAAL,CAAS0C,IAAT,CAAc0F,QAAd,GAAyB,CAAC,CAA1B;EACD;;;;IA/DwBhG;;ECH3B;EACA;EACA;;MACMiG;;;;;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,0CAMG;EAAA;;EAAA,QALDpJ,iBAKC,QALDA,iBAKC;EAAA,QAJDC,aAIC,QAJDA,aAIC;EAAA,QAHDC,cAGC,QAHDA,cAGC;EAAA,+BAFDC,UAEC;EAAA,QAFDA,UAEC,gCAFY,IAEZ;EAAA,+BADDW,UACC;EAAA,QADDA,UACC,gCADY,IACZ;;EAAA;;EACD,8BAAM;EACJd,MAAAA,iBAAiB,EAAjBA,iBADI;EAEJC,MAAAA,aAAa,EAAbA,aAFI;EAGJC,MAAAA,cAAc,EAAdA,cAHI;EAIJC,MAAAA,UAAU,EAAVA;EAJI,KAAN;;EAOA,QAAIW,UAAJ,EAAgB;EACd,YAAKA,UAAL;EACD;;EAVA;EAWF;EAED;EACF;EACA;;;;;aACE,gBAAO;EACL,WAAKN,MAAL,GAAc,IAAd,CADK;;EAIL,WAAKkC,MAAL,GAJK;;EAOL,UAAI,KAAKjF,QAAL,CAAc0C,UAAlB,EAA8B,KAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,OAAtC;EAC9B,WAAKnF,QAAL,CAAcyC,cAAd,CAA6B0C,UAA7B,GAA0C,MAA1C;EACD;EAED;EACF;EACA;;;;aACE,mBAAU;EACR,WAAKpC,MAAL,GAAc,IAAd,CADQ;;EAIR,WAAKkC,MAAL,GAJQ;;EAOR,UAAI,KAAKjF,QAAL,CAAc0C,UAAlB,EAA8B;EAC5B,aAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,MAAtC;EACD;;EAED,WAAKnF,QAAL,CAAcyC,cAAd,CAA6B0C,UAA7B,GAA0C,MAA1C;EACD;EAED;EACF;EACA;;;;aACE,iBAAQ;EACN,UAAI,KAAKpC,MAAT,EAAiB;EACf,aAAKA,MAAL,GAAc,KAAd,CADe;;EAIf,aAAKyB,QAAL,GAJe;;EAOf,aAAKxE,QAAL,CAAcyC,cAAd,CAA6B4C,YAA7B,GAA4C,CAA5C;EACA,aAAKrF,QAAL,CAAcyC,cAAd,CAA6B6C,IAA7B;;EAEA,YAAI,KAAKtF,QAAL,CAAc0C,UAAlB,EAA8B;EAC5B,eAAK1C,QAAL,CAAc0C,UAAd,CAAyByC,UAAzB,GAAsC,MAAtC;EACD;EACF;EACF;;;;IA/EoC7C;;ECFvC;EACA;EACA;EACA;EACA;EACA;;MACMsJ;;;;;EACJ;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,0BAgBG;EAAA;;EAAA,QAfDjE,WAeC,QAfDA,WAeC;EAAA,qCAdDC,gBAcC;EAAA,QAdDA,gBAcC,sCAdkB,IAclB;EAAA,qCAbDC,gBAaC;EAAA,QAbDA,gBAaC,sCAbkB,GAalB;EAAA,qCAZDC,mBAYC;EAAA,QAZDA,mBAYC,sCAZqB,EAYrB;EAAA,qCAXDC,qBAWC;EAAA,QAXDA,qBAWC,sCAXuB,GAWvB;EAAA,oCAVDC,eAUC;EAAA,QAVDA,eAUC,qCAViB,IAUjB;EAAA,qCATDC,iBASC;EAAA,QATDA,iBASC,sCATmB,IASnB;EAAA,qCARDC,gBAQC;EAAA,QARDA,gBAQC,sCARkB,IAQlB;EAAA,8BAPDtD,SAOC;EAAA,QAPDA,SAOC,+BAPW,MAOX;EAAA,+BANDD,UAMC;EAAA,QANDA,UAMC,gCANY,MAMZ;EAAA,+BALDwD,UAKC;EAAA,QALDA,UAKC,gCALY,IAKZ;EAAA,+BAJDzF,UAIC;EAAA,QAJDA,UAIC,gCAJY,IAIZ;EAAA,8BAHDyD,SAGC;EAAA,QAHDA,SAGC,+BAHW,KAGX;EAAA,+BAFDiC,UAEC;EAAA,QAFDA,UAEC,gCAFY,GAEZ;EAAA,+BADD/E,UACC;EAAA,QADDA,UACC,gCADY,IACZ;;EAAA;;EACD,8BAAM;EACJsE,MAAAA,WAAW,EAAXA,WADI;EAEJC,MAAAA,gBAAgB,EAAhBA,gBAFI;EAGJC,MAAAA,gBAAgB,EAAhBA,gBAHI;EAIJC,MAAAA,mBAAmB,EAAnBA,mBAJI;EAKJC,MAAAA,qBAAqB,EAArBA,qBALI;EAMJC,MAAAA,eAAe,EAAfA,eANI;EAOJC,MAAAA,iBAAiB,EAAjBA,iBAPI;EAQJC,MAAAA,gBAAgB,EAAhBA,gBARI;EASJtD,MAAAA,SAAS,EAATA,SATI;EAUJD,MAAAA,UAAU,EAAVA,UAVI;EAWJwD,MAAAA,UAAU,EAAVA,UAXI;EAYJzF,MAAAA,UAAU,EAAVA,UAZI;EAaJyD,MAAAA,SAAS,EAATA,SAbI;EAcJiC,MAAAA,UAAU,EAAVA;EAdI,KAAN,EADC;;EAmBD,UAAKgB,QAAL,GAAgBwC,QAAhB;EACA,UAAKvC,YAAL,GAAoBoC,YAApB;EACA,UAAKnC,cAAL,GAAsBuC,wBAAtB;;EAEA,QAAIxI,UAAJ,EAAgB;EACd,YAAKA,UAAL;EACD;;EAzBA;EA0BF;EAED;EACF;EACA;EACA;EACA;;;;;aACE,sBAAa;EACX,UAAI;EACF;;EAEA,YAAI,KAAK8E,UAAT,EAAqB;EACnB,eAAK7E,GAAL,CAASG,IAAT,CAAcF,YAAd,CAA2B,MAA3B,EAAmC,MAAnC;EACD,SAFD,MAEO;EACL,eAAKD,GAAL,CAASG,IAAT,CAAcF,YAAd,CAA2B,MAA3B,EAAmC,OAAnC;EACD;;EAED,aAAKuI,WAAL;EACA,aAAKC,WAAL;EACA,aAAKC,WAAL;EACA,aAAKC,aAAL;EACA,aAAKC,WAAL;EAEA,aAAKlM,QAAL,CAAcqI,SAAd,CAAwB,CAAxB,EAA2B/E,GAA3B,CAA+B0C,IAA/B,CAAoC0F,QAApC,GAA+C,CAA/C;EACD,OAhBD,CAgBE,OAAOrL,KAAP,EAAc;EACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACD;EACF;EAED;EACF;EACA;;;;aACE,yBAAgB;EAAA;;EACd;;EAEA,WAAKiD,GAAL,CAASG,IAAT,CAAcmH,gBAAd,CAA+B,SAA/B,EAA0C,UAACzI,KAAD,EAAW;EACnD,QAAA,MAAI,CAAC+D,YAAL,GAAoB,UAApB;EAEA,YAAM/F,GAAG,GAAGkG,QAAQ,CAAClE,KAAD,CAApB;;EAEA,YAAIhC,GAAG,KAAK,KAAZ,EAAmB;EACjB;EACA;EACA,cAAI,MAAI,CAACH,QAAL,CAAc4I,QAAd,CAAuBzD,UAAvB,KAAsC,MAA1C,EAAkD;EAChD,YAAA,MAAI,CAACnF,QAAL,CAAc4I,QAAd,CAAuBtD,IAAvB;EACD,WAFD,MAEO;EACL,YAAA,MAAI,CAACtF,QAAL,CAAc4I,QAAd,CAAuBxC,KAAvB;EACD;EACF;;EAED,YAAI,MAAI,CAACjB,UAAL,KAAoB,MAAxB,EAAgC;EAC9B,cAAMoB,IAAI,GAAG,CACX,OADW,EAEX,SAFW,EAGX,WAHW,EAIX,WAJW,EAKX,UALW,EAMX,MANW,EAOX,KAPW,CAAb;EASA,cAAM4F,WAAW,GAAG,CAAC,OAAD,EAAU,YAAV,CAApB;EACA,cAAMC,cAAc,GAAG,CAAC,QAAD,CAAvB;;EAEA,cAAI7F,IAAI,CAAChF,QAAL,CAAcpB,GAAd,CAAJ,EAAwB;EACtBoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;EACD,WAFD,MAEO,IACL,MAAI,CAACqJ,eAAL,CAAqB3F,aAArB,IACAsG,WAAW,CAAC5K,QAAZ,CAAqBpB,GAArB,CAFK,EAGL;EACAoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;EACD,WALM,MAKA,IAAI,MAAI,CAACnC,QAAL,CAAcwI,UAAd,IAA4B4D,cAAc,CAAC7K,QAAf,CAAwBpB,GAAxB,CAAhC,EAA8D;EACnEoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;EACD;EACF;EACF,OAvCD;EAwCD;EAED;EACF;EACA;;;;aACE,uBAAc;EAAA;;EACZ;;EAEA,WAAKmB,GAAL,CAASG,IAAT,CAAcmH,gBAAd,CAA+B,OAA/B,EAAwC,UAACzI,KAAD,EAAW;EACjD,QAAA,MAAI,CAAC+D,YAAL,GAAoB,UAApB;EAEA,YAAM/F,GAAG,GAAGkG,QAAQ,CAAClE,KAAD,CAApB;;EAEA,YAAI,MAAI,CAACgD,UAAL,KAAoB,MAAxB,EAAgC;EAC9B,cAAIhF,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,OAA/B,EAAwC;EACtC;EACA;EACA;EACAoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;;EAEA,gBAAI,MAAI,CAACqJ,eAAL,CAAqB3F,aAAzB,EAAwC;EACtC,kBAAI,MAAI,CAAC2F,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCG,MAAzC,EAAiD;EAC/C,gBAAA,MAAI,CAACyI,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqC2C,KAArC;EACD,eAFD,MAEO;EACL,gBAAA,MAAI,CAACiG,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCsI,OAArC;EACD;EACF,aAND,MAMO;EACL,cAAA,MAAI,CAACM,eAAL,CAAqBlI,GAArB,CAAyB0C,IAAzB,CAA8BqG,KAA9B;EACD;EACF,WAfD,MAeO,IAAIlM,GAAG,KAAK,WAAZ,EAAyB;EAC9B;EACA;EACA;EACAoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;;EAEA,gBACE,MAAI,CAACqJ,eAAL,CAAqB3F,aAArB,IACA,MAAI,CAAC2F,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCG,MAFvC,EAGE;EACA,cAAA,MAAI,CAACyI,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwCI,YAAxC,GAAuD,MAAI,CAACA,YAA5D;;EACA,cAAA,MAAI,CAACsF,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwCwF,eAAxC;EACD,aAND,MAMO,IACL,CAAC,MAAI,CAACnD,UAAN,IACA,MAAI,CAAC9C,YAAL,KAAsB,MAAI,CAACrF,QAAL,CAAcqI,SAAd,CAAwBnE,MAAxB,GAAiC,CAFlD,EAGL;EACA,cAAA,MAAI,CAAClE,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,GAAwC,MAAI,CAACA,YAA7C;;EACA,cAAA,MAAI,CAAClG,QAAL,CAAc0C,UAAd,CAAyB4J,cAAzB;EACD,aANM,MAMA;EACL,cAAA,MAAI,CAACA,cAAL;EACD;EACF,WArBM,MAqBA,IAAInM,GAAG,KAAK,SAAZ,EAAuB;EAC5B;EACA;EACA;EACAoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;EAEA,gBAAMoK,gBAAgB,GAAG,MAAI,CAACvM,QAAL,CAAcqI,SAAd,CACvB,MAAI,CAAChD,YAAL,GAAoB,CADG,CAAzB;;EAIA,gBACEkH,gBAAgB,IAChBA,gBAAgB,CAAC1G,aADjB,IAEA0G,gBAAgB,CAACvM,QAAjB,CAA0B4C,MAA1B,CAAiCG,MAHnC,EAIE;EACA,cAAA,MAAI,CAACsC,YAAL,GAAoB,MAAI,CAACA,YAAL,GAAoB,CAAxC;EACA,cAAA,MAAI,CAACmG,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwCI,YAAxC,GAAuD,MAAI,CAACA,YAA5D;;EACA,cAAA,MAAI,CAACsF,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwC0G,cAAxC;EACD,aARD,MAQO,IAAI,CAAC,MAAI,CAACrE,UAAN,IAAoB,MAAI,CAAC9C,YAAL,KAAsB,CAA9C,EAAiD;EACtD,cAAA,MAAI,CAACrF,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,GAAwC,MAAI,CAACA,YAA7C;;EACA,cAAA,MAAI,CAAClG,QAAL,CAAc0C,UAAd,CAAyB0I,iBAAzB;EACD,aAHM,MAGA;EACL,cAAA,MAAI,CAACqB,kBAAL;EACD;EACF,WAxBM,MAwBA,IAAItM,GAAG,KAAK,YAAZ,EAA0B;EAC/B;EACA;EACA;EACA;EACA,gBAAI,MAAI,CAACqL,eAAL,CAAqB3F,aAAzB,EAAwC;EACtC0B,cAAAA,YAAY,CAACpF,KAAD,CAAZ;;EAEA,kBAAI,MAAI,CAACqJ,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCG,MAAzC,EAAiD;EAC/C,gBAAA,MAAI,CAACyI,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwCI,YAAxC,GAAuD,MAAI,CAACA,YAA5D;;EACA,gBAAA,MAAI,CAACsF,eAAL,CAAqBxL,QAArB,CAA8B8F,SAA9B,CAAwCwF,eAAxC;EACD,eAHD,MAGO;EACL,gBAAA,MAAI,CAACE,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCsI,OAArC;EACD;EACF;EACF,WAfM,MAeA,IAAI/K,GAAG,KAAK,WAAZ,EAAyB;EAC9B;EACA;EACA;EACA;EACAoH,YAAAA,YAAY,CAACpF,KAAD,CAAZ;;EAEA,gBACE,MAAI,CAACqJ,eAAL,CAAqB3F,aAArB,IACA,MAAI,CAAC2F,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqCG,MAFvC,EAGE;EACA,cAAA,MAAI,CAACyI,eAAL,CAAqBxL,QAArB,CAA8B4C,MAA9B,CAAqC2C,KAArC;EACD,aALD,MAKO,IAAI,CAAC,MAAI,CAAC4C,UAAV,EAAsB;EAC3B,cAAA,MAAI,CAACnI,QAAL,CAAc0C,UAAd,CAAyBwD,YAAzB,GAAwC,MAAI,CAACA,YAA7C;;EACA,cAAA,MAAI,CAAClG,QAAL,CAAc0C,UAAd,CAAyB0I,iBAAzB;EACD;EACF,WAhBM,MAgBA,IAAIjL,GAAG,KAAK,MAAZ,EAAoB;EACzB;EACA;EACA,YAAA,MAAI,CAACH,QAAL,CAAc4I,QAAd,CAAuB0C,eAAvB;EACD,WAJM,MAIA,IAAInL,GAAG,KAAK,KAAZ,EAAmB;EACxB;EACA;EACA,YAAA,MAAI,CAACH,QAAL,CAAc4I,QAAd,CAAuB8D,aAAvB;EACD,WAJM,MAIA,IAAIvM,GAAG,KAAK,UAAZ,EAAwB;EAC7B;EACA;EACA;EACA,YAAA,MAAI,CAACwM,YAAL;EACD;EACF;EACF,OAhHD;EAiHD;EAED;EACF;EACA;EACA;EACA;;;;aACE,yBAAgB;EACd,UAAMC,aAAa,GAAG,KAAK5M,QAAL,CAAcqI,SAAd,CAAwBnE,MAAxB,GAAiC,CAAvD;EACA,UAAM2I,SAAS,GAAG,KAAK7M,QAAL,CAAcqI,SAAd,CAAwBuE,aAAxB,CAAlB;;EAEA,UAAIC,SAAS,CAAChH,aAAV,IAA2BgH,SAAS,CAAC7M,QAAV,CAAmB4C,MAAnB,CAA0BG,MAAzD,EAAiE;EAC/D,aAAKsC,YAAL,GAAoBuH,aAApB;EACAC,QAAAA,SAAS,CAAC7M,QAAV,CAAmB8F,SAAnB,CAA6BI,YAA7B,GAA4C,KAAKA,YAAjD;EACA2G,QAAAA,SAAS,CAAC7M,QAAV,CAAmB8F,SAAnB,CAA6B4G,aAA7B;EACD,OAJD,MAIO;EACL,aAAKF,cAAL;EACD;EACF;EAED;EACF;EACA;;;;aACE,wBAAe;EACb,WAAKxM,QAAL,CAAcyF,cAAd,CAA6BvE,OAA7B,CAAqC,UAAC0B,MAAD;EAAA,eAAYA,MAAM,CAACsI,OAAP,EAAZ;EAAA,OAArC;EACD;;;;IA5RoBxD;;;;;;;;"}