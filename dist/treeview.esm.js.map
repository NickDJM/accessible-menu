{"version":3,"file":"treeview.esm.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/treeviewItem.js","../src/treeviewToggle.js","../src/treeview.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {object}  contructor - The constructor to check for.\n * @param  {object}  elements   - The element(s) to check.\n * @return {boolean}            - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {string}  type   - The type to check for.\n * @param  {object}  values - The value(s) to check.\n * @return {boolean}        - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string, string[]>} values - The value(s) to check.\n * @return {boolean}                         - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param  {string}               tagName  - The name of the tag.\n * @param  {Object<HTMLElement>} elements - The element(s) to check.\n * @return {boolean}                       - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param  {string}      event   - The event type.\n * @param  {HTMLElement} element - The element to check.\n * @return {boolean}             - The result.\n *\n * @deprecated Will be removed in v4 unless there is a new found need for it.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","// eslint-disable-next-line no-unused-vars\n/* global BaseMenu */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * The DOM elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  _dom = {\n    toggle: null,\n    parent: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  _elements = {\n    controlledMenu: null,\n    parentMenu: null,\n  };\n\n  /**\n   * The open state of the menu toggle.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _open = false;\n\n  /**\n   * Expand event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuExpand\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Collapse event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuCollapse\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Set DOM elements.\n    this._dom.toggle = menuToggleElement;\n    this._dom.parent = parentElement;\n\n    // Set menu elements.\n    this._elements.controlledMenu = controlledMenu;\n    this._elements.parentMenu = parentMenu;\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this._collapse(false);\n  }\n\n  /**\n   * Get the DOM elements within the toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * Get the declared accessible-menu elements within the menu toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * Get the open state on the menu.\n   *\n   * @type {boolean}\n   *\n   * @see _open\n   */\n  get isOpen() {\n    return this._open;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this._open = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuExpand\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  _expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuCollapse\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  _collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this._collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","// eslint-disable-next-line no-unused-vars\n/* global BaseMenu BaseMenuToggle */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @protected\n   *\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  _dom = {\n    item: null,\n    link: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n  };\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  _submenu = false;\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Set DOM elements.\n    this._dom.item = menuItemElement;\n    this._dom.link = menuLinkElement;\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n\n    this._submenu = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @readonly\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @readonly\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   *\n   * @readonly\n   *\n   * @see _submenu\n   */\n  get isSubmenuItem() {\n    return this._submenu;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n * @return  {string}              - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","// eslint-disable-next-line no-unused-vars\n/* global DisclosureMenu, Menubar, Treeview */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenu}\n   */\n  _MenuType = BaseMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuItem}\n   */\n  _MenuItemType = BaseMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuToggle}\n   */\n  _MenuToggleType = BaseMenuToggle;\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  _dom = {\n    menu: null,\n    menuItems: [],\n    submenuItems: [],\n    submenuToggles: [],\n    submenus: [],\n    controller: null,\n    container: null,\n  };\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @protected\n   *\n   * @type {Object<string>}\n   *\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  _selectors = {\n    menuItems: \"\",\n    menuLinks: \"\",\n    submenuItems: \"\",\n    submenuToggles: \"\",\n    submenus: \"\",\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  _elements = {\n    menuItems: [],\n    submenuToggles: [],\n    controller: null,\n    parentMenu: null,\n    rootMenu: null,\n  };\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _openClass = \"show\";\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _closeClass = \"hide\";\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _root = true;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = 0;\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _focusState = \"none\";\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _currentEvent = \"none\";\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _hoverType = \"off\";\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _hoverDelay = 250;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Set DOM elements.\n    this._dom.menu = menuElement;\n    this._dom.controller = controllerElement;\n    this._dom.container = containerElement;\n\n    // Set DOM selectors.\n    this._selectors.menuItems = menuItemSelector;\n    this._selectors.menuLinks = menuLinkSelector;\n    this._selectors.submenuItems = submenuItemSelector;\n    this._selectors.submenuToggles = submenuToggleSelector;\n    this._selectors.submenus = submenuSelector;\n\n    // Set menu elements.\n    this._elements.menuItems = [];\n    this._elements.submenuToggles = [];\n    this._elements.controller = null;\n    this._elements.parentMenu = parentMenu;\n    this._elements.rootMenu = isTopLevel ? this : null;\n\n    // Set open/close classes.\n    this._openClass = openClass || \"\";\n    this._closeClass = closeClass || \"\";\n\n    // Set root.\n    this._root = isTopLevel;\n\n    // Set hover settings.\n    this._hoverType = hoverType;\n    this._hoverDelay = hoverDelay;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this._validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\n      );\n    }\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this._setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this._elements.controller = toggle;\n      }\n    }\n\n    this._createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @readonly\n   *\n   * @type {Object<string>}\n   *\n   * @see _selectors\n   */\n  get selectors() {\n    return this._selectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * The flag marking the root menu.\n   *\n   * @readonly\n   *\n   * @type {boolean}\n   *\n   * @see _root\n   */\n  get isTopLevel() {\n    return this._root;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _openClass\n   */\n  get openClass() {\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _closeClass\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this._closeClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   *\n   * @see _currentChild\n   */\n  get currentChild() {\n    return this._currentChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   *\n   * @see _focusState\n   */\n  get focusState() {\n    return this._focusState;\n  }\n\n  /**\n   * The last event triggered on the menu.\n   *\n   * @type {string}\n   *\n   * @see _currentEvent\n   */\n  get currentEvent() {\n    return this._currentEvent;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   *\n   * @see _hoverType\n   */\n  get hoverType() {\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   *\n   * @see _hoverDelay\n   */\n  get hoverDelay() {\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu#_hoverType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this._openClass !== value) {\n      this._openClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this._closeClass !== value) {\n      this._closeClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this._currentChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this._currentChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this._currentChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this._focusState !== value) {\n      this._focusState = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this._currentEvent !== value) {\n      this._currentEvent = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this._hoverType !== value) {\n      this._hoverType = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this._hoverDelay !== value) {\n      this._hoverDelay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = true;\n\n    if (this._dom.container !== null || this._dom.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: this._dom.menu,\n          controllerElement: this._dom.controller,\n          containerElement: this._dom.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: this._dom.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (this._selectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: this._selectors.menuItems,\n          menuLinkSelector: this._selectors.menuLinks,\n          submenuItemSelector: this._selectors.submenuItems,\n          submenuToggleSelector: this._selectors.submenuToggles,\n          submenuSelector: this._selectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: this._selectors.menuItems,\n        menuLinkSelector: this._selectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._openClass !== \"\" &&\n      !isValidClassList({ openClass: this._openClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._closeClass !== \"\" &&\n      !isValidClassList({ closeClass: this._closeClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\n      check = false;\n    }\n\n    if (\n      this._elements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be set through this method.\n   *\n   * @protected\n   *\n   * @param {string}      elementType            - The type of element to populate.\n   * @param {HTMLElement} [base] - The element used as the base for the querySelect.\n   * @param {boolean}     [overwrite]     - A flag to set if the existing elements will be overwritten.\n   */\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\n        );\n      }\n\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\n\n      // Get the all elements matching the selector in the base.\n      const domElements = Array.from(\n        base.querySelectorAll(this.selectors[elementType])\n      );\n\n      // Filter the elements so only direct children of the base are kept.\n      const filteredElements = domElements.filter(\n        (item) => item.parentElement === base\n      );\n\n      if (overwrite) {\n        this._dom[elementType] = filteredElements;\n      } else {\n        this._dom[elementType] = [\n          ...this._dom[elementType],\n          ...filteredElements,\n        ];\n      }\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Resets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be reset through this method.\n   *\n   * @protected\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  _resetDOMElementType(elementType) {\n    if (typeof this.dom[elementType] !== \"undefined\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\n        );\n      }\n\n      this._dom[elementType] = [];\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\n   *\n   * @protected\n   */\n  _setDOMElements() {\n    this._setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this._setDOMElementType(\"submenuItems\");\n\n      this._resetDOMElementType(\"submenuToggles\");\n      this._resetDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this._setDOMElementType(\"submenuToggles\", item, false);\n        this._setDOMElementType(\"submenus\", item, false);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @protected\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  _findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this._elements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this._findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   *\n   * @protected\n   */\n  _handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds a `pointerdown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `pointerup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `pointerup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   *\n   * @protected\n   */\n  _handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(\n        \"pointerdown\",\n        () => {\n          this.currentEvent = \"mouse\";\n          this.elements.rootMenu.blurChildren();\n          this.focusChild(index);\n        },\n        { passive: true }\n      );\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle.addEventListener(\n          \"pointerup\",\n          (event) => {\n            this.currentEvent = \"mouse\";\n            toggleToggle(this, item.elements.toggle, event);\n          }\n        );\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"pointerup\",\n        (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, this.elements.controller, event);\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu#_hoverType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu#_hoverDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Toggles the menu when the user hits \"Space\" or \"Enter\".\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.toggle();\n\n          // If the menu is open, focus the first child.\n          if (this.elements.controller.isOpen) {\n            this.focusFirstChild();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","// eslint-disable-next-line no-unused-vars\n/* global Treeview, TreeviewToggle */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Treeview}.\n *\n * @extends BaseMenuItem\n */\nclass TreeviewItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}              options                         - The options for generating the menu item.\n   * @param {HTMLElement}         options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}            options.parentMenu              - The parent menu.\n   * @param {boolean}             [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Treeview|null}       [options.childMenu = null]      - The child menu.\n   * @param {TreeviewToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}             [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"treeitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Treeview#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0.\n   */\n  focus() {\n    super.focus();\n\n    this.dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Treeview#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1.\n   */\n  blur() {\n    super.blur();\n\n    this.dom.link.tabIndex = -1;\n  }\n}\n\nexport default TreeviewItem;\n","// eslint-disable-next-line no-unused-vars\n/* global Treeview */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Treeview}.\n *\n * @extends BaseMenuToggle\n */\nclass TreeviewToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {Treeview}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Treeview|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}       [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TreeviewToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TreeviewItem from \"./treeviewItem.js\";\nimport TreeviewToggle from \"./treeviewToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html|Navigation Treeview Example Using Computed Properties}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { Treeview } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new Treeview({\n *   menuElement,\n * });\n */\nclass Treeview extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof Treeview}\n   */\n  _MenuType = Treeview;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof TreeviewItem}\n   */\n  _MenuItemType = TreeviewItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof TreeviewToggle}\n   */\n  _MenuToggleType = TreeviewToggle;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = true]         - A flag to mark the root menu.\n   * @param {(Treeview|null)}        [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Treeview#_handleFocus|focus},\n   * {@link Treeview#_handleClick|click},\n   * {@link Treeview#_handleHover|hover},\n   * {@link Treeview#_handleKeydown|keydown}, and\n   * {@link Treeview#_handleKeyup|keyup} events for the menu.\n   *\n   * If the menu is a root menu it's `role` will be set to \"tree\" and the first\n   * menu item's `tabIndex` will be set to 0 in the DOM.\n   *\n   * If the menu is _not_ a root menu it's `role` will be set to \"group\".\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"tree\");\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"group\");\n      }\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Treeview#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     \"*\" (asterisk), and \"A\" through \"Z\".\n   *   - Moves focus out if the \"Tab\" key is pressed.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"Space\",\n          \"ArrowUp\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Asterisk\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\n        const controllerKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/treeview/treeview-2/treeview-2a.html#kbd_label|Navigation Treeview Example Using Computed Properties}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Enter_ or _Space_ | Performs the default action (e.g. onclick event) for the focused node. |\n   * | _Down arrow_ | <ul><li>Moves focus to the next node that is focusable without opening or closing a node.</li><li>If focus is on the last node, does nothing.</li></ul> |\n   * | _Up arrow_ | <ul><li>Moves focus to the previous node that is focusable without opening or closing a node.</li><li>If focus is on the first node, does nothing.</li></ul> |\n   * | _Right arrow_ | <ul><li>When focus is on a closed node, opens the node; focus does not move.</li><li>When focus is on a open node, moves focus to the first child node.</li><li>When focus is on an end node, does nothing.</li></ul> |\n   * | _Left arrow_ | <ul><li>When focus is on an open node, closes the node.</li><li>When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.</li><li>When focus is on a root node that is also either an end node or a closed node, does nothing.</li></ul> |\n   * | _Home_ | Moves focus to first node without opening or closing a node. |\n   * | _End_ | Moves focus to the last node that can be focused without expanding any nodes that are closed. |\n   * | _a-z_, _A-Z_ | <ul><li>Focus moves to the next node with a name that starts with the typed character.</li><li>Search wraps to first node if a matching name is not found among the nodes that follow the focused node.</li><li>Search ignores nodes that are descendants of closed nodes.</li></ul> |\n   * | _* (asterisk)_ | <ul><li>Expands all closed sibling nodes that are at the same level as the focused node.</li><li>Focus does not move.</li></ul> |\n   * | _Escape_ | If the root menu is collapsible, collapses the menu and focuses the menu's controlling element. |\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Focus moves to the next node with a name that starts with the typed character.\n        // - Search wraps to first node if a matching name is not found among the nodes that follow the focused node.\n        // - Search ignores nodes that are descendants of closed nodes.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextNodeWithCharacter(event.key);\n      } else if (this.focusState === \"self\") {\n        if (key === \"Enter\" || key === \"Space\") {\n          // Hitting Space or Enter:\n          // - Performs the default action (e.g. onclick event) for the focused node.\n          // - If focus is on a closed node, opens the node; focus does not move.\n          preventEvent(event);\n\n          if (this.currentMenuItem.isSubmenuItem) {\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next node that is focusable without opening or closing a node.\n          // - If focus is on the last node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else if (\n            !this.isTopLevel &&\n            this.currentChild === this.elements.menuItems.length - 1\n          ) {\n            this.focusParentsNextChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\n          // - If focus is on the first node, does nothing.\n          preventEvent(event);\n\n          const previousMenuItem =\n            this.elements.menuItems[this.currentChild - 1];\n\n          if (\n            previousMenuItem &&\n            previousMenuItem.isSubmenuItem &&\n            previousMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentChild = this.currentChild - 1;\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.focusChildsLastNode();\n          } else if (!this.isTopLevel && this.currentChild === 0) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          } else {\n            this.focusPreviousChild();\n          }\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - When focus is on a closed node, opens the node; focus does not move.\n          // - When focus is on a open node, moves focus to the first child node.\n          // - When focus is on an end node, does nothing.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.blurCurrentChild();\n              this.currentMenuItem.elements.childMenu.currentEvent =\n                this.currentEvent;\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - When focus is on an open node, closes the node.\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.blurCurrentChild();\n            this.currentMenuItem.elements.toggle.close();\n          } else if (!this.isTopLevel) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          }\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first node without opening or closing a node.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusLastNode();\n        } else if (key === \"Asterisk\") {\n          // Hitting Asterisk:\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\n          // - Focus does not move.\n          preventEvent(event);\n          this.openChildren();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's last node of the entire expanded menu.\n   *\n   * This includes all _open_ child menu items.\n   */\n  focusLastNode() {\n    const numberOfItems = this.elements.menuItems.length - 1;\n    const lastChild = this.elements.menuItems[numberOfItems];\n\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\n      this.currentChild = numberOfItems;\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\n      lastChild.elements.childMenu.focusLastNode();\n    } else {\n      this.focusLastChild();\n    }\n  }\n\n  /**\n   * Open all submenu children.\n   */\n  openChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\n  }\n\n  /**\n   * Focus the menu's next node starting with a specific letter.\n   *\n   * This includes all _open_ child menu items.\n   *\n   * Wraps to the first node if no match is found after the current node.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextNodeWithCharacter(char) {\n    /**\n     * Gets all the menu's items and submenu's items.\n     *\n     * @param  {Treeview}       menu - The menu.\n     * @return {TreeviewItem[]}      - The menu items.\n     */\n    function getOpenMenuItems(menu) {\n      let menuItems = [];\n\n      menu.elements.menuItems.forEach((menuItem) => {\n        menuItems.push(menuItem);\n\n        if (menuItem.isSubmenuItem && menuItem.elements.toggle.isOpen) {\n          menuItems = [\n            ...menuItems,\n            ...getOpenMenuItems(\n              menuItem.elements.toggle.elements.controlledMenu\n            ),\n          ];\n        }\n      });\n\n      return menuItems;\n    }\n\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    // Sort the menu items so the child _after_ the current child is first to be searched.\n    const menuItems = getOpenMenuItems(this.elements.rootMenu);\n    const currentItem = menuItems.indexOf(this.currentMenuItem) + 1;\n    const sortedMenuItems = [\n      ...menuItems.slice(currentItem),\n      ...menuItems.slice(0, currentItem),\n    ];\n    let ctr = 0;\n    let found = false;\n\n    while (!found && ctr < sortedMenuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (sortedMenuItems[ctr].dom.item.innerText) {\n        text = sortedMenuItems[ctr].dom.item.innerText;\n      } else {\n        text = sortedMenuItems[ctr].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        const menu = sortedMenuItems[ctr].elements.parentMenu;\n        const index = menu.elements.menuItems.indexOf(sortedMenuItems[ctr]);\n        this.elements.rootMenu.blurChildren();\n        menu.focusChild(index);\n      }\n\n      ctr++;\n    }\n  }\n\n  /**\n   * Focus the parent menu's next child.\n   *\n   * This will cascade up through to the root menu.\n   */\n  focusParentsNextChild() {\n    if (!this.elements.parentMenu) return;\n\n    this.elements.parentMenu.currentEvent = this.currentEvent;\n\n    if (\n      this.elements.parentMenu.currentChild ===\n      this.elements.parentMenu.elements.menuItems.length - 1\n    ) {\n      this.elements.parentMenu.blurCurrentChild();\n      this.elements.parentMenu.focusParentsNextChild();\n    } else {\n      this.blurChildren();\n      this.elements.parentMenu.focusNextChild();\n    }\n  }\n\n  /**\n   * Focus the last child of the current child's submenu.\n   *\n   * This will cascade down through to the last open menu.\n   */\n  focusChildsLastNode() {\n    this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n    this.currentMenuItem.elements.childMenu.focusLastChild();\n\n    if (\n      this.currentMenuItem.elements.childMenu.currentMenuItem.isSubmenuItem &&\n      this.currentMenuItem.elements.childMenu.currentMenuItem.elements.toggle\n        .isOpen\n    ) {\n      this.currentMenuItem.elements.childMenu.blurCurrentChild();\n      this.currentMenuItem.elements.childMenu.focusChildsLastNode();\n    }\n  }\n}\n\nexport default Treeview;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","BaseMenuToggle","_dom","toggle","parent","_elements","controlledMenu","parentMenu","_open","_expandEvent","CustomEvent","bubbles","detail","_collapseEvent","constructor","_ref","menuToggleElement","parentElement","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","isOpen","_expand","emit","arguments","undefined","closeClass","openClass","classList","add","remove","dispatchEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","item","link","childMenu","_submenu","menuItemElement","menuLinkElement","isSubmenuItem","focus","shouldFocus","keyPress","event","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","_MenuType","_MenuItemType","_MenuToggleType","menuItems","submenuItems","submenus","controller","container","_selectors","menuLinks","rootMenu","_openClass","_closeClass","_root","_currentChild","_focusState","_currentEvent","_hoverType","_hoverDelay","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","_validate","_findRootMenu","_setDOMElements","_createChildElements","selectors","currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","_setDOMElementType","base","overwrite","domElements","from","querySelectorAll","filteredElements","filter","_resetDOMElementType","element","toggler","submenu","push","_handleFocus","addEventListener","_handleClick","toggleToggle","blurChildren","passive","_handleHover","pointerType","some","focusCurrentChild","setTimeout","_handleKeydown","_handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","TreeviewItem","tabIndex","TreeviewToggle","Treeview","submenuKeys","controllerKeys","altKey","crtlKey","metaKey","modifier","focusNextNodeWithCharacter","click","focusParentsNextChild","previousMenuItem","focusChildsLastNode","focusLastNode","openChildren","numberOfItems","lastChild","char","getOpenMenuItems","currentItem","indexOf","sortedMenuItems","ctr","text","textContent","charAt"],"mappings":"AAeO,SAASA,eAAeA,CAACC,UAAU,EAAEC,QAAQ,EAAE;EACpD,IAAI;AACF,IAAA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAChC,MAAMC,YAAY,GAAG,OAAOD,QAAQ,CAAA;AAEpC,MAAA,MAAM,IAAIE,SAAS,CAChB,CAAmFD,iFAAAA,EAAAA,YAAa,SACnG,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,KAAK,MAAME,GAAG,IAAIH,QAAQ,EAAE;MAC1B,IAAI,EAAEA,QAAQ,CAACG,GAAG,CAAC,YAAYJ,UAAU,CAAC,EAAE;AAC1C,QAAA,MAAMK,WAAW,GAAG,OAAOJ,QAAQ,CAACG,GAAG,CAAC,CAAA;AACxC,QAAA,MAAM,IAAID,SAAS,CAChB,CAAA,gBAAA,EAAkBC,GAAI,CAAA,wBAAA,EAA0BJ,UAAU,CAACM,IAAK,CAAA,EAAA,EAAID,WAAY,CAAA,OAAA,CACnF,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOE,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAiBO,SAASE,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACxC,IAAI;AACF,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMC,UAAU,GAAG,OAAOD,MAAM,CAAA;AAEhC,MAAA,MAAM,IAAIR,SAAS,CAChB,CAA6ES,2EAAAA,EAAAA,UAAW,SAC3F,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,KAAK,MAAMR,GAAG,IAAIO,MAAM,EAAE;AACxB,MAAA,MAAME,SAAS,GAAG,OAAOF,MAAM,CAACP,GAAG,CAAC,CAAA;MAEpC,IAAIS,SAAS,KAAKH,IAAI,EAAE;QACtB,MAAM,IAAIP,SAAS,CAChB,CAAkBC,gBAAAA,EAAAA,GAAI,cAAaM,IAAK,CAAA,EAAA,EAAIG,SAAU,CAAA,OAAA,CACzD,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAON,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAaO,SAASO,aAAaA,CAACH,MAAM,EAAE;EACpC,IAAI;AACF,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAAA;AAE1B,MAAA,MAAM,IAAIR,SAAS,CAChB,CAA+EO,6EAAAA,EAAAA,IAAK,SACvF,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,KAAK,MAAMN,GAAG,IAAIO,MAAM,EAAE;MACxB,IAAI;AACF,QAAA,IAAIA,MAAM,CAACP,GAAG,CAAC,KAAK,IAAI,EAAE;UACxB,MAAM,IAAIW,KAAK,EAAE,CAAA;AACnB,SAAA;AAEAC,QAAAA,QAAQ,CAACC,aAAa,CAACN,MAAM,CAACP,GAAG,CAAC,CAAC,CAAA;OACpC,CAAC,OAAOG,KAAK,EAAE;QACd,MAAM,IAAIJ,SAAS,CAChB,CAAkBC,gBAAAA,EAAAA,GAAI,CAAkCO,gCAAAA,EAAAA,MAAM,CAACP,GAAG,CAAE,CAAA,QAAA,CACvE,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOG,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAaO,SAASW,gBAAgBA,CAACP,MAAM,EAAE;EACvC,IAAI;IACF,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIQ,KAAK,CAACC,OAAO,CAACT,MAAM,CAAC,EAAE;MACvD,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAAA;AAE1B,MAAA,MAAM,IAAIR,SAAS,CAChB,CAAkFO,gFAAAA,EAAAA,IAAK,SAC1F,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,KAAK,MAAMN,GAAG,IAAIO,MAAM,EAAE;AACxB,MAAA,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAACP,GAAG,CAAC,CAAA;MAE/B,IAAIM,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAIS,KAAK,CAACC,OAAO,CAACT,MAAM,CAACP,GAAG,CAAC,CAAC,EAAE;AAC9BO,UAAAA,MAAM,CAACP,GAAG,CAAC,CAACiB,OAAO,CAAEC,KAAK,IAAK;AAC7B,YAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AAC7B,cAAA,MAAM,IAAInB,SAAS,CAChB,CAAkBC,gBAAAA,EAAAA,GAAI,kFACzB,CAAC,CAAA;AACH,aAAA;AACF,WAAC,CAAC,CAAA;AACJ,SAAC,MAAM;UACL,MAAM,IAAID,SAAS,CAChB,CAAA,gBAAA,EAAkBC,GAAI,CAA4CM,0CAAAA,EAAAA,IAAK,SAC1E,CAAC,CAAA;AACH,SAAA;AACF,OAAC,MAAM;QACL,MAAMa,GAAG,GAAG,EAAE,CAAA;AACdA,QAAAA,GAAG,CAACnB,GAAG,CAAC,GAAGO,MAAM,CAACP,GAAG,CAAC,CAAA;QAEtBU,aAAa,CAACS,GAAG,CAAC,CAAA;AACpB,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOhB,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAaO,SAASiB,YAAYA,CAACb,MAAM,EAAE;EACnC,IAAI;AACF,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAAA;AAE1B,MAAA,MAAM,IAAIR,SAAS,CAChB,CAA8EO,4EAAAA,EAAAA,IAAK,SACtF,CAAC,CAAA;AACH,KAAA;IAEA,MAAMe,WAAW,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;AAE7C,IAAA,KAAK,MAAMrB,GAAG,IAAIO,MAAM,EAAE;MACxB,IAAI,CAACc,WAAW,CAACC,QAAQ,CAACf,MAAM,CAACP,GAAG,CAAC,CAAC,EAAE;AACtC,QAAA,MAAM,IAAID,SAAS,CAChB,mBAAkBC,GAAI,CAAA,sCAAA,EAAwCqB,WAAW,CAACE,IAAI,CAC7E,IACF,CAAE,CAAKhB,GAAAA,EAAAA,MAAM,CAACP,GAAG,CAAE,UACrB,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOG,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAaO,SAASqB,YAAYA,CAACjB,MAAM,EAAE;EACnC,IAAI;AACF,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAAA;AAE1B,MAAA,MAAM,IAAIR,SAAS,CAChB,CAA8EO,4EAAAA,EAAAA,IAAK,SACtF,CAAC,CAAA;AACH,KAAA;IAEA,MAAMmB,WAAW,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC,CAAA;AAE9D,IAAA,KAAK,MAAMzB,GAAG,IAAIO,MAAM,EAAE;MACxB,IAAI,CAACkB,WAAW,CAACH,QAAQ,CAACf,MAAM,CAACP,GAAG,CAAC,CAAC,EAAE;AACtC,QAAA,MAAM,IAAID,SAAS,CAChB,mBAAkBC,GAAI,CAAA,sCAAA,EAAwCyB,WAAW,CAACF,IAAI,CAC7E,IACF,CAAE,CAAKhB,GAAAA,EAAAA,MAAM,CAACP,GAAG,CAAE,UACrB,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOG,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAaO,SAASuB,gBAAgBA,CAACnB,MAAM,EAAE;EACvC,IAAI;AACF,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMD,IAAI,GAAG,OAAOC,MAAM,CAAA;AAE1B,MAAA,MAAM,IAAIR,SAAS,CAChB,CAAkFO,gFAAAA,EAAAA,IAAK,SAC1F,CAAC,CAAA;AACH,KAAA;IAEA,MAAMqB,UAAU,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAA,KAAK,MAAM3B,GAAG,IAAIO,MAAM,EAAE;MACxB,IAAI,CAACoB,UAAU,CAACL,QAAQ,CAACf,MAAM,CAACP,GAAG,CAAC,CAAC,EAAE;AACrC,QAAA,MAAM,IAAID,SAAS,CAChB,mBAAkBC,GAAI,CAAA,sCAAA,EAAwC2B,UAAU,CAACJ,IAAI,CAC5E,IACF,CAAE,CAAKhB,GAAAA,EAAAA,MAAM,CAACP,GAAG,CAAE,UACrB,CAAC,CAAA;AACH,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOG,KAAK,EAAE;AACdC,IAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACpB,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF,CAAA;AAYO,SAASyB,KAAKA,CAACC,OAAO,EAAEhC,QAAQ,EAAE;EACvC,IACEQ,WAAW,CAAC,QAAQ,EAAE;AAAEwB,IAAAA,OAAAA;GAAS,CAAC,IAClClC,eAAe,CAACmC,WAAW,EAAEjC,QAAQ,CAAC,EACtC;AACA,IAAA,MAAMkC,GAAG,GAAGF,OAAO,CAACG,WAAW,EAAE,CAAA;IACjC,IAAIC,KAAK,GAAG,IAAI,CAAA;AAEhB,IAAA,KAAK,MAAMjC,GAAG,IAAIH,QAAQ,EAAE;AAC1B,MAAA,IAAIA,QAAQ,CAACG,GAAG,CAAC,CAAC6B,OAAO,CAACG,WAAW,EAAE,KAAKD,GAAG,EAAEE,KAAK,GAAG,KAAK,CAAA;AAChE,KAAA;AAEA,IAAA,OAAOA,KAAK,CAAA;AACd,GAAC,MAAM;AACL,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF;;AC5TA,MAAMC,cAAc,CAAC;AAWnBC,EAAAA,IAAI,GAAG;AACLC,IAAAA,MAAM,EAAE,IAAI;AACZC,IAAAA,MAAM,EAAE,IAAA;GACT,CAAA;AAYDC,EAAAA,SAAS,GAAG;AACVC,IAAAA,cAAc,EAAE,IAAI;AACpBC,IAAAA,UAAU,EAAE,IAAA;GACb,CAAA;AASDC,EAAAA,KAAK,GAAG,KAAK,CAAA;AAabC,EAAAA,YAAY,GAAG,IAAIC,WAAW,CAAC,sBAAsB,EAAE;AACrDC,IAAAA,OAAO,EAAE,IAAI;AACbC,IAAAA,MAAM,EAAE;AAAET,MAAAA,MAAM,EAAE,IAAA;AAAK,KAAA;AACzB,GAAC,CAAC,CAAA;AAaFU,EAAAA,cAAc,GAAG,IAAIH,WAAW,CAAC,wBAAwB,EAAE;AACzDC,IAAAA,OAAO,EAAE,IAAI;AACbC,IAAAA,MAAM,EAAE;AAAET,MAAAA,MAAM,EAAE,IAAA;AAAK,KAAA;AACzB,GAAC,CAAC,CAAA;EAWFW,WAAWA,CAAAC,IAAA,EAKR;IAAA,IALS;MACVC,iBAAiB;MACjBC,aAAa;MACbX,cAAc;AACdC,MAAAA,UAAU,GAAG,IAAA;AACf,KAAC,GAAAQ,IAAA,CAAA;AAEC,IAAA,IAAI,CAACb,IAAI,CAACC,MAAM,GAAGa,iBAAiB,CAAA;AACpC,IAAA,IAAI,CAACd,IAAI,CAACE,MAAM,GAAGa,aAAa,CAAA;AAGhC,IAAA,IAAI,CAACZ,SAAS,CAACC,cAAc,GAAGA,cAAc,CAAA;AAC9C,IAAA,IAAI,CAACD,SAAS,CAACE,UAAU,GAAGA,UAAU,CAAA;AACxC,GAAA;AAyBAW,EAAAA,UAAUA,GAAG;IAEX,IAAI,CAACC,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;IACrD,IAAI,CAACD,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;AAGtD,IAAA,IAAI,CAACzB,KAAK,CAAC,QAAQ,EAAE;AAAEQ,MAAAA,MAAM,EAAE,IAAI,CAACgB,GAAG,CAAChB,MAAAA;AAAO,KAAC,CAAC,EAAE;MACjD,IAAI,CAACgB,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAChD,KAAA;IAGA,IACE,IAAI,CAACD,GAAG,CAAChB,MAAM,CAACkB,EAAE,KAAK,EAAE,IACzB,IAAI,CAACzD,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACD,EAAE,KAAK,EAAE,EAC/C;MACA,MAAME,YAAY,GAAGC,IAAI,CAACC,MAAM,EAAE,CAC/BC,QAAQ,CAAC,EAAE,CAAC,CACZC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvBC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAEhB,MAAA,IAAIP,EAAE,GAAG,IAAI,CAACF,GAAG,CAAChB,MAAM,CAAC0B,SAAS,CAACF,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAA;MACjE,IAAIG,OAAO,GAAGP,YAAY,CAAA;MAE1B,IACE,CAACF,EAAE,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACI,MAAM,IAC7B,IAAI,CAACZ,GAAG,CAAChB,MAAM,CAAC6B,YAAY,CAAC,YAAY,CAAC,EAC1C;AACAX,QAAAA,EAAE,GAAG,IAAI,CAACF,GAAG,CAAChB,MAAM,CACjB6B,YAAY,CAAC,YAAY,CAAC,CAC1BL,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAA;AACnC,OAAA;AAEA,MAAA,IAAIN,EAAE,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACI,MAAM,GAAG,CAAC,EAAE;AACpCV,QAAAA,EAAE,GAAGA,EAAE,CAACtB,WAAW,EAAE,CAAC4B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;AAE1C,QAAA,IAAIN,EAAE,CAACY,UAAU,CAAC,GAAG,CAAC,EAAE;AACtBZ,UAAAA,EAAE,GAAGA,EAAE,CAACa,SAAS,CAAC,CAAC,CAAC,CAAA;AACtB,SAAA;AAEA,QAAA,IAAIb,EAAE,CAACc,QAAQ,CAAC,GAAG,CAAC,EAAE;UACpBd,EAAE,GAAGA,EAAE,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AACtB,SAAA;AAEAN,QAAAA,OAAO,GAAI,CAAA,EAAET,EAAG,CAAA,CAAA,EAAGS,OAAQ,CAAC,CAAA,CAAA;AAC9B,OAAA;AAEA,MAAA,IAAI,CAACX,GAAG,CAAChB,MAAM,CAACkB,EAAE,GAAG,IAAI,CAACF,GAAG,CAAChB,MAAM,CAACkB,EAAE,IAAK,CAAA,EAAES,OAAQ,CAAa,YAAA,CAAA,CAAA;MACnE,IAAI,CAAClE,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACD,EAAE,GACtC,IAAI,CAACzD,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACD,EAAE,IAAK,CAAES,EAAAA,OAAQ,CAAM,KAAA,CAAA,CAAA;AACjE,KAAA;IAGA,IAAI,CAAClE,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACF,YAAY,CAChD,iBAAiB,EACjB,IAAI,CAACD,GAAG,CAAChB,MAAM,CAACkB,EAClB,CAAC,CAAA;IACD,IAAI,CAACF,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAC1B,eAAe,EACf,IAAI,CAACxD,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACD,EACxC,CAAC,CAAA;AAGD,IAAA,IAAI,CAACgB,SAAS,CAAC,KAAK,CAAC,CAAA;AACvB,GAAA;EAWA,IAAIlB,GAAGA,GAAG;IACR,OAAO,IAAI,CAACjB,IAAI,CAAA;AAClB,GAAA;EAWA,IAAItC,QAAQA,GAAG;IACb,OAAO,IAAI,CAACyC,SAAS,CAAA;AACvB,GAAA;EASA,IAAIiC,MAAMA,GAAG;IACX,OAAO,IAAI,CAAC9B,KAAK,CAAA;AACnB,GAAA;EAEA,IAAI8B,MAAMA,CAACrD,KAAK,EAAE;IAChBb,WAAW,CAAC,SAAS,EAAE;AAAEa,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;IAEjC,IAAI,CAACuB,KAAK,GAAGvB,KAAK,CAAA;AACpB,GAAA;AAmBAsD,EAAAA,OAAOA,GAAc;AAAA,IAAA,IAAbC,IAAI,GAAAC,SAAA,CAAAV,MAAA,GAAA,CAAA,IAAAU,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IACjB,MAAM;MAAEE,UAAU;AAAEC,MAAAA,SAAAA;AAAU,KAAC,GAAG,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAAA;IAE9D,IAAI,CAACa,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;IAGrD,IAAIwB,SAAS,KAAK,EAAE,EAAE;AACpB,MAAA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;AACjC,QAAA,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACC,GAAG,CAACF,SAAS,CAAC,CAAA;AAChE,OAAC,MAAM;AACL,QAAA,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACC,GAAG,CAAC,GAAGF,SAAS,CAAC,CAAA;AACnE,OAAA;AACF,KAAA;IAGA,IAAID,UAAU,KAAK,EAAE,EAAE;AACrB,MAAA,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;AAClC,QAAA,IAAI,CAAC/E,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACE,MAAM,CAACJ,UAAU,CAAC,CAAA;AACpE,OAAC,MAAM;AACL,QAAA,IAAI,CAAC/E,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACE,MAAM,CAAC,GAAGJ,UAAU,CAAC,CAAA;AACvE,OAAA;AACF,KAAA;AAEA,IAAA,IAAIH,IAAI,EAAE;MACR,IAAI,CAACrB,GAAG,CAAChB,MAAM,CAAC6C,aAAa,CAAC,IAAI,CAACvC,YAAY,CAAC,CAAA;AAClD,KAAA;AACF,GAAA;AAmBA4B,EAAAA,SAASA,GAAc;AAAA,IAAA,IAAbG,IAAI,GAAAC,SAAA,CAAAV,MAAA,GAAA,CAAA,IAAAU,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IACnB,MAAM;MAAEE,UAAU;AAAEC,MAAAA,SAAAA;AAAU,KAAC,GAAG,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAAA;IAE9D,IAAI,CAACa,GAAG,CAAChB,MAAM,CAACiB,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;IAGtD,IAAIuB,UAAU,KAAK,EAAE,EAAE;AACrB,MAAA,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;AAClC,QAAA,IAAI,CAAC/E,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACC,GAAG,CAACH,UAAU,CAAC,CAAA;AACjE,OAAC,MAAM;AACL,QAAA,IAAI,CAAC/E,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACC,GAAG,CAAC,GAAGH,UAAU,CAAC,CAAA;AACpE,OAAA;AACF,KAAA;IAGA,IAAIC,SAAS,KAAK,EAAE,EAAE;AACpB,MAAA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;AACjC,QAAA,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACE,MAAM,CAACH,SAAS,CAAC,CAAA;AACnE,OAAC,MAAM;AACL,QAAA,IAAI,CAAChF,QAAQ,CAAC0C,cAAc,CAACa,GAAG,CAACG,IAAI,CAACuB,SAAS,CAACE,MAAM,CAAC,GAAGH,SAAS,CAAC,CAAA;AACtE,OAAA;AACF,KAAA;AAEA,IAAA,IAAIJ,IAAI,EAAE;MACR,IAAI,CAACrB,GAAG,CAAChB,MAAM,CAAC6C,aAAa,CAAC,IAAI,CAACnC,cAAc,CAAC,CAAA;AACpD,KAAA;AACF,GAAA;AASAoC,EAAAA,IAAIA,GAAG;AAEL,IAAA,IAAI,CAACrF,QAAQ,CAAC0C,cAAc,CAAC4C,UAAU,GAAG,MAAM,CAAA;IAGhD,IAAI,CAACX,OAAO,EAAE,CAAA;IAGd,IAAI,CAACD,MAAM,GAAG,IAAI,CAAA;AACpB,GAAA;AASAa,EAAAA,OAAOA,GAAG;AAER,IAAA,IAAI,IAAI,CAACvF,QAAQ,CAAC2C,UAAU,EAAE;AAC5B,MAAA,IAAI,CAAC3C,QAAQ,CAAC2C,UAAU,CAAC2C,UAAU,GAAG,MAAM,CAAA;AAC9C,KAAA;IAGA,IAAI,CAACX,OAAO,EAAE,CAAA;IAGd,IAAI,CAACD,MAAM,GAAG,IAAI,CAAA;AACpB,GAAA;AAWAc,EAAAA,KAAKA,GAAG;IACN,IAAI,IAAI,CAACd,MAAM,EAAE;AAEf,MAAA,IAAI,CAAC1E,QAAQ,CAAC0C,cAAc,CAAC+C,YAAY,GAAG,CAAC,CAAA;AAC7C,MAAA,IAAI,CAACzF,QAAQ,CAAC0C,cAAc,CAACgD,IAAI,EAAE,CAAA;AAGnC,MAAA,IAAI,IAAI,CAAC1F,QAAQ,CAAC2C,UAAU,EAAE;AAC5B,QAAA,IAAI,CAAC3C,QAAQ,CAAC2C,UAAU,CAAC2C,UAAU,GAAG,MAAM,CAAA;AAC9C,OAAA;MAGA,IAAI,CAACb,SAAS,EAAE,CAAA;MAGhB,IAAI,CAACC,MAAM,GAAG,KAAK,CAAA;AACrB,KAAA;AACF,GAAA;AAKAnC,EAAAA,MAAMA,GAAG;IACP,IAAI,IAAI,CAACmC,MAAM,EAAE;MACf,IAAI,CAACc,KAAK,EAAE,CAAA;AACd,KAAC,MAAM;MACL,IAAI,CAACH,IAAI,EAAE,CAAA;AACb,KAAA;AACF,GAAA;AAKAM,EAAAA,aAAaA,GAAG;AACd,IAAA,IAAI,IAAI,CAAC3F,QAAQ,CAAC2C,UAAU,EAAE;AAC5B,MAAA,IAAI,CAAC3C,QAAQ,CAAC2C,UAAU,CAAC3C,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEmB,MAAM,IAAK;QACnE,IAAIA,MAAM,KAAK,IAAI,EAAEA,MAAM,CAACiD,KAAK,EAAE,CAAA;AACrC,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAA;AAKAK,EAAAA,aAAaA,GAAG;AACd,IAAA,IAAI,CAAC7F,QAAQ,CAAC0C,cAAc,CAAC1C,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEmB,MAAM,IAClEA,MAAM,CAACiD,KAAK,EACd,CAAC,CAAA;AACH,GAAA;AACF;;AC/ZA,MAAMM,YAAY,CAAC;AAWjBxD,EAAAA,IAAI,GAAG;AACLyD,IAAAA,IAAI,EAAE,IAAI;AACVC,IAAAA,IAAI,EAAE,IAAA;GACP,CAAA;AAaDvD,EAAAA,SAAS,GAAG;AACVE,IAAAA,UAAU,EAAE,IAAI;AAChBsD,IAAAA,SAAS,EAAE,IAAI;AACf1D,IAAAA,MAAM,EAAE,IAAA;GACT,CAAA;AAOD2D,EAAAA,QAAQ,GAAG,KAAK,CAAA;EAahBhD,WAAWA,CAAAC,IAAA,EAOR;IAAA,IAPS;MACVgD,eAAe;MACfC,eAAe;MACfzD,UAAU;AACV0D,MAAAA,aAAa,GAAG,KAAK;AACrBJ,MAAAA,SAAS,GAAG,IAAI;AAChB1D,MAAAA,MAAM,GAAG,IAAA;AACX,KAAC,GAAAY,IAAA,CAAA;AAEC,IAAA,IAAI,CAACb,IAAI,CAACyD,IAAI,GAAGI,eAAe,CAAA;AAChC,IAAA,IAAI,CAAC7D,IAAI,CAAC0D,IAAI,GAAGI,eAAe,CAAA;AAGhC,IAAA,IAAI,CAAC3D,SAAS,CAACE,UAAU,GAAGA,UAAU,CAAA;AACtC,IAAA,IAAI,CAACF,SAAS,CAACwD,SAAS,GAAGA,SAAS,CAAA;AACpC,IAAA,IAAI,CAACxD,SAAS,CAACF,MAAM,GAAGA,MAAM,CAAA;IAE9B,IAAI,CAAC2D,QAAQ,GAAGG,aAAa,CAAA;AAC/B,GAAA;EAKA/C,UAAUA,GAAG,EAAC;EAWd,IAAIC,GAAGA,GAAG;IACR,OAAO,IAAI,CAACjB,IAAI,CAAA;AAClB,GAAA;EAWA,IAAItC,QAAQA,GAAG;IACb,OAAO,IAAI,CAACyC,SAAS,CAAA;AACvB,GAAA;EAWA,IAAI4D,aAAaA,GAAG;IAClB,OAAO,IAAI,CAACH,QAAQ,CAAA;AACtB,GAAA;AAMAI,EAAAA,KAAKA,GAAG;AACN,IAAA,IAAI,IAAI,CAACtG,QAAQ,CAAC2C,UAAU,CAAC4D,WAAW,EAAE;AACxC,MAAA,IAAI,CAAChD,GAAG,CAACyC,IAAI,CAACM,KAAK,EAAE,CAAA;AACvB,KAAA;AACF,GAAA;AAMAZ,EAAAA,IAAIA,GAAG;AACL,IAAA,IAAI,IAAI,CAAC1F,QAAQ,CAAC2C,UAAU,CAAC4D,WAAW,EAAE;AACxC,MAAA,IAAI,CAAChD,GAAG,CAACyC,IAAI,CAACN,IAAI,EAAE,CAAA;AACtB,KAAA;AACF,GAAA;AACF;;ACtIO,SAASc,QAAQA,CAACC,KAAK,EAAE;EAC9B,IAAI;IAEF,MAAMtG,GAAG,GAAGsG,KAAK,CAACtG,GAAG,IAAIsG,KAAK,CAACC,OAAO,CAAA;AACtC,IAAA,MAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEzG,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,EAAE;MACpC0G,KAAK,EAAE1G,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,EAAE;MACtD2G,MAAM,EAAE3G,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,EAAE;MACvD4G,OAAO,EAAE5G,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,EAAE;MACxD6G,UAAU,EAAE7G,GAAG,KAAK,YAAY,IAAIA,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,EAAE;MACjE8G,SAAS,EAAE9G,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,EAAE;MAC9D+G,SAAS,EAAE/G,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,EAAE;AAC9DgH,MAAAA,IAAI,EAAEhH,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,EAAE;AAClCiH,MAAAA,GAAG,EAAEjH,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,EAAE;AAChCkH,MAAAA,SAAS,EAAEC,KAAK,CAACnH,GAAG,CAAC,IAAI,CAAC,CAACA,GAAG,CAACoH,KAAK,CAAC,eAAe,CAAC;AACrDC,MAAAA,GAAG,EAAErH,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,CAAC;AAC/BsH,MAAAA,QAAQ,EAAEtH,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,EAAA;KAClC,CAAA;AAED,IAAA,OAAOuH,MAAM,CAACf,IAAI,CAACA,IAAI,CAAC,CAACgB,IAAI,CAAExH,GAAG,IAAKwG,IAAI,CAACxG,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAA;GACjE,CAAC,OAAOG,KAAK,EAAE;AAEd,IAAA,OAAO,EAAE,CAAA;AACX,GAAA;AACF,CAAA;AAOO,SAASsH,YAAYA,CAACnB,KAAK,EAAE;EAClCA,KAAK,CAACoB,cAAc,EAAE,CAAA;EACtBpB,KAAK,CAACqB,eAAe,EAAE,CAAA;AACzB;;AChBA,MAAMC,QAAQ,CAAC;AAQbC,EAAAA,SAAS,GAAGD,QAAQ,CAAA;AASpBE,EAAAA,aAAa,GAAGnC,YAAY,CAAA;AAS5BoC,EAAAA,eAAe,GAAG7F,cAAc,CAAA;AAiBhCC,EAAAA,IAAI,GAAG;AACLoB,IAAAA,IAAI,EAAE,IAAI;AACVyE,IAAAA,SAAS,EAAE,EAAE;AACbC,IAAAA,YAAY,EAAE,EAAE;AAChBxC,IAAAA,cAAc,EAAE,EAAE;AAClByC,IAAAA,QAAQ,EAAE,EAAE;AACZC,IAAAA,UAAU,EAAE,IAAI;AAChBC,IAAAA,SAAS,EAAE,IAAA;GACZ,CAAA;AAeDC,EAAAA,UAAU,GAAG;AACXL,IAAAA,SAAS,EAAE,EAAE;AACbM,IAAAA,SAAS,EAAE,EAAE;AACbL,IAAAA,YAAY,EAAE,EAAE;AAChBxC,IAAAA,cAAc,EAAE,EAAE;AAClByC,IAAAA,QAAQ,EAAE,EAAA;GACX,CAAA;AAeD5F,EAAAA,SAAS,GAAG;AACV0F,IAAAA,SAAS,EAAE,EAAE;AACbvC,IAAAA,cAAc,EAAE,EAAE;AAClB0C,IAAAA,UAAU,EAAE,IAAI;AAChB3F,IAAAA,UAAU,EAAE,IAAI;AAChB+F,IAAAA,QAAQ,EAAE,IAAA;GACX,CAAA;AASDC,EAAAA,UAAU,GAAG,MAAM,CAAA;AASnBC,EAAAA,WAAW,GAAG,MAAM,CAAA;AASpBC,EAAAA,KAAK,GAAG,IAAI,CAAA;AASZC,EAAAA,aAAa,GAAG,CAAC,CAAA;AASjBC,EAAAA,WAAW,GAAG,MAAM,CAAA;AASpBC,EAAAA,aAAa,GAAG,MAAM,CAAA;AAStBC,EAAAA,UAAU,GAAG,KAAK,CAAA;AASlBC,EAAAA,WAAW,GAAG,GAAG,CAAA;EAqBjBhG,WAAWA,CAAAC,IAAA,EAeR;IAAA,IAfS;MACVgG,WAAW;AACXC,MAAAA,gBAAgB,GAAG,IAAI;AACvBC,MAAAA,gBAAgB,GAAG,GAAG;AACtBC,MAAAA,mBAAmB,GAAG,EAAE;AACxBC,MAAAA,qBAAqB,GAAG,GAAG;AAC3BC,MAAAA,eAAe,GAAG,IAAI;AACtBC,MAAAA,iBAAiB,GAAG,IAAI;AACxBC,MAAAA,gBAAgB,GAAG,IAAI;AACvB1E,MAAAA,SAAS,GAAG,MAAM;AAClBD,MAAAA,UAAU,GAAG,MAAM;AACnB4E,MAAAA,UAAU,GAAG,IAAI;AACjBhH,MAAAA,UAAU,GAAG,IAAI;AACjBiH,MAAAA,SAAS,GAAG,KAAK;AACjBC,MAAAA,UAAU,GAAG,GAAA;AACf,KAAC,GAAA1G,IAAA,CAAA;AAEC,IAAA,IAAI,CAACb,IAAI,CAACoB,IAAI,GAAGyF,WAAW,CAAA;AAC5B,IAAA,IAAI,CAAC7G,IAAI,CAACgG,UAAU,GAAGmB,iBAAiB,CAAA;AACxC,IAAA,IAAI,CAACnH,IAAI,CAACiG,SAAS,GAAGmB,gBAAgB,CAAA;AAGtC,IAAA,IAAI,CAAClB,UAAU,CAACL,SAAS,GAAGiB,gBAAgB,CAAA;AAC5C,IAAA,IAAI,CAACZ,UAAU,CAACC,SAAS,GAAGY,gBAAgB,CAAA;AAC5C,IAAA,IAAI,CAACb,UAAU,CAACJ,YAAY,GAAGkB,mBAAmB,CAAA;AAClD,IAAA,IAAI,CAACd,UAAU,CAAC5C,cAAc,GAAG2D,qBAAqB,CAAA;AACtD,IAAA,IAAI,CAACf,UAAU,CAACH,QAAQ,GAAGmB,eAAe,CAAA;AAG1C,IAAA,IAAI,CAAC/G,SAAS,CAAC0F,SAAS,GAAG,EAAE,CAAA;AAC7B,IAAA,IAAI,CAAC1F,SAAS,CAACmD,cAAc,GAAG,EAAE,CAAA;AAClC,IAAA,IAAI,CAACnD,SAAS,CAAC6F,UAAU,GAAG,IAAI,CAAA;AAChC,IAAA,IAAI,CAAC7F,SAAS,CAACE,UAAU,GAAGA,UAAU,CAAA;IACtC,IAAI,CAACF,SAAS,CAACiG,QAAQ,GAAGiB,UAAU,GAAG,IAAI,GAAG,IAAI,CAAA;AAGlD,IAAA,IAAI,CAAChB,UAAU,GAAG3D,SAAS,IAAI,EAAE,CAAA;AACjC,IAAA,IAAI,CAAC4D,WAAW,GAAG7D,UAAU,IAAI,EAAE,CAAA;IAGnC,IAAI,CAAC8D,KAAK,GAAGc,UAAU,CAAA;IAGvB,IAAI,CAACV,UAAU,GAAGW,SAAS,CAAA;IAC3B,IAAI,CAACV,WAAW,GAAGW,UAAU,CAAA;AAC/B,GAAA;AAeAvG,EAAAA,UAAUA,GAAG;AACX,IAAA,IAAI,CAAC,IAAI,CAACwG,SAAS,EAAE,EAAE;AACrB,MAAA,MAAM,IAAIhJ,KAAK,CACb,uFACF,CAAC,CAAA;AACH,KAAA;AAGA,IAAA,IAAI,IAAI,CAACd,QAAQ,CAAC0I,QAAQ,KAAK,IAAI,EAAE,IAAI,CAACqB,aAAa,CAAC,IAAI,CAAC,CAAA;IAG7D,IAAI,CAACC,eAAe,EAAE,CAAA;IAEtB,IAAI,IAAI,CAACL,UAAU,EAAE;MACnB,IAAI,IAAI,CAACpG,GAAG,CAAC+E,UAAU,IAAI,IAAI,CAAC/E,GAAG,CAACgF,SAAS,EAAE;AAE7C,QAAA,MAAMhG,MAAM,GAAG,IAAI,IAAI,CAAC2F,eAAe,CAAC;AACtC9E,UAAAA,iBAAiB,EAAE,IAAI,CAACG,GAAG,CAAC+E,UAAU;AACtCjF,UAAAA,aAAa,EAAE,IAAI,CAACE,GAAG,CAACgF,SAAS;AACjC7F,UAAAA,cAAc,EAAE,IAAA;AAClB,SAAC,CAAC,CAAA;AAEF,QAAA,IAAI,CAACD,SAAS,CAAC6F,UAAU,GAAG/F,MAAM,CAAA;AACpC,OAAA;AACF,KAAA;IAEA,IAAI,CAAC0H,oBAAoB,EAAE,CAAA;AAC7B,GAAA;EAWA,IAAI1G,GAAGA,GAAG;IACR,OAAO,IAAI,CAACjB,IAAI,CAAA;AAClB,GAAA;EAWA,IAAI4H,SAASA,GAAG;IACd,OAAO,IAAI,CAAC1B,UAAU,CAAA;AACxB,GAAA;EAWA,IAAIxI,QAAQA,GAAG;IACb,OAAO,IAAI,CAACyC,SAAS,CAAA;AACvB,GAAA;EAWA,IAAIkH,UAAUA,GAAG;IACf,OAAO,IAAI,CAACd,KAAK,CAAA;AACnB,GAAA;EAYA,IAAI7D,SAASA,GAAG;AACd,IAAA,OAAO,IAAI,CAAC2E,UAAU,GAAG,IAAI,CAAChB,UAAU,GAAG,IAAI,CAAC3I,QAAQ,CAAC0I,QAAQ,CAAC1D,SAAS,CAAA;AAC7E,GAAA;EAYA,IAAID,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAAC4E,UAAU,GAClB,IAAI,CAACf,WAAW,GAChB,IAAI,CAAC5I,QAAQ,CAAC0I,QAAQ,CAAC3D,UAAU,CAAA;AACvC,GAAA;EAkBA,IAAIU,YAAYA,GAAG;IACjB,OAAO,IAAI,CAACqD,aAAa,CAAA;AAC3B,GAAA;EAcA,IAAIxD,UAAUA,GAAG;IACf,OAAO,IAAI,CAACyD,WAAW,CAAA;AACzB,GAAA;EASA,IAAIoB,YAAYA,GAAG;IACjB,OAAO,IAAI,CAACnB,aAAa,CAAA;AAC3B,GAAA;EAOA,IAAIoB,eAAeA,GAAG;IACpB,OAAO,IAAI,CAACpK,QAAQ,CAACmI,SAAS,CAAC,IAAI,CAAC1C,YAAY,CAAC,CAAA;AACnD,GAAA;EAYA,IAAImE,SAASA,GAAG;AACd,IAAA,OAAO,IAAI,CAACf,KAAK,GAAG,IAAI,CAACI,UAAU,GAAG,IAAI,CAACjJ,QAAQ,CAAC0I,QAAQ,CAACkB,SAAS,CAAA;AACxE,GAAA;EAYA,IAAIC,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAAChB,KAAK,GAAG,IAAI,CAACK,WAAW,GAAG,IAAI,CAAClJ,QAAQ,CAAC0I,QAAQ,CAACmB,UAAU,CAAA;AAC1E,GAAA;EAaA,IAAItD,WAAWA,GAAG;IAChB,IAAInE,KAAK,GAAG,KAAK,CAAA;IAEjB,IAAI,IAAI,CAAC+H,YAAY,KAAK,UAAU,IAAI,IAAI,CAACA,YAAY,KAAK,WAAW,EAAE;AACzE/H,MAAAA,KAAK,GAAG,IAAI,CAAA;AACd,KAAA;IAEA,IAAI,IAAI,CAAC+H,YAAY,KAAK,OAAO,IAAI,IAAI,CAACP,SAAS,KAAK,SAAS,EAAE;AACjExH,MAAAA,KAAK,GAAG,IAAI,CAAA;AACd,KAAA;AAEA,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;EAEA,IAAI4C,SAASA,CAAC3D,KAAK,EAAE;AACnBJ,IAAAA,gBAAgB,CAAC;AAAE+D,MAAAA,SAAS,EAAE3D,KAAAA;AAAM,KAAC,CAAC,CAAA;AAEtC,IAAA,IAAI,IAAI,CAACsH,UAAU,KAAKtH,KAAK,EAAE;MAC7B,IAAI,CAACsH,UAAU,GAAGtH,KAAK,CAAA;AACzB,KAAA;AACF,GAAA;EAEA,IAAI0D,UAAUA,CAAC1D,KAAK,EAAE;AACpBJ,IAAAA,gBAAgB,CAAC;AAAE8D,MAAAA,UAAU,EAAE1D,KAAAA;AAAM,KAAC,CAAC,CAAA;AAEvC,IAAA,IAAI,IAAI,CAACuH,WAAW,KAAKvH,KAAK,EAAE;MAC9B,IAAI,CAACuH,WAAW,GAAGvH,KAAK,CAAA;AAC1B,KAAA;AACF,GAAA;EAEA,IAAIoE,YAAYA,CAACpE,KAAK,EAAE;IACtBb,WAAW,CAAC,QAAQ,EAAE;AAAEa,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;IAQhC,SAASgJ,cAAcA,CAAC3G,IAAI,EAAE;AAC5B,MAAA,MAAM4G,YAAY,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;AAE3C,MAAA,IACEA,YAAY,CAAC7I,QAAQ,CAACiC,IAAI,CAACyG,YAAY,CAAC,IACxCzG,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,EACxB;QACA,IAAI4H,KAAK,GAAG,CAAC,CAAA;QACb,IAAIC,KAAK,GAAG,KAAK,CAAA;AAEjB,QAAA,OACE,CAACA,KAAK,IACND,KAAK,GAAG7G,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,CAAC3C,QAAQ,CAACmI,SAAS,CAAChE,MAAM,EAC1D;AACA,UAAA,MAAMsG,QAAQ,GAAG/G,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,CAAC3C,QAAQ,CAACmI,SAAS,CAACoC,KAAK,CAAC,CAAA;AAEnE,UAAA,IACEE,QAAQ,CAACpE,aAAa,IACtBoE,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACvC,QAAQ,CAAC0C,cAAc,KAAKgB,IAAI,EACzD;AACA8G,YAAAA,KAAK,GAAG,IAAI,CAAA;YAEZ9G,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,CAACwH,YAAY,GAAGzG,IAAI,CAACyG,YAAY,CAAA;AACzDzG,YAAAA,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,CAAC8C,YAAY,GAAG8E,KAAK,CAAA;AAC/C,WAAA;AAEAA,UAAAA,KAAK,EAAE,CAAA;AACT,SAAA;AACF,OAAA;AACF,KAAA;AAEA,IAAA,IAAIlJ,KAAK,GAAG,CAAC,CAAC,EAAE;AACd,MAAA,IAAI,CAACyH,aAAa,GAAG,CAAC,CAAC,CAAA;MACvBuB,cAAc,CAAC,IAAI,CAAC,CAAA;KACrB,MAAM,IAAIhJ,KAAK,IAAI,IAAI,CAACrB,QAAQ,CAACmI,SAAS,CAAChE,MAAM,EAAE;MAClD,IAAI,CAAC2E,aAAa,GAAG,IAAI,CAAC9I,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,CAAA;MACvDkG,cAAc,CAAC,IAAI,CAAC,CAAA;AACtB,KAAC,MAAM,IAAI,IAAI,CAACK,UAAU,KAAKrJ,KAAK,EAAE;MACpC,IAAI,CAACyH,aAAa,GAAGzH,KAAK,CAAA;MAC1BgJ,cAAc,CAAC,IAAI,CAAC,CAAA;AACtB,KAAA;AACF,GAAA;EAEA,IAAI/E,UAAUA,CAACjE,KAAK,EAAE;AACpBE,IAAAA,YAAY,CAAC;AAAEF,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAEvB,IAAA,IAAI,IAAI,CAAC0H,WAAW,KAAK1H,KAAK,EAAE;MAC9B,IAAI,CAAC0H,WAAW,GAAG1H,KAAK,CAAA;AAC1B,KAAA;AAEA,IAAA,IACE,IAAI,CAACrB,QAAQ,CAAC4F,cAAc,CAACzB,MAAM,GAAG,CAAC,KACtC9C,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,MAAM,CAAC,EACtC;MACA,IAAI,CAACrB,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEmB,MAAM,IAAK;AAC/CA,QAAAA,MAAM,CAACvC,QAAQ,CAAC0C,cAAc,CAAC4C,UAAU,GAAG,MAAM,CAAA;AACpD,OAAC,CAAC,CAAA;AACJ,KAAA;AAEA,IAAA,IAAI,IAAI,CAACtF,QAAQ,CAAC2C,UAAU,KAAKtB,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,OAAO,CAAC,EAAE;AACvE,MAAA,IAAI,CAACrB,QAAQ,CAAC2C,UAAU,CAAC2C,UAAU,GAAG,OAAO,CAAA;AAC/C,KAAA;AACF,GAAA;EAEA,IAAI6E,YAAYA,CAAC9I,KAAK,EAAE;AACtBM,IAAAA,YAAY,CAAC;AAAEN,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAEvB,IAAA,IAAI,IAAI,CAAC2H,aAAa,KAAK3H,KAAK,EAAE;MAChC,IAAI,CAAC2H,aAAa,GAAG3H,KAAK,CAAA;MAE1B,IAAI,IAAI,CAACrB,QAAQ,CAAC4F,cAAc,CAACzB,MAAM,GAAG,CAAC,EAAE;QAC3C,IAAI,CAACnE,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEuJ,aAAa,IAAK;AACtDA,UAAAA,aAAa,CAAC3K,QAAQ,CAAC0C,cAAc,CAACyH,YAAY,GAAG9I,KAAK,CAAA;AAC5D,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAA;AACF,GAAA;EAEA,IAAIuI,SAASA,CAACvI,KAAK,EAAE;AACnBQ,IAAAA,gBAAgB,CAAC;AAAER,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAE3B,IAAA,IAAI,IAAI,CAAC4H,UAAU,KAAK5H,KAAK,EAAE;MAC7B,IAAI,CAAC4H,UAAU,GAAG5H,KAAK,CAAA;AACzB,KAAA;AACF,GAAA;EAEA,IAAIwI,UAAUA,CAACxI,KAAK,EAAE;IACpBb,WAAW,CAAC,QAAQ,EAAE;AAAEa,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAEhC,IAAA,IAAI,IAAI,CAAC6H,WAAW,KAAK7H,KAAK,EAAE;MAC9B,IAAI,CAAC6H,WAAW,GAAG7H,KAAK,CAAA;AAC1B,KAAA;AACF,GAAA;AASAyI,EAAAA,SAASA,GAAG;IACV,IAAI1H,KAAK,GAAG,IAAI,CAAA;AAEhB,IAAA,IAAI,IAAI,CAACE,IAAI,CAACiG,SAAS,KAAK,IAAI,IAAI,IAAI,CAACjG,IAAI,CAACgG,UAAU,KAAK,IAAI,EAAE;AACjE,MAAA,IACE,CAACxI,eAAe,CAACmC,WAAW,EAAE;AAC5BkH,QAAAA,WAAW,EAAE,IAAI,CAAC7G,IAAI,CAACoB,IAAI;AAC3B+F,QAAAA,iBAAiB,EAAE,IAAI,CAACnH,IAAI,CAACgG,UAAU;AACvCoB,QAAAA,gBAAgB,EAAE,IAAI,CAACpH,IAAI,CAACiG,SAAAA;AAC9B,OAAC,CAAC,EACF;AACAnG,QAAAA,KAAK,GAAG,KAAK,CAAA;AACf,OAAA;AACF,KAAC,MAAM,IACL,CAACtC,eAAe,CAACmC,WAAW,EAAE;AAC5BkH,MAAAA,WAAW,EAAE,IAAI,CAAC7G,IAAI,CAACoB,IAAAA;AACzB,KAAC,CAAC,EACF;AACAtB,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;AAEA,IAAA,IAAI,IAAI,CAACoG,UAAU,CAACJ,YAAY,KAAK,EAAE,EAAE;MACvC,IACE,CAACvH,aAAa,CAAC;AACbuI,QAAAA,gBAAgB,EAAE,IAAI,CAACZ,UAAU,CAACL,SAAS;AAC3CkB,QAAAA,gBAAgB,EAAE,IAAI,CAACb,UAAU,CAACC,SAAS;AAC3Ca,QAAAA,mBAAmB,EAAE,IAAI,CAACd,UAAU,CAACJ,YAAY;AACjDmB,QAAAA,qBAAqB,EAAE,IAAI,CAACf,UAAU,CAAC5C,cAAc;AACrD4D,QAAAA,eAAe,EAAE,IAAI,CAAChB,UAAU,CAACH,QAAAA;AACnC,OAAC,CAAC,EACF;AACAjG,QAAAA,KAAK,GAAG,KAAK,CAAA;AACf,OAAA;AACF,KAAC,MAAM,IACL,CAACvB,aAAa,CAAC;AACbuI,MAAAA,gBAAgB,EAAE,IAAI,CAACZ,UAAU,CAACL,SAAS;AAC3CkB,MAAAA,gBAAgB,EAAE,IAAI,CAACb,UAAU,CAACC,SAAAA;AACpC,KAAC,CAAC,EACF;AACArG,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;IAEA,IACE,IAAI,CAACuG,UAAU,KAAK,EAAE,IACtB,CAAC1H,gBAAgB,CAAC;MAAE+D,SAAS,EAAE,IAAI,CAAC2D,UAAAA;AAAW,KAAC,CAAC,EACjD;AACAvG,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;IAEA,IACE,IAAI,CAACwG,WAAW,KAAK,EAAE,IACvB,CAAC3H,gBAAgB,CAAC;MAAE8D,UAAU,EAAE,IAAI,CAAC6D,WAAAA;AAAY,KAAC,CAAC,EACnD;AACAxG,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;AAEA,IAAA,IAAI,CAAC5B,WAAW,CAAC,SAAS,EAAE;MAAEmJ,UAAU,EAAE,IAAI,CAACd,KAAAA;AAAM,KAAC,CAAC,EAAE;AACvDzG,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;AAEA,IAAA,IACE,IAAI,CAACK,SAAS,CAACE,UAAU,KAAK,IAAI,IAClC,CAAC7C,eAAe,CAACiI,QAAQ,EAAE;AAAEpF,MAAAA,UAAU,EAAE,IAAI,CAACF,SAAS,CAACE,UAAAA;AAAW,KAAC,CAAC,EACrE;AACAP,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;IAEA,IAAI,CAACP,gBAAgB,CAAC;MAAE+H,SAAS,EAAE,IAAI,CAACX,UAAAA;AAAW,KAAC,CAAC,EAAE;AACrD7G,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;AAEA,IAAA,IAAI,CAAC5B,WAAW,CAAC,QAAQ,EAAE;MAAEqJ,UAAU,EAAE,IAAI,CAACX,WAAAA;AAAY,KAAC,CAAC,EAAE;AAC5D9G,MAAAA,KAAK,GAAG,KAAK,CAAA;AACf,KAAA;AAEA,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;EAaAwI,kBAAkBA,CAACxK,WAAW,EAA0C;AAAA,IAAA,IAAxCyK,IAAI,GAAAhG,SAAA,CAAAV,MAAA,QAAAU,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAG,CAAA,CAAA,GAAA,IAAI,CAACtB,GAAG,CAACG,IAAI,CAAA;AAAA,IAAA,IAAEoH,SAAS,GAAAjG,SAAA,CAAAV,MAAA,GAAA,CAAA,IAAAU,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;IACpE,IAAI,OAAO,IAAI,CAACqF,SAAS,CAAC9J,WAAW,CAAC,KAAK,QAAQ,EAAE;AACnD,MAAA,IAAI,CAACc,KAAK,CAACC,OAAO,CAAC,IAAI,CAACoC,GAAG,CAACnD,WAAW,CAAC,CAAC,EAAE;AACzC,QAAA,MAAM,IAAIU,KAAK,CACZ,CAAuBV,qBAAAA,EAAAA,WAAY,qDACtC,CAAC,CAAA;AACH,OAAA;MAEA,IAAIyK,IAAI,KAAK,IAAI,CAACtH,GAAG,CAACG,IAAI,EAAE5D,eAAe,CAACmC,WAAW,EAAE;AAAE4I,QAAAA,IAAAA;AAAK,OAAC,CAAC,CAAA;AAGlE,MAAA,MAAME,WAAW,GAAG7J,KAAK,CAAC8J,IAAI,CAC5BH,IAAI,CAACI,gBAAgB,CAAC,IAAI,CAACf,SAAS,CAAC9J,WAAW,CAAC,CACnD,CAAC,CAAA;AAGD,MAAA,MAAM8K,gBAAgB,GAAGH,WAAW,CAACI,MAAM,CACxCpF,IAAI,IAAKA,IAAI,CAAC1C,aAAa,KAAKwH,IACnC,CAAC,CAAA;AAED,MAAA,IAAIC,SAAS,EAAE;AACb,QAAA,IAAI,CAACxI,IAAI,CAAClC,WAAW,CAAC,GAAG8K,gBAAgB,CAAA;AAC3C,OAAC,MAAM;AACL,QAAA,IAAI,CAAC5I,IAAI,CAAClC,WAAW,CAAC,GAAG,CACvB,GAAG,IAAI,CAACkC,IAAI,CAAClC,WAAW,CAAC,EACzB,GAAG8K,gBAAgB,CACpB,CAAA;AACH,OAAA;AACF,KAAC,MAAM;AACL,MAAA,MAAM,IAAIpK,KAAK,CACZ,CAAmBV,iBAAAA,EAAAA,WAAY,gDAClC,CAAC,CAAA;AACH,KAAA;AACF,GAAA;EAWAgL,oBAAoBA,CAAChL,WAAW,EAAE;IAChC,IAAI,OAAO,IAAI,CAACmD,GAAG,CAACnD,WAAW,CAAC,KAAK,WAAW,EAAE;AAChD,MAAA,IAAI,CAACc,KAAK,CAACC,OAAO,CAAC,IAAI,CAACoC,GAAG,CAACnD,WAAW,CAAC,CAAC,EAAE;AACzC,QAAA,MAAM,IAAIU,KAAK,CACZ,CAAuBV,qBAAAA,EAAAA,WAAY,yDACtC,CAAC,CAAA;AACH,OAAA;AAEA,MAAA,IAAI,CAACkC,IAAI,CAAClC,WAAW,CAAC,GAAG,EAAE,CAAA;AAC7B,KAAC,MAAM;AACL,MAAA,MAAM,IAAIU,KAAK,CACZ,CAAmBV,iBAAAA,EAAAA,WAAY,gDAClC,CAAC,CAAA;AACH,KAAA;AACF,GAAA;AAUA4J,EAAAA,eAAeA,GAAG;AAChB,IAAA,IAAI,CAACY,kBAAkB,CAAC,WAAW,CAAC,CAAA;AAEpC,IAAA,IAAI,IAAI,CAACV,SAAS,CAAC9B,YAAY,KAAK,EAAE,EAAE;AACtC,MAAA,IAAI,CAACwC,kBAAkB,CAAC,cAAc,CAAC,CAAA;AAEvC,MAAA,IAAI,CAACQ,oBAAoB,CAAC,gBAAgB,CAAC,CAAA;AAC3C,MAAA,IAAI,CAACA,oBAAoB,CAAC,UAAU,CAAC,CAAA;MAErC,IAAI,CAAC7H,GAAG,CAAC6E,YAAY,CAAChH,OAAO,CAAE2E,IAAI,IAAK;QACtC,IAAI,CAAC6E,kBAAkB,CAAC,gBAAgB,EAAE7E,IAAI,EAAE,KAAK,CAAC,CAAA;QACtD,IAAI,CAAC6E,kBAAkB,CAAC,UAAU,EAAE7E,IAAI,EAAE,KAAK,CAAC,CAAA;AAClD,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAA;EASAgE,aAAaA,CAACrG,IAAI,EAAE;IAClB,IAAIA,IAAI,CAACiG,UAAU,EAAE;AACnB,MAAA,IAAI,CAAClH,SAAS,CAACiG,QAAQ,GAAGhF,IAAI,CAAA;KAC/B,MAAM,IAAIA,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,KAAK,IAAI,EAAE;MAC5C,IAAI,CAACoH,aAAa,CAACrG,IAAI,CAAC1D,QAAQ,CAAC2C,UAAU,CAAC,CAAA;AAC9C,KAAC,MAAM;AACL,MAAA,MAAM,IAAI7B,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC3C,KAAA;AACF,GAAA;AAOAmJ,EAAAA,oBAAoBA,GAAG;IACrB,IAAI,CAAC1G,GAAG,CAAC4E,SAAS,CAAC/G,OAAO,CAAEiK,OAAO,IAAK;AACtC,MAAA,IAAIZ,QAAQ,CAAA;MAEZ,IAAI,IAAI,CAAClH,GAAG,CAAC6E,YAAY,CAAC3G,QAAQ,CAAC4J,OAAO,CAAC,EAAE;QAE3C,MAAMC,OAAO,GAAGD,OAAO,CAACrK,aAAa,CAAC,IAAI,CAACkJ,SAAS,CAACtE,cAAc,CAAC,CAAA;QAEpE,MAAM2F,OAAO,GAAGF,OAAO,CAACrK,aAAa,CAAC,IAAI,CAACkJ,SAAS,CAAC7B,QAAQ,CAAC,CAAA;AAG9D,QAAA,MAAM3E,IAAI,GAAG,IAAI,IAAI,CAACsE,SAAS,CAAC;AAC9BmB,UAAAA,WAAW,EAAEoC,OAAO;AACpBnC,UAAAA,gBAAgB,EAAE,IAAI,CAACc,SAAS,CAAC/B,SAAS;AAC1CkB,UAAAA,gBAAgB,EAAE,IAAI,CAACa,SAAS,CAACzB,SAAS;AAC1Ca,UAAAA,mBAAmB,EAAE,IAAI,CAACY,SAAS,CAAC9B,YAAY;AAChDmB,UAAAA,qBAAqB,EAAE,IAAI,CAACW,SAAS,CAACtE,cAAc;AACpD4D,UAAAA,eAAe,EAAE,IAAI,CAACU,SAAS,CAAC7B,QAAQ;UACxCrD,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBD,UAAU,EAAE,IAAI,CAACA,UAAU;AAC3B4E,UAAAA,UAAU,EAAE,KAAK;AACjBhH,UAAAA,UAAU,EAAE,IAAI;UAChBiH,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,UAAU,EAAE,IAAI,CAACA,UAAAA;AACnB,SAAC,CAAC,CAAA;AAGF,QAAA,MAAMtH,MAAM,GAAG,IAAI,IAAI,CAAC2F,eAAe,CAAC;AACtC9E,UAAAA,iBAAiB,EAAEkI,OAAO;AAC1BjI,UAAAA,aAAa,EAAEgI,OAAO;AACtB3I,UAAAA,cAAc,EAAEgB,IAAI;AACpBf,UAAAA,UAAU,EAAE,IAAA;AACd,SAAC,CAAC,CAAA;QAGF,IAAI,CAACF,SAAS,CAACmD,cAAc,CAAC4F,IAAI,CAACjJ,MAAM,CAAC,CAAA;AAG1CkI,QAAAA,QAAQ,GAAG,IAAI,IAAI,CAACxC,aAAa,CAAC;AAChC9B,UAAAA,eAAe,EAAEkF,OAAO;AACxBjF,UAAAA,eAAe,EAAEkF,OAAO;AACxB3I,UAAAA,UAAU,EAAE,IAAI;AAChB0D,UAAAA,aAAa,EAAE,IAAI;AACnBJ,UAAAA,SAAS,EAAEvC,IAAI;AACfnB,UAAAA,MAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM;QACL,MAAMyD,IAAI,GAAGqF,OAAO,CAACrK,aAAa,CAAC,IAAI,CAACkJ,SAAS,CAACzB,SAAS,CAAC,CAAA;AAG5DgC,QAAAA,QAAQ,GAAG,IAAI,IAAI,CAACxC,aAAa,CAAC;AAChC9B,UAAAA,eAAe,EAAEkF,OAAO;AACxBjF,UAAAA,eAAe,EAAEJ,IAAI;AACrBrD,UAAAA,UAAU,EAAE,IAAA;AACd,SAAC,CAAC,CAAA;AACJ,OAAA;MAEA,IAAI,CAACF,SAAS,CAAC0F,SAAS,CAACqD,IAAI,CAACf,QAAQ,CAAC,CAAA;AACzC,KAAC,CAAC,CAAA;AACJ,GAAA;AAWAgB,EAAAA,YAAYA,GAAG;IACb,IAAI,CAACzL,QAAQ,CAACmI,SAAS,CAAC/G,OAAO,CAAC,CAACqJ,QAAQ,EAAEF,KAAK,KAAK;MACnDE,QAAQ,CAAClH,GAAG,CAACyC,IAAI,CAAC0F,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAChD,IAAI,CAACpG,UAAU,GAAG,MAAM,CAAA;QACxB,IAAI,CAACG,YAAY,GAAG8E,KAAK,CAAA;AAC3B,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AAgBAoB,EAAAA,YAAYA,GAAG;AAQb,IAAA,SAASC,YAAYA,CAAClI,IAAI,EAAEnB,MAAM,EAAEkE,KAAK,EAAE;MACzCmB,YAAY,CAACnB,KAAK,CAAC,CAAA;MAEnBlE,MAAM,CAACA,MAAM,EAAE,CAAA;MAEf,IAAIA,MAAM,CAACmC,MAAM,EAAE;QACjBhB,IAAI,CAAC4B,UAAU,GAAG,MAAM,CAAA;AACxB/C,QAAAA,MAAM,CAACvC,QAAQ,CAAC0C,cAAc,CAAC4C,UAAU,GAAG,MAAM,CAAA;AACpD,OAAA;AACF,KAAA;IAEA,IAAI,CAACtF,QAAQ,CAACmI,SAAS,CAAC/G,OAAO,CAAC,CAAC2E,IAAI,EAAEwE,KAAK,KAAK;MAE/CxE,IAAI,CAACxC,GAAG,CAACyC,IAAI,CAAC0F,gBAAgB,CAC5B,aAAa,EACb,MAAM;QACJ,IAAI,CAACvB,YAAY,GAAG,OAAO,CAAA;AAC3B,QAAA,IAAI,CAACnK,QAAQ,CAAC0I,QAAQ,CAACmD,YAAY,EAAE,CAAA;AACrC,QAAA,IAAI,CAACnB,UAAU,CAACH,KAAK,CAAC,CAAA;AACxB,OAAC,EACD;AAAEuB,QAAAA,OAAO,EAAE,IAAA;AAAK,OAClB,CAAC,CAAA;MAGD,IAAI/F,IAAI,CAACM,aAAa,EAAE;AACtBN,QAAAA,IAAI,CAAC/F,QAAQ,CAACuC,MAAM,CAACgB,GAAG,CAAChB,MAAM,CAACmJ,gBAAgB,CAC9C,WAAW,EACVjF,KAAK,IAAK;UACT,IAAI,CAAC0D,YAAY,GAAG,OAAO,CAAA;UAC3ByB,YAAY,CAAC,IAAI,EAAE7F,IAAI,CAAC/F,QAAQ,CAACuC,MAAM,EAAEkE,KAAK,CAAC,CAAA;AACjD,SACF,CAAC,CAAA;AACH,OAAA;AACF,KAAC,CAAC,CAAA;IAGF,IAAI,IAAI,CAACkD,UAAU,IAAI,IAAI,CAAC3J,QAAQ,CAACsI,UAAU,EAAE;AAC/C,MAAA,IAAI,CAACtI,QAAQ,CAACsI,UAAU,CAAC/E,GAAG,CAAChB,MAAM,CAACmJ,gBAAgB,CAClD,WAAW,EACVjF,KAAK,IAAK;QACT,IAAI,CAAC0D,YAAY,GAAG,OAAO,CAAA;QAC3ByB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC5L,QAAQ,CAACsI,UAAU,EAAE7B,KAAK,CAAC,CAAA;AACrD,OACF,CAAC,CAAA;AACH,KAAA;AACF,GAAA;AA6CAsF,EAAAA,YAAYA,GAAG;IACb,IAAI,CAAC/L,QAAQ,CAACmI,SAAS,CAAC/G,OAAO,CAAC,CAACqJ,QAAQ,EAAEF,KAAK,KAAK;MACnDE,QAAQ,CAAClH,GAAG,CAACyC,IAAI,CAAC0F,gBAAgB,CAAC,cAAc,EAAGjF,KAAK,IAAK;QAE5D,IAAIA,KAAK,CAACuF,WAAW,KAAK,KAAK,IAAIvF,KAAK,CAACuF,WAAW,KAAK,OAAO,EAAE;AAChE,UAAA,OAAA;AACF,SAAA;AAEA,QAAA,IAAI,IAAI,CAACpC,SAAS,KAAK,IAAI,EAAE;UAC3B,IAAI,CAACO,YAAY,GAAG,OAAO,CAAA;UAC3B,IAAI,CAAC1E,YAAY,GAAG8E,KAAK,CAAA;UAEzB,IAAIE,QAAQ,CAACpE,aAAa,EAAE;AAC1BoE,YAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACgD,OAAO,EAAE,CAAA;AACpC,WAAA;AACF,SAAC,MAAM,IAAI,IAAI,CAACqE,SAAS,KAAK,SAAS,EAAE;AACvC,UAAA,MAAMlF,MAAM,GAAG,IAAI,CAAC1E,QAAQ,CAAC4F,cAAc,CAACqG,IAAI,CAC7C1J,MAAM,IAAKA,MAAM,CAACmC,MACrB,CAAC,CAAA;UACD,IAAI,CAACe,YAAY,GAAG8E,KAAK,CAAA;UAEzB,IAAI,CAAC,IAAI,CAACZ,UAAU,IAAI,IAAI,CAACrE,UAAU,KAAK,MAAM,EAAE;YAClD,IAAI,CAAC6E,YAAY,GAAG,OAAO,CAAA;YAC3B,IAAI,CAAC+B,iBAAiB,EAAE,CAAA;AAC1B,WAAA;UAEA,IAAIzB,QAAQ,CAACpE,aAAa,KAAK,CAAC,IAAI,CAACsD,UAAU,IAAIjF,MAAM,CAAC,EAAE;YAC1D,IAAI,CAACyF,YAAY,GAAG,OAAO,CAAA;AAC3BM,YAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACgD,OAAO,EAAE,CAAA;AACpC,WAAA;AACF,SAAA;AACF,OAAC,CAAC,CAAA;MAEF,IAAIkF,QAAQ,CAACpE,aAAa,EAAE;QAC1BoE,QAAQ,CAAClH,GAAG,CAACwC,IAAI,CAAC2F,gBAAgB,CAAC,cAAc,EAAGjF,KAAK,IAAK;UAE5D,IAAIA,KAAK,CAACuF,WAAW,KAAK,KAAK,IAAIvF,KAAK,CAACuF,WAAW,KAAK,OAAO,EAAE;AAChE,YAAA,OAAA;AACF,WAAA;AAEA,UAAA,IAAI,IAAI,CAACpC,SAAS,KAAK,IAAI,EAAE;AAC3B,YAAA,IAAI,IAAI,CAACC,UAAU,GAAG,CAAC,EAAE;AACvBsC,cAAAA,UAAU,CAAC,MAAM;gBACf,IAAI,CAAChC,YAAY,GAAG,OAAO,CAAA;AAC3BM,gBAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;AAClC,eAAC,EAAE,IAAI,CAACqE,UAAU,CAAC,CAAA;AACrB,aAAC,MAAM;cACL,IAAI,CAACM,YAAY,GAAG,OAAO,CAAA;AAC3BM,cAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;AAClC,aAAA;AACF,WAAC,MAAM,IAAI,IAAI,CAACoE,SAAS,KAAK,SAAS,EAAE;AACvC,YAAA,IAAI,CAAC,IAAI,CAACD,UAAU,EAAE;AACpB,cAAA,IAAI,IAAI,CAACE,UAAU,GAAG,CAAC,EAAE;AACvBsC,gBAAAA,UAAU,CAAC,MAAM;kBACf,IAAI,CAAChC,YAAY,GAAG,OAAO,CAAA;AAC3BM,kBAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;kBAChC,IAAI,CAAC0G,iBAAiB,EAAE,CAAA;AAC1B,iBAAC,EAAE,IAAI,CAACrC,UAAU,CAAC,CAAA;AACrB,eAAC,MAAM;gBACL,IAAI,CAACM,YAAY,GAAG,OAAO,CAAA;AAC3BM,gBAAAA,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;gBAChC,IAAI,CAAC0G,iBAAiB,EAAE,CAAA;AAC1B,eAAA;AACF,aAAA;AACF,WAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AAYAE,EAAAA,cAAcA,GAAG;IACf,IAAI,IAAI,CAACzC,UAAU,IAAI,IAAI,CAAC3J,QAAQ,CAACsI,UAAU,EAAE;AAC/C,MAAA,IAAI,CAACtI,QAAQ,CAACsI,UAAU,CAAC/E,GAAG,CAAChB,MAAM,CAACmJ,gBAAgB,CAClD,SAAS,EACRjF,KAAK,IAAK;QACT,IAAI,CAAC0D,YAAY,GAAG,UAAU,CAAA;AAE9B,QAAA,MAAMhK,GAAG,GAAGqG,QAAQ,CAACC,KAAK,CAAC,CAAA;AAE3B,QAAA,IAAItG,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;UACtCyH,YAAY,CAACnB,KAAK,CAAC,CAAA;AACrB,SAAA;AACF,OACF,CAAC,CAAA;AACH,KAAA;AACF,GAAA;AAUA4F,EAAAA,YAAYA,GAAG;IACb,IAAI,IAAI,CAAC1C,UAAU,IAAI,IAAI,CAAC3J,QAAQ,CAACsI,UAAU,EAAE;AAC/C,MAAA,IAAI,CAACtI,QAAQ,CAACsI,UAAU,CAAC/E,GAAG,CAAChB,MAAM,CAACmJ,gBAAgB,CAAC,OAAO,EAAGjF,KAAK,IAAK;QACvE,IAAI,CAAC0D,YAAY,GAAG,UAAU,CAAA;AAE9B,QAAA,MAAMhK,GAAG,GAAGqG,QAAQ,CAACC,KAAK,CAAC,CAAA;AAE3B,QAAA,IAAItG,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;UACtCyH,YAAY,CAACnB,KAAK,CAAC,CAAA;AACnB,UAAA,IAAI,CAACzG,QAAQ,CAACsI,UAAU,CAAC/F,MAAM,EAAE,CAAA;AAGjC,UAAA,IAAI,IAAI,CAACvC,QAAQ,CAACsI,UAAU,CAAC5D,MAAM,EAAE;YACnC,IAAI,CAAC4H,eAAe,EAAE,CAAA;AACxB,WAAA;AACF,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAA;AASAhG,EAAAA,KAAKA,GAAG;IACN,IAAI,CAAChB,UAAU,GAAG,MAAM,CAAA;IAExB,IAAI,IAAI,CAACiB,WAAW,EAAE;AACpB,MAAA,IAAI,CAAChD,GAAG,CAACG,IAAI,CAAC4C,KAAK,EAAE,CAAA;AACvB,KAAA;AACF,GAAA;AASAZ,EAAAA,IAAIA,GAAG;IACL,IAAI,CAACJ,UAAU,GAAG,MAAM,CAAA;IAExB,IAAI,IAAI,CAACiB,WAAW,EAAE;AACpB,MAAA,IAAI,CAAChD,GAAG,CAACG,IAAI,CAACgC,IAAI,EAAE,CAAA;AACtB,KAAA;AACF,GAAA;AAKAwG,EAAAA,iBAAiBA,GAAG;IAClB,IAAI,CAAC5G,UAAU,GAAG,MAAM,CAAA;AAExB,IAAA,IAAI,IAAI,CAACG,YAAY,KAAK,CAAC,CAAC,EAAE;AAC5B,MAAA,IAAI,CAAC2E,eAAe,CAAC9D,KAAK,EAAE,CAAA;AAC9B,KAAA;AACF,GAAA;EAOAoE,UAAUA,CAACH,KAAK,EAAE;IAChB,IAAI,CAACgC,gBAAgB,EAAE,CAAA;IACvB,IAAI,CAAC9G,YAAY,GAAG8E,KAAK,CAAA;IACzB,IAAI,CAAC2B,iBAAiB,EAAE,CAAA;AAC1B,GAAA;AAKAI,EAAAA,eAAeA,GAAG;AAChB,IAAA,IAAI,CAAC5B,UAAU,CAAC,CAAC,CAAC,CAAA;AACpB,GAAA;AAKA8B,EAAAA,cAAcA,GAAG;AACf,IAAA,IAAI,CAAC9B,UAAU,CAAC,IAAI,CAAC1K,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,CAAC,CAAA;AACrD,GAAA;AAKAsI,EAAAA,cAAcA,GAAG;AACf,IAAA,IAAI,IAAI,CAAChH,YAAY,GAAG,IAAI,CAACzF,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,EAAE;MAC1D,IAAI,CAACuG,UAAU,CAAC,IAAI,CAACjF,YAAY,GAAG,CAAC,CAAC,CAAA;AACxC,KAAC,MAAM;MACL,IAAI,CAACyG,iBAAiB,EAAE,CAAA;AAC1B,KAAA;AACF,GAAA;AAKAQ,EAAAA,kBAAkBA,GAAG;AACnB,IAAA,IAAI,IAAI,CAACjH,YAAY,GAAG,CAAC,EAAE;MACzB,IAAI,CAACiF,UAAU,CAAC,IAAI,CAACjF,YAAY,GAAG,CAAC,CAAC,CAAA;AACxC,KAAC,MAAM;MACL,IAAI,CAACyG,iBAAiB,EAAE,CAAA;AAC1B,KAAA;AACF,GAAA;AAKAK,EAAAA,gBAAgBA,GAAG;IACjB,IAAI,CAACjH,UAAU,GAAG,MAAM,CAAA;AAExB,IAAA,IAAI,IAAI,CAACG,YAAY,KAAK,CAAC,CAAC,EAAE;AAC5B,MAAA,IAAI,CAAC2E,eAAe,CAAC1E,IAAI,EAAE,CAAA;AAC7B,KAAA;AACF,GAAA;AAKAiH,EAAAA,eAAeA,GAAG;AAChB,IAAA,IAAI,IAAI,CAACpJ,GAAG,CAAC+E,UAAU,EAAE;MACvB,IAAI,IAAI,CAAC/B,WAAW,EAAE;AACpB,QAAA,IAAI,CAAChD,GAAG,CAAC+E,UAAU,CAAChC,KAAK,EAAE,CAAA;AAC7B,OAAA;MAEA,IAAI,CAAChB,UAAU,GAAG,MAAM,CAAA;AAC1B,KAAA;AACF,GAAA;AAKAsH,EAAAA,cAAcA,GAAG;AACf,IAAA,IAAI,IAAI,CAACrJ,GAAG,CAACgF,SAAS,EAAE;MACtB,IAAI,IAAI,CAAChC,WAAW,EAAE;AACpB,QAAA,IAAI,CAAChD,GAAG,CAACgF,SAAS,CAACjC,KAAK,EAAE,CAAA;AAC5B,OAAA;MAEA,IAAI,CAAChB,UAAU,GAAG,MAAM,CAAA;AAC1B,KAAA;AACF,GAAA;AAKAO,EAAAA,aAAaA,GAAG;AACd,IAAA,IAAI,CAAC7F,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEmB,MAAM,IAAKA,MAAM,CAACiD,KAAK,EAAE,CAAC,CAAA;AAClE,GAAA;AAKAqG,EAAAA,YAAYA,GAAG;IACb,IAAI,CAAC7L,QAAQ,CAACmI,SAAS,CAAC/G,OAAO,CAAEqJ,QAAQ,IAAK;MAC5CA,QAAQ,CAAC/E,IAAI,EAAE,CAAA;MAEf,IAAI+E,QAAQ,CAACpE,aAAa,EAAE;AAC1BoE,QAAAA,QAAQ,CAACzK,QAAQ,CAACiG,SAAS,CAAC4F,YAAY,EAAE,CAAA;AAC5C,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AACF;;AC7uCA,MAAMgB,YAAY,SAAS/G,YAAY,CAAC;EAatC5C,WAAWA,CAAAC,IAAA,EAQR;IAAA,IARS;MACVgD,eAAe;MACfC,eAAe;MACfzD,UAAU;AACV0D,MAAAA,aAAa,GAAG,KAAK;AACrBJ,MAAAA,SAAS,GAAG,IAAI;AAChB1D,MAAAA,MAAM,GAAG,IAAI;AACbe,MAAAA,UAAU,GAAG,IAAA;AACf,KAAC,GAAAH,IAAA,CAAA;AACC,IAAA,KAAK,CAAC;MACJgD,eAAe;MACfC,eAAe;MACfzD,UAAU;MACV0D,aAAa;MACbJ,SAAS;AACT1D,MAAAA,MAAAA;AACF,KAAC,CAAC,CAAA;AAEF,IAAA,IAAIe,UAAU,EAAE;MACd,IAAI,CAACA,UAAU,EAAE,CAAA;AACnB,KAAA;AACF,GAAA;AAUAA,EAAAA,UAAUA,GAAG;IACX,KAAK,CAACA,UAAU,EAAE,CAAA;IAElB,IAAI,CAACC,GAAG,CAACwC,IAAI,CAACvC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC1C,IAAI,CAACD,GAAG,CAACyC,IAAI,CAACxC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;IAC9C,IAAI,CAACD,GAAG,CAACyC,IAAI,CAAC8G,QAAQ,GAAG,CAAC,CAAC,CAAA;AAC7B,GAAA;AASAxG,EAAAA,KAAKA,GAAG;IACN,KAAK,CAACA,KAAK,EAAE,CAAA;AAEb,IAAA,IAAI,CAAC/C,GAAG,CAACyC,IAAI,CAAC8G,QAAQ,GAAG,CAAC,CAAA;AAC5B,GAAA;AASApH,EAAAA,IAAIA,GAAG;IACL,KAAK,CAACA,IAAI,EAAE,CAAA;IAEZ,IAAI,CAACnC,GAAG,CAACyC,IAAI,CAAC8G,QAAQ,GAAG,CAAC,CAAC,CAAA;AAC7B,GAAA;AACF;;AC7EA,MAAMC,cAAc,SAAS1K,cAAc,CAAC;EAW1Ca,WAAWA,CAAAC,IAAA,EAMR;IAAA,IANS;MACVC,iBAAiB;MACjBC,aAAa;MACbX,cAAc;AACdC,MAAAA,UAAU,GAAG,IAAI;AACjBW,MAAAA,UAAU,GAAG,IAAA;AACf,KAAC,GAAAH,IAAA,CAAA;AACC,IAAA,KAAK,CAAC;MACJC,iBAAiB;MACjBC,aAAa;MACbX,cAAc;AACdC,MAAAA,UAAAA;AACF,KAAC,CAAC,CAAA;AAEF,IAAA,IAAIW,UAAU,EAAE;MACd,IAAI,CAACA,UAAU,EAAE,CAAA;AACnB,KAAA;AACF,GAAA;AACF;;ACfA,MAAM0J,QAAQ,SAASjF,QAAQ,CAAC;AAQ9BC,EAAAA,SAAS,GAAGgF,QAAQ,CAAA;AASpB/E,EAAAA,aAAa,GAAG4E,YAAY,CAAA;AAS5B3E,EAAAA,eAAe,GAAG6E,cAAc,CAAA;EAsBhC7J,WAAWA,CAAAC,IAAA,EAgBR;IAAA,IAhBS;MACVgG,WAAW;AACXC,MAAAA,gBAAgB,GAAG,IAAI;AACvBC,MAAAA,gBAAgB,GAAG,GAAG;AACtBC,MAAAA,mBAAmB,GAAG,EAAE;AACxBC,MAAAA,qBAAqB,GAAG,GAAG;AAC3BC,MAAAA,eAAe,GAAG,IAAI;AACtBC,MAAAA,iBAAiB,GAAG,IAAI;AACxBC,MAAAA,gBAAgB,GAAG,IAAI;AACvB1E,MAAAA,SAAS,GAAG,MAAM;AAClBD,MAAAA,UAAU,GAAG,MAAM;AACnB4E,MAAAA,UAAU,GAAG,IAAI;AACjBhH,MAAAA,UAAU,GAAG,IAAI;AACjBiH,MAAAA,SAAS,GAAG,KAAK;AACjBC,MAAAA,UAAU,GAAG,GAAG;AAChBvG,MAAAA,UAAU,GAAG,IAAA;AACf,KAAC,GAAAH,IAAA,CAAA;AACC,IAAA,KAAK,CAAC;MACJgG,WAAW;MACXC,gBAAgB;MAChBC,gBAAgB;MAChBC,mBAAmB;MACnBC,qBAAqB;MACrBC,eAAe;MACfC,iBAAiB;MACjBC,gBAAgB;MAChB1E,SAAS;MACTD,UAAU;MACV4E,UAAU;MACVhH,UAAU;MACViH,SAAS;AACTC,MAAAA,UAAAA;AACF,KAAC,CAAC,CAAA;AAEF,IAAA,IAAIvG,UAAU,EAAE;MACd,IAAI,CAACA,UAAU,EAAE,CAAA;AACnB,KAAA;AACF,GAAA;AAoBAA,EAAAA,UAAUA,GAAG;IACX,IAAI;MACF,KAAK,CAACA,UAAU,EAAE,CAAA;MAElB,IAAI,IAAI,CAACqG,UAAU,EAAE;QACnB,IAAI,CAACpG,GAAG,CAACG,IAAI,CAACF,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAC1C,QAAA,IAAI,CAACxD,QAAQ,CAACmI,SAAS,CAAC,CAAC,CAAC,CAAC5E,GAAG,CAACyC,IAAI,CAAC8G,QAAQ,GAAG,CAAC,CAAA;AAClD,OAAC,MAAM;QACL,IAAI,CAACvJ,GAAG,CAACG,IAAI,CAACF,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AAC7C,OAAA;MAEA,IAAI,CAACiI,YAAY,EAAE,CAAA;MACnB,IAAI,CAACE,YAAY,EAAE,CAAA;MACnB,IAAI,CAACI,YAAY,EAAE,CAAA;MACnB,IAAI,CAACK,cAAc,EAAE,CAAA;MACrB,IAAI,CAACC,YAAY,EAAE,CAAA;KACpB,CAAC,OAAO/L,KAAK,EAAE;AACdC,MAAAA,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAA;AACtB,KAAA;AACF,GAAA;AAeA8L,EAAAA,cAAcA,GAAG;IACf,KAAK,CAACA,cAAc,EAAE,CAAA;IAEtB,IAAI,CAAC7I,GAAG,CAACG,IAAI,CAACgI,gBAAgB,CAAC,SAAS,EAAGjF,KAAK,IAAK;MACnD,IAAI,CAAC0D,YAAY,GAAG,UAAU,CAAA;AAE9B,MAAA,MAAMhK,GAAG,GAAGqG,QAAQ,CAACC,KAAK,CAAC,CAAA;MAE3B,IAAItG,GAAG,KAAK,KAAK,EAAE;QAGjB,IAAI,IAAI,CAACH,QAAQ,CAAC0I,QAAQ,CAACpD,UAAU,KAAK,MAAM,EAAE;AAChD,UAAA,IAAI,CAACtF,QAAQ,CAAC0I,QAAQ,CAAChD,IAAI,EAAE,CAAA;AAC/B,SAAC,MAAM;AACL,UAAA,IAAI,CAAC1F,QAAQ,CAAC0I,QAAQ,CAACpC,KAAK,EAAE,CAAA;AAChC,SAAA;AACF,OAAA;AAEA,MAAA,IAAI,IAAI,CAAChB,UAAU,KAAK,MAAM,EAAE;AAC9B,QAAA,MAAMqB,IAAI,GAAG,CACX,OAAO,EACP,SAAS,EACT,WAAW,EACX,WAAW,EACX,UAAU,EACV,MAAM,EACN,KAAK,CACN,CAAA;AACD,QAAA,MAAMsG,WAAW,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAA;AAC3C,QAAA,MAAMC,cAAc,GAAG,CAAC,QAAQ,CAAC,CAAA;AAEjC,QAAA,IAAIvG,IAAI,CAAClF,QAAQ,CAACtB,GAAG,CAAC,EAAE;UACtByH,YAAY,CAACnB,KAAK,CAAC,CAAA;AACrB,SAAC,MAAM,IACL,IAAI,CAAC2D,eAAe,CAAC/D,aAAa,IAClC4G,WAAW,CAACxL,QAAQ,CAACtB,GAAG,CAAC,EACzB;UACAyH,YAAY,CAACnB,KAAK,CAAC,CAAA;AACrB,SAAC,MAAM,IAAI,IAAI,CAACzG,QAAQ,CAACsI,UAAU,IAAI4E,cAAc,CAACzL,QAAQ,CAACtB,GAAG,CAAC,EAAE;UACnEyH,YAAY,CAACnB,KAAK,CAAC,CAAA;AACrB,SAAA;AACF,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AAyBA4F,EAAAA,YAAYA,GAAG;IACb,KAAK,CAACA,YAAY,EAAE,CAAA;IAEpB,IAAI,CAAC9I,GAAG,CAACG,IAAI,CAACgI,gBAAgB,CAAC,OAAO,EAAGjF,KAAK,IAAK;MACjD,IAAI,CAAC0D,YAAY,GAAG,UAAU,CAAA;AAE9B,MAAA,MAAMhK,GAAG,GAAGqG,QAAQ,CAACC,KAAK,CAAC,CAAA;MAC3B,MAAM;QAAE0G,MAAM;QAAEC,OAAO;AAAEC,QAAAA,OAAAA;AAAQ,OAAC,GAAG5G,KAAK,CAAA;AAC1C,MAAA,MAAM6G,QAAQ,GAAGH,MAAM,IAAIC,OAAO,IAAIC,OAAO,CAAA;AAE7C,MAAA,IAAIlN,GAAG,KAAK,WAAW,IAAI,CAACmN,QAAQ,EAAE;QAKpC1F,YAAY,CAACnB,KAAK,CAAC,CAAA;AACnB,QAAA,IAAI,CAACzG,QAAQ,CAAC0I,QAAQ,CAACyB,YAAY,GAAG,WAAW,CAAA;AACjD,QAAA,IAAI,CAACoD,0BAA0B,CAAC9G,KAAK,CAACtG,GAAG,CAAC,CAAA;AAC5C,OAAC,MAAM,IAAI,IAAI,CAACmF,UAAU,KAAK,MAAM,EAAE;AACrC,QAAA,IAAInF,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;UAItCyH,YAAY,CAACnB,KAAK,CAAC,CAAA;AAEnB,UAAA,IAAI,IAAI,CAAC2D,eAAe,CAAC/D,aAAa,EAAE;YACtC,IAAI,IAAI,CAAC+D,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAAE;cAC/C,IAAI,CAAC0F,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;AAC9C,aAAC,MAAM;cACL,IAAI,CAAC4E,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACgD,OAAO,EAAE,CAAA;AAChD,aAAA;AACF,WAAC,MAAM;YACL,IAAI,CAAC6E,eAAe,CAAC7G,GAAG,CAACyC,IAAI,CAACwH,KAAK,EAAE,CAAA;AACvC,WAAA;AACF,SAAC,MAAM,IAAIrN,GAAG,KAAK,QAAQ,EAAE;AAC3B,UAAA,IACE,IAAI,CAACwJ,UAAU,IACf,IAAI,CAAC3J,QAAQ,CAACsI,UAAU,IACxB,IAAI,CAACtI,QAAQ,CAACsI,UAAU,CAAC5D,MAAM,EAC/B;AACA,YAAA,IAAI,CAAC1E,QAAQ,CAACsI,UAAU,CAAC9C,KAAK,EAAE,CAAA;YAChC,IAAI,CAACmH,eAAe,EAAE,CAAA;AACxB,WAAA;AACF,SAAC,MAAM,IAAIxM,GAAG,KAAK,WAAW,EAAE;UAI9ByH,YAAY,CAACnB,KAAK,CAAC,CAAA;AAEnB,UAAA,IACE,IAAI,CAAC2D,eAAe,CAAC/D,aAAa,IAClC,IAAI,CAAC+D,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAC3C;YACA,IAAI,CAAC6H,gBAAgB,EAAE,CAAA;YACvB,IAAI,CAACnC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACkE,YAAY,GAClD,IAAI,CAACA,YAAY,CAAA;YACnB,IAAI,CAACC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACqG,eAAe,EAAE,CAAA;WAC1D,MAAM,IACL,CAAC,IAAI,CAAC3C,UAAU,IAChB,IAAI,CAAClE,YAAY,KAAK,IAAI,CAACzF,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,EACxD;YACA,IAAI,CAACsJ,qBAAqB,EAAE,CAAA;AAC9B,WAAC,MAAM;YACL,IAAI,CAAChB,cAAc,EAAE,CAAA;AACvB,WAAA;AACF,SAAC,MAAM,IAAItM,GAAG,KAAK,SAAS,EAAE;UAI5ByH,YAAY,CAACnB,KAAK,CAAC,CAAA;AAEnB,UAAA,MAAMiH,gBAAgB,GACpB,IAAI,CAAC1N,QAAQ,CAACmI,SAAS,CAAC,IAAI,CAAC1C,YAAY,GAAG,CAAC,CAAC,CAAA;AAEhD,UAAA,IACEiI,gBAAgB,IAChBA,gBAAgB,CAACrH,aAAa,IAC9BqH,gBAAgB,CAAC1N,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EACvC;YACA,IAAI,CAAC6H,gBAAgB,EAAE,CAAA;AACvB,YAAA,IAAI,CAAC9G,YAAY,GAAG,IAAI,CAACA,YAAY,GAAG,CAAC,CAAA;YACzC,IAAI,CAAC2E,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACkE,YAAY,GAClD,IAAI,CAACA,YAAY,CAAA;YACnB,IAAI,CAACwD,mBAAmB,EAAE,CAAA;AAC5B,WAAC,MAAM,IAAI,CAAC,IAAI,CAAChE,UAAU,IAAI,IAAI,CAAClE,YAAY,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC8G,gBAAgB,EAAE,CAAA;YACvB,IAAI,CAACvM,QAAQ,CAAC2C,UAAU,CAACwH,YAAY,GAAG,IAAI,CAACA,YAAY,CAAA;AACzD,YAAA,IAAI,CAACnK,QAAQ,CAAC2C,UAAU,CAACuJ,iBAAiB,EAAE,CAAA;AAC9C,WAAC,MAAM;YACL,IAAI,CAACQ,kBAAkB,EAAE,CAAA;AAC3B,WAAA;AACF,SAAC,MAAM,IAAIvM,GAAG,KAAK,YAAY,EAAE;AAK/B,UAAA,IAAI,IAAI,CAACiK,eAAe,CAAC/D,aAAa,EAAE;YACtCuB,YAAY,CAACnB,KAAK,CAAC,CAAA;YAEnB,IAAI,IAAI,CAAC2D,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAAE;cAC/C,IAAI,CAAC6H,gBAAgB,EAAE,CAAA;cACvB,IAAI,CAACnC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACkE,YAAY,GAClD,IAAI,CAACA,YAAY,CAAA;cACnB,IAAI,CAACC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACqG,eAAe,EAAE,CAAA;AAC3D,aAAC,MAAM;cACL,IAAI,CAAClC,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACgD,OAAO,EAAE,CAAA;AAChD,aAAA;AACF,WAAA;AACF,SAAC,MAAM,IAAIpF,GAAG,KAAK,WAAW,EAAE;UAK9ByH,YAAY,CAACnB,KAAK,CAAC,CAAA;AAEnB,UAAA,IACE,IAAI,CAAC2D,eAAe,CAAC/D,aAAa,IAClC,IAAI,CAAC+D,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAC3C;YACA,IAAI,CAAC0F,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACsG,gBAAgB,EAAE,CAAA;YAC1D,IAAI,CAACnC,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CAACiD,KAAK,EAAE,CAAA;AAC9C,WAAC,MAAM,IAAI,CAAC,IAAI,CAACmE,UAAU,EAAE;YAC3B,IAAI,CAAC4C,gBAAgB,EAAE,CAAA;YACvB,IAAI,CAACvM,QAAQ,CAAC2C,UAAU,CAACwH,YAAY,GAAG,IAAI,CAACA,YAAY,CAAA;AACzD,YAAA,IAAI,CAACnK,QAAQ,CAAC2C,UAAU,CAACuJ,iBAAiB,EAAE,CAAA;AAC9C,WAAA;AACF,SAAC,MAAM,IAAI/L,GAAG,KAAK,MAAM,EAAE;UAGzByH,YAAY,CAACnB,KAAK,CAAC,CAAA;UACnB,IAAI,CAAC8F,gBAAgB,EAAE,CAAA;AACvB,UAAA,IAAI,CAACvM,QAAQ,CAAC0I,QAAQ,CAAC4D,eAAe,EAAE,CAAA;AAC1C,SAAC,MAAM,IAAInM,GAAG,KAAK,KAAK,EAAE;UAGxByH,YAAY,CAACnB,KAAK,CAAC,CAAA;UACnB,IAAI,CAAC8F,gBAAgB,EAAE,CAAA;AACvB,UAAA,IAAI,CAACvM,QAAQ,CAAC0I,QAAQ,CAACkF,aAAa,EAAE,CAAA;AACxC,SAAC,MAAM,IAAIzN,GAAG,KAAK,UAAU,EAAE;UAI7ByH,YAAY,CAACnB,KAAK,CAAC,CAAA;UACnB,IAAI,CAACoH,YAAY,EAAE,CAAA;AACrB,SAAA;AACF,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AAOAD,EAAAA,aAAaA,GAAG;IACd,MAAME,aAAa,GAAG,IAAI,CAAC9N,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,CAAA;IACxD,MAAM4J,SAAS,GAAG,IAAI,CAAC/N,QAAQ,CAACmI,SAAS,CAAC2F,aAAa,CAAC,CAAA;IAExD,IAAIC,SAAS,CAAC1H,aAAa,IAAI0H,SAAS,CAAC/N,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAAE;MAC/D,IAAI,CAACe,YAAY,GAAGqI,aAAa,CAAA;MACjCC,SAAS,CAAC/N,QAAQ,CAACiG,SAAS,CAACkE,YAAY,GAAG,IAAI,CAACA,YAAY,CAAA;AAC7D4D,MAAAA,SAAS,CAAC/N,QAAQ,CAACiG,SAAS,CAAC2H,aAAa,EAAE,CAAA;AAC9C,KAAC,MAAM;MACL,IAAI,CAACpB,cAAc,EAAE,CAAA;AACvB,KAAA;AACF,GAAA;AAKAqB,EAAAA,YAAYA,GAAG;AACb,IAAA,IAAI,CAAC7N,QAAQ,CAAC4F,cAAc,CAACxE,OAAO,CAAEmB,MAAM,IAAKA,MAAM,CAACgD,OAAO,EAAE,CAAC,CAAA;AACpE,GAAA;EAWAgI,0BAA0BA,CAACS,IAAI,EAAE;IAO/B,SAASC,gBAAgBA,CAACvK,IAAI,EAAE;MAC9B,IAAIyE,SAAS,GAAG,EAAE,CAAA;MAElBzE,IAAI,CAAC1D,QAAQ,CAACmI,SAAS,CAAC/G,OAAO,CAAEqJ,QAAQ,IAAK;AAC5CtC,QAAAA,SAAS,CAACqD,IAAI,CAACf,QAAQ,CAAC,CAAA;QAExB,IAAIA,QAAQ,CAACpE,aAAa,IAAIoE,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACmC,MAAM,EAAE;AAC7DyD,UAAAA,SAAS,GAAG,CACV,GAAGA,SAAS,EACZ,GAAG8F,gBAAgB,CACjBxD,QAAQ,CAACzK,QAAQ,CAACuC,MAAM,CAACvC,QAAQ,CAAC0C,cACpC,CAAC,CACF,CAAA;AACH,SAAA;AACF,OAAC,CAAC,CAAA;AAEF,MAAA,OAAOyF,SAAS,CAAA;AAClB,KAAA;AAGA,IAAA,MAAMZ,KAAK,GAAGyG,IAAI,CAAC7L,WAAW,EAAE,CAAA;IAEhC,MAAMgG,SAAS,GAAG8F,gBAAgB,CAAC,IAAI,CAACjO,QAAQ,CAAC0I,QAAQ,CAAC,CAAA;IAC1D,MAAMwF,WAAW,GAAG/F,SAAS,CAACgG,OAAO,CAAC,IAAI,CAAC/D,eAAe,CAAC,GAAG,CAAC,CAAA;IAC/D,MAAMgE,eAAe,GAAG,CACtB,GAAGjG,SAAS,CAAC3D,KAAK,CAAC0J,WAAW,CAAC,EAC/B,GAAG/F,SAAS,CAAC3D,KAAK,CAAC,CAAC,EAAE0J,WAAW,CAAC,CACnC,CAAA;IACD,IAAIG,GAAG,GAAG,CAAC,CAAA;IACX,IAAI7D,KAAK,GAAG,KAAK,CAAA;IAEjB,OAAO,CAACA,KAAK,IAAI6D,GAAG,GAAGD,eAAe,CAACjK,MAAM,EAAE;MAC7C,IAAImK,IAAI,GAAG,EAAE,CAAA;MAIb,IAAIF,eAAe,CAACC,GAAG,CAAC,CAAC9K,GAAG,CAACwC,IAAI,CAAC9B,SAAS,EAAE;QAC3CqK,IAAI,GAAGF,eAAe,CAACC,GAAG,CAAC,CAAC9K,GAAG,CAACwC,IAAI,CAAC9B,SAAS,CAAA;AAChD,OAAC,MAAM;QACLqK,IAAI,GAAGF,eAAe,CAACC,GAAG,CAAC,CAAC9K,GAAG,CAACwC,IAAI,CAACwI,WAAW,CAAA;AAClD,OAAA;AAGAD,MAAAA,IAAI,GAAGA,IAAI,CAACvK,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC5B,WAAW,EAAE,CAACqM,MAAM,CAAC,CAAC,CAAC,CAAA;MAGxD,IAAIF,IAAI,KAAK/G,KAAK,EAAE;AAClBiD,QAAAA,KAAK,GAAG,IAAI,CAAA;QACZ,MAAM9G,IAAI,GAAG0K,eAAe,CAACC,GAAG,CAAC,CAACrO,QAAQ,CAAC2C,UAAU,CAAA;AACrD,QAAA,MAAM4H,KAAK,GAAG7G,IAAI,CAAC1D,QAAQ,CAACmI,SAAS,CAACgG,OAAO,CAACC,eAAe,CAACC,GAAG,CAAC,CAAC,CAAA;AACnE,QAAA,IAAI,CAACrO,QAAQ,CAAC0I,QAAQ,CAACmD,YAAY,EAAE,CAAA;AACrCnI,QAAAA,IAAI,CAACgH,UAAU,CAACH,KAAK,CAAC,CAAA;AACxB,OAAA;AAEA8D,MAAAA,GAAG,EAAE,CAAA;AACP,KAAA;AACF,GAAA;AAOAZ,EAAAA,qBAAqBA,GAAG;AACtB,IAAA,IAAI,CAAC,IAAI,CAACzN,QAAQ,CAAC2C,UAAU,EAAE,OAAA;IAE/B,IAAI,CAAC3C,QAAQ,CAAC2C,UAAU,CAACwH,YAAY,GAAG,IAAI,CAACA,YAAY,CAAA;IAEzD,IACE,IAAI,CAACnK,QAAQ,CAAC2C,UAAU,CAAC8C,YAAY,KACrC,IAAI,CAACzF,QAAQ,CAAC2C,UAAU,CAAC3C,QAAQ,CAACmI,SAAS,CAAChE,MAAM,GAAG,CAAC,EACtD;AACA,MAAA,IAAI,CAACnE,QAAQ,CAAC2C,UAAU,CAAC4J,gBAAgB,EAAE,CAAA;AAC3C,MAAA,IAAI,CAACvM,QAAQ,CAAC2C,UAAU,CAAC8K,qBAAqB,EAAE,CAAA;AAClD,KAAC,MAAM;MACL,IAAI,CAAC5B,YAAY,EAAE,CAAA;AACnB,MAAA,IAAI,CAAC7L,QAAQ,CAAC2C,UAAU,CAAC8J,cAAc,EAAE,CAAA;AAC3C,KAAA;AACF,GAAA;AAOAkB,EAAAA,mBAAmBA,GAAG;IACpB,IAAI,CAACvD,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACkE,YAAY,GAAG,IAAI,CAACA,YAAY,CAAA;IACxE,IAAI,CAACC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACuG,cAAc,EAAE,CAAA;IAExD,IACE,IAAI,CAACpC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACmE,eAAe,CAAC/D,aAAa,IACrE,IAAI,CAAC+D,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACmE,eAAe,CAACpK,QAAQ,CAACuC,MAAM,CACpEmC,MAAM,EACT;MACA,IAAI,CAAC0F,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAACsG,gBAAgB,EAAE,CAAA;MAC1D,IAAI,CAACnC,eAAe,CAACpK,QAAQ,CAACiG,SAAS,CAAC0H,mBAAmB,EAAE,CAAA;AAC/D,KAAA;AACF,GAAA;AACF;;;;"}