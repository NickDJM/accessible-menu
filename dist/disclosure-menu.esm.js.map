{"version":3,"file":"disclosure-menu.esm.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string,string[]>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string}                tagName  - The name of the tag.\n * @param   {object.<HTMLEelement>} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a [BaseMenu]{@link BaseMenu.md}.\n */\nclass BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    /**\n     * Expand event.\n     *\n     * @event accessibleMenuExpand\n     * @type {CustomEvent}\n     * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n     */\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    /**\n     * Collapse event.\n     *\n     * @event accessibleMenuCollapse\n     * @type {CustomEvent}\n     * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n     */\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set, handling click events, and adding new keydown events.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup` set to `\"true\"`, `aria-expanded` initially set to `\"false\"` and, if the toggle element is not a `<button>`, set the `role` to `\"button\"`.\n   *\n   * The next step to the initialization is to ensure both the toggle and the menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's \"aria-labelledby\" is set to the toggle's ID, and the toggle's \"aria-controls\" is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @type {object.<HTMLElement>}\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @type {object.<BaseMenu>}\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @type {boolean}\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to `\"true\"`, adds the open class to the toggle's parent menu item and controlled menu, and removed the closed class from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event called `accessibleMenuExpand` which bubbles and contains the toggle object in `event.detail`.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   * @fires accessibleMenuExpand\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to `\"false\"`, adds the closed class to the toggle's parent menu item and controlled menu, and removed the open class from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event called `accessibleMenuCollapse` which bubbles and contains the toggle object in `event.detail`.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   * @fires accessibleMenuCollapse\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's focus state to `\"self\"` and the parent menu's focus state to `\"child\"`,\n   * calls {@link expand}, and sets {@link isOpen} to `true`.\n   */\n  open() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's focus state to `\"self\"` and the parent menu's focus state to `\"child\"`, and calls {@link expand}\n   */\n  preview() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's focus state to `\"none\"` and the parent menu's focus state to `\"self\"`,\n   * blurs the controlled menus and sets it's current child index to 0,\n   * calls {@link collapse}, and sets {@link isOpen} to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states to parent & child.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      this.elements.controlledMenu.focusState = \"none\";\n\n      // Collapse the controlled menu.\n      this.collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a [BaseMenu]{@link BaseMenu.md}.\n */\nclass BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {object.<HTMLElement>}\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle>}\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on it's own in the DOM.\n * Use a [DisclosureMenu]{@link DisclosureMenu.md}, [Menubar]{@link Menubar.md}, or [Treeview]{@link Treeview.md} instead.\n */\nclass BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   *\n   * @throws {Error} Will throw an Error if the validate method returns `false`.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @type {object.<HTMLElement,HTMLElement[]>}\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @type {object.<string>}\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @type {boolean}\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * - Attempting to set a value < -1 will set the `currentChild` to -1.\n   * - Attempting to set a value >= the number of menu items will set the `currentChild` to the number of menu items - 1.\n   *\n   * If the current menu has a parent menu _and_ the menu's current event is `\"mouse\"`,\n   * The parent menu will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @type {string}\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @type {string}\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * Will return false unless any of the following criteria are met:\n   * - The menu's `currentEvent` is `\"keyboard\"`.\n   * - The menu's `currentEvent` is `\"character\"`.\n   * - The menu's `currentEvent` is `\"mouse\"` _and_ the menu's `hoverType` is `\"dynamic\"`.\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this.submenuOpenClass !== value) {\n      this.submenuOpenClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this.submenuCloseClass !== value) {\n      this.submenuCloseClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this.focussedChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this.focussedChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this.focussedChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this.state !== value) {\n      this.state = value;\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this.event !== value) {\n      this.event = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this.hover !== value) {\n      this.hover = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this.delay !== value) {\n      this.delay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuOpenClass !== \"\" &&\n      !isValidClassList({ openClass: submenuOpenClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuCloseClass !== \"\" &&\n      !isValidClassList({ closeClass: submenuCloseClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * This will set the actual `domElement` property, so all existing items in a given `domElement` property will be removed when this is run.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * This is an additive function, so existing items in a given `domElement` property will not be touched.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link setDOMElementType}, {@link clearDOMElementType}, and {@link addDOMElementType}.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus, it will set the item's containing menu to a \"self\" focus state, any parent menu to a \"child\" focus state, and any child menu to a \"none\" focus state.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * Depending on what is supported either `touchstart` and `touchend` or `mousedown` and `mouseup` will be used for all \"click\" event handling.\n   *\n   * - Adds a `touchend`/`mouseup` listener to the document so if the user clicks outside of the menu when it is open, the menu will close.\n   * - Adds a `touchstart`/`mousedown` listener to every menu item that will blur all menu items in the entire menu structure (starting at the root menu) and then properly focus the clicked item.\n   * - Adds a `touchend`/`mouseup` listener to every submenu item that will properly toggle the submenu open/closed.\n   * - Adds a `touchend`/`mouseup` listener to the menu's controller (if the menu is the root menu) so when it is clicked it will properly toggle open/closed.\n   */\n  handleClick() {\n    // Use touch over mouse events when supported.\n    const startEventType = isEventSupported(\"touchstart\", this.dom.menu)\n      ? \"touchstart\"\n      : \"mousedown\";\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(startEventType, () => {\n        this.currentEvent = \"mouse\";\n        this.elements.rootMenu.blurChildren();\n        this.focusChild(index);\n      });\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle[`on${endEventType}`] = (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, item.elements.toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle[`on${endEventType}`] = (event) => {\n        this.currentEvent = \"mouse\";\n        toggleToggle(this, this.elements.controller, event);\n      };\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `mouseenter` listeners to all menu items and `mouseleave` listeners to all submenu items which function differently depending on the menu's {@link hoverType}.\n   *\n   * **Hover Type \"on\"**\n   * - When a `mouseenter` event triggers on any menu item the menu's {@link currentChild} value will change to that menu item.\n   * - When a `mouseenter` event triggers on a submenu item the `preview()` method for the submenu item's toggle will be called.\n   * - When a `mouseleave` event triggers on an open submenu item the `close()` method for the submenu item's toggle will be called after a delay set by the menu's {@link hoverDelay}.\n   *\n   * **Hover Type \"dynamic\"**\n   * - When a `mouseenter` event triggers on any menu item the menu's {@link currentChild} value will change to that menu item.\n   * - When a `mouseenter` event triggers on any menu item, and the menu's {@link focusState} is not `\"none\"`, the menu item will be focused.\n   * - When a `mouseenter` event triggers on a submenu item, and a submenu is already open, the `preview()` method for the submenu item's toggle will be called.\n   * - When a `mouseenter` event triggers on a submenu item, and no submenu is open, no submenu-specific methods will be called.\n   * - When a `mouseleave` event triggers on an open submenu item that is not a root-level submenu item the `close()` method for the submenu item's toggle will be called and the submenu item will be focused after a delay set by the menu's {@link hoverDelay}.\n   * - When a `mouseleave` event triggers on an open submenu item that is a root-level submenu item no submenu-specific methods will be called.\n   *\n   * **Hover Type \"off\"**\n   * All `mouseenter` and `mouseleave` events are ignored.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link handleKeyup} method.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on `Space`, `Enter`, and `Escape` keys.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Opens the menu when the user hits `Space` or `Enter`.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link focusState} to `\"self\"` and focusses the menu if the menu's {@link shouldFocus} vallue is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link focusState} to `\"none\"` and blurs the menu if the menu's {@link shouldFocus} vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a [DisclosureMenu]{@link DisclousreMenu.md}.\n *\n * @extends BaseMenuItem\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                    options                         - The options for generating the menu item.\n   * @param {HTMLElement}               options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                   [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a [DisclosureMenu]{@link DisclousreMenu.md}.\n *\n * @extends BaseMenuToggle\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}              options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}         options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         options.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType, isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html|Example Disclosure for Navigation Menus}\n *\n * @extends BaseMenu\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                              - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                  - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]      - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]       - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]        - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a]  - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]       - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]   - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]    - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]           - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]          - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]         - A flag to mark the root menu.\n   * @param {(DisclosureMenu|null)}  [options.parentMenu = null]          - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]            - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]           - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.optionalKeySupport = false] - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                [options.initialize = true]          - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = DisclosureMenu;\n    this.MenuItemType = DisclosureMenuItem;\n    this.MenuToggleType = DisclosureMenuToggle;\n\n    this.currentChild = -1;\n    this.optionalKeySupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this.optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this.optionalSupport = value;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","emit","closeClass","openClass","classList","add","remove","dispatchEvent","focusState","expand","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","shouldFocus","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","findRootMenu","setDOMElements","createChildElements","setParentChild","updateEvents","currentEvent","index","found","menuItem","focusChild","submenuToggle","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","setDOMElementType","clearDOMElementType","addDOMElementType","toggler","submenu","push","addEventListener","startEventType","endEventType","toggleToggle","blurChildren","preview","some","focusCurrentChild","setTimeout","focusFirstChild","currentMenuItem","blurCurrentChild","DisclosureMenuItem","initialize","DisclosureMenuToggle","closeSiblings","closeChildren","DisclosureMenu","optionalKeySupport","optionalSupport","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","focusController","focusNextChild","focusPreviousChild","focusLastChild"],"mappings":"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"}