{"version":3,"file":"menubar.esm.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  isValidType(\"string\", { event });\n  isValidInstance(HTMLElement, { element });\n\n  const eventProp = `on${event}`;\n\n  return typeof element[eventProp] !== \"undefined\";\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}        param0                     - The menu toggle object.\n   * @param {HTMLElement}   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   param0.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states to parent & child.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      this.elements.controlledMenu.focusState = \"none\";\n\n      // Collapse the controlled menu.\n      this.collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * Will return false unless any of the following criteria are met:\n   * - The menu's currentEvent is \"keyboard\".\n   * - The menu's currentEvent is \"mouse\" _and_ the menu's hoverType is \"dynamic\".\n   *\n   * @returns {boolean} - The flag.\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    this.submenuOpenClass = value;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    this.submenuCloseClass = value;\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * - Attempting to set a value < -1 will set the currentChild to -1.\n   * - Attempting to set a value >= the number of menu items will set the currentChild to the number of menu items - 1.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    if (value < -1) {\n      this.focussedChild = -1;\n    } else if (value >= this.elements.menuItems.length) {\n      this.focussedChild = this.elements.menuItems.length - 1;\n    } else {\n      this.focussedChild = value;\n    }\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    this.state = value;\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this.elements.submenuToggles.length > 0) {\n      this.elements.submenuToggles.forEach((submenuToggle) => {\n        submenuToggle.elements.controlledMenu.currentEvent = value;\n      });\n    }\n\n    this.event = value;\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    this.hover = value;\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    this.delay = value;\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (submenuOpenClass !== \"\" && !isValidClassList({ submenuOpenClass })) {\n      check = false;\n    }\n\n    if (submenuCloseClass !== \"\" && !isValidClassList({ submenuCloseClass })) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    // Use touchend over mouseup when supported.\n    const eventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(eventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n\n    this.elements.menuItems.forEach((item, index) => {\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle[`on${eventType}`] = (event) => {\n          this.currentEvent = \"mouse\";\n          this.focusChild(index);\n          toggleToggle(this, item.elements.toggle, event);\n        };\n      } else {\n        item.dom.link.addEventListener(eventType, () => {\n          this.currentEvent = \"mouse\";\n          this.focusChild(index);\n        });\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle[`on${eventType}`] = (event) => {\n        this.currentEvent = \"mouse\";\n        toggleToggle(this, this.elements.controller, event);\n      };\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Menubar.\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}             param0                         - The menu item object.\n   * @param {HTMLElement}        param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            param0.parentMenu              - The parent menu.\n   * @param {boolean}            [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [param0.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}            [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item by setting its role and tab index.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link and set proper tabIndex.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link and set proper tabIndex.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Menubar.\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}       param0                     - The menu toggle object.\n   * @param {HTMLElement}  param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}  param0.parentElement       - The element containing the controlled menu.\n   * @param {Menubar}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {Menubar|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}      [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html\n */\nclass Menubar extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}           param0                               - The menu object.\n   * @param {HTMLElement}      param0.menuElement                   - The menu element in the DOM.\n   * @param {string}           [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}           [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}           [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}           [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}           [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null} [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null} [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}           [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}           [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}          [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Menubar|null}     [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}           [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}           [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}          [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    this.MenuType = Menubar;\n    this.MenuItemType = MenubarItem;\n    this.MenuToggleType = MenubarToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.dom.menu.setAttribute(\"role\", \"menubar\");\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n\n      this.elements.menuItems[0].dom.link.tabIndex = 0;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            } else {\n              this.currentMenuItem.dom.link.click();\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              (toggle) => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    // If the current child is the last child of the menu, focus the menu's first child.\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.focusChild(this.currentChild + 1);\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    // If the current child is the first child of the menu, focus the menu's last child.\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.focusChild(this.currentChild - 1);\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      // Ensure the text in the item is lowercase just to be safe.\n      const text = this.elements.menuItems[\n        index\n      ].dom.item.innerText.toLowerCase();\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text.startsWith(match)) {\n        found = true;\n        this.focusChild(index);\n      }\n\n      index++;\n    }\n  }\n}\n\nexport default Menubar;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","emit","closeClass","openClass","classList","add","remove","dispatchEvent","closeSiblings","focusState","expand","closeChildren","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","shouldFocus","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","Error","findRootMenu","setDOMElements","createChildElements","submenuToggle","currentEvent","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","setDOMElementType","clearDOMElementType","addDOMElementType","menuItem","toggler","submenu","push","index","addEventListener","eventType","toggleToggle","contains","target","focusChild","preview","some","focusCurrentChild","setTimeout","focusFirstChild","currentMenuItem","blurCurrentChild","MenubarItem","tabIndex","MenubarToggle","Menubar","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","submenuKeys","controllerKeys","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","click","previousChildOpen","focusNextChild","focusPreviousChild","focusLastChild","hasOpenChild","focusController","char","found","text"],"mappings":"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"}