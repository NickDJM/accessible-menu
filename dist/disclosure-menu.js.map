{"version":3,"file":"disclosure-menu.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {object}  contructor - The constructor to check for.\n * @param  {object}  elements   - The element(s) to check.\n * @return {boolean}            - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {string}  type   - The type to check for.\n * @param  {object}  values - The value(s) to check.\n * @return {boolean}        - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {object.<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {object.<string,string[]>} values - The value(s) to check.\n * @return {boolean}                         - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {object.<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {object.<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {object.<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param  {string}               tagName  - The name of the tag.\n * @param  {object.<HTMLElement>} elements - The element(s) to check.\n * @return {boolean}                       - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param  {string}      event   - The event type.\n * @param  {HTMLElement} element - The element to check.\n * @return {boolean}             - The result.\n *\n * @deprecated Will be removed in v4 unless there is a new found need for it.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * The DOM elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {object.<HTMLElement>}\n   *\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  _dom = {\n    toggle: null,\n    parent: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {object.<BaseMenu>}\n   *\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  _elements = {\n    controlledMenu: null,\n    parentMenu: null,\n  };\n\n  /**\n   * The open state of the menu toggle.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _open = false;\n\n  /**\n   * Expand event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuExpand\n   *\n   * @type {CustomEvent}\n   *\n   * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Collapse event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuCollapse\n   *\n   * @type {CustomEvent}\n   *\n   * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Set DOM elements.\n    this._dom.toggle = menuToggleElement;\n    this._dom.parent = parentElement;\n\n    // Set menu elements.\n    this._elements.controlledMenu = controlledMenu;\n    this._elements.parentMenu = parentMenu;\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this._collapse(false);\n  }\n\n  /**\n   * Get the DOM elements within the toggle.\n   *\n   * @readonly\n   *\n   * @type {object.<HTMLElement>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * Get the declared accessible-menu elements within the menu toggle.\n   *\n   * @readonly\n   *\n   * @type {object.<BaseMenu>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * Get the open state on the menu.\n   *\n   * @type {boolean}\n   *\n   * @see _open\n   */\n  get isOpen() {\n    return this._open;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this._open = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuExpand\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  _expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuCollapse\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  _collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this._collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {object.<HTMLElement>}\n   *\n   * @protected\n   *\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  _dom = {\n    item: null,\n    link: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n  };\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  _submenu = false;\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Set DOM elements.\n    this._dom.item = menuItemElement;\n    this._dom.link = menuLinkElement;\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n\n    this._submenu = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {object.<HTMLElement>}\n   *\n   * @readonly\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle>}\n   *\n   * @readonly\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   *\n   * @readonly\n   *\n   * @see _submenu\n   */\n  get isSubmenuItem() {\n    return this._submenu;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n * @return  {string}              - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenu}\n   */\n  _MenuType = BaseMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuItem}\n   */\n  _MenuItemType = BaseMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuToggle}\n   */\n  _MenuToggleType = BaseMenuToggle;\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @protected\n   *\n   * @type {object.<HTMLElement,HTMLElement[]>}\n   *\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  _dom = {\n    menu: null,\n    menuItems: [],\n    submenuItems: [],\n    submenuToggles: [],\n    submenus: [],\n    controller: null,\n    container: null,\n  };\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @protected\n   *\n   * @type {object.<string>}\n   *\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  _selectors = {\n    menuItems: \"\",\n    menuLinks: \"\",\n    submenuItems: \"\",\n    submenuToggles: \"\",\n    submenus: \"\",\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @protected\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\n   *\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  _elements = {\n    menuItems: [],\n    submenuToggles: [],\n    controller: null,\n    parentMenu: null,\n    rootMenu: null,\n  };\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _openClass = \"show\";\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _closeClass = \"hide\";\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _root = true;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = 0;\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _focusState = \"none\";\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _currentEvent = \"none\";\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _hoverType = \"off\";\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _hoverDelay = 250;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Set DOM elements.\n    this._dom.menu = menuElement;\n    this._dom.controller = controllerElement;\n    this._dom.container = containerElement;\n\n    // Set DOM selectors.\n    this._selectors.menuItems = menuItemSelector;\n    this._selectors.menuLinks = menuLinkSelector;\n    this._selectors.submenuItems = submenuItemSelector;\n    this._selectors.submenuToggles = submenuToggleSelector;\n    this._selectors.submenus = submenuSelector;\n\n    // Set menu elements.\n    this._elements.menuItems = [];\n    this._elements.submenuToggles = [];\n    this._elements.controller = null;\n    this._elements.parentMenu = parentMenu;\n    this._elements.rootMenu = isTopLevel ? this : null;\n\n    // Set open/close classes.\n    this._openClass = openClass || \"\";\n    this._closeClass = closeClass || \"\";\n\n    // Set root.\n    this._root = isTopLevel;\n\n    // Set hover settings.\n    this._hoverType = hoverType;\n    this._hoverDelay = hoverDelay;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this._validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\n      );\n    }\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this._setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this._elements.controller = toggle;\n      }\n    }\n\n    this._createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {object.<HTMLElement,HTMLElement[]>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @readonly\n   *\n   * @type {object.<string>}\n   *\n   * @see _selectors\n   */\n  get selectors() {\n    return this._selectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * The flag marking the root menu.\n   *\n   * @readonly\n   *\n   * @type {boolean}\n   *\n   * @see _root\n   */\n  get isTopLevel() {\n    return this._root;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _openClass\n   */\n  get openClass() {\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _closeClass\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this._closeClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   *\n   * @see _currentChild\n   */\n  get currentChild() {\n    return this._currentChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   *\n   * @see _focusState\n   */\n  get focusState() {\n    return this._focusState;\n  }\n\n  /**\n   * The last event triggered on the menu.\n   *\n   * @type {string}\n   *\n   * @see _currentEvent\n   */\n  get currentEvent() {\n    return this._currentEvent;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   *\n   * @see _hoverType\n   */\n  get hoverType() {\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   *\n   * @see _hoverDelay\n   */\n  get hoverDelay() {\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu_hoverTypeType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this._openClass !== value) {\n      this._openClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this._closeClass !== value) {\n      this._closeClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this._currentChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this._currentChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this._currentChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this._focusState !== value) {\n      this._focusState = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this._currentEvent !== value) {\n      this._currentEvent = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this._hoverType !== value) {\n      this._hoverType = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this._hoverDelay !== value) {\n      this._hoverDelay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = true;\n\n    if (this._dom.container !== null || this._dom.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: this._dom.menu,\n          controllerElement: this._dom.controller,\n          containerElement: this._dom.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: this._dom.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (this._selectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: this._selectors.menuItems,\n          menuLinkSelector: this._selectors.menuLinks,\n          submenuItemSelector: this._selectors.submenuItems,\n          submenuToggleSelector: this._selectors.submenuToggles,\n          submenuSelector: this._selectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: this._selectors.menuItems,\n        menuLinkSelector: this._selectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._openClass !== \"\" &&\n      !isValidClassList({ openClass: this._openClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._closeClass !== \"\" &&\n      !isValidClassList({ closeClass: this._closeClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\n      check = false;\n    }\n\n    if (\n      this._elements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be set through this method.\n   *\n   * @protected\n   *\n   * @param {string}      elementType            - The type of element to populate.\n   * @param {HTMLElement} [base = this.dom.menu] - The element used as the base for the querySelect.\n   * @param {boolean}     [overwrite = true]     - A flag to set if the existing elements will be overwritten.\n   */\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\n        );\n      }\n\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\n\n      // Get the all elements matching the selector in the base.\n      const domElements = Array.from(\n        base.querySelectorAll(this.selectors[elementType])\n      );\n\n      // Filter the elements so only direct children of the base are kept.\n      const filteredElements = domElements.filter(\n        (item) => item.parentElement === base\n      );\n\n      if (overwrite) {\n        this._dom[elementType] = filteredElements;\n      } else {\n        this._dom[elementType] = [\n          ...this._dom[elementType],\n          ...filteredElements,\n        ];\n      }\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Resets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be reset through this method.\n   *\n   * @protected\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  _resetDOMElementType(elementType) {\n    if (typeof this.dom[elementType] !== \"undefined\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\n        );\n      }\n\n      this._dom[elementType] = [];\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\n   *\n   * @protected\n   */\n  _setDOMElements() {\n    this._setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this._setDOMElementType(\"submenuItems\");\n\n      this._resetDOMElementType(\"submenuToggles\");\n      this._resetDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this._setDOMElementType(\"submenuToggles\", item, false);\n        this._setDOMElementType(\"submenus\", item, false);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @protected\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  _findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this._elements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this._findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   *\n   * @protected\n   */\n  _handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds a `pointerdown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `pointerup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `pointerup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   *\n   * @protected\n   */\n  _handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(\n        \"pointerdown\",\n        () => {\n          this.currentEvent = \"mouse\";\n          this.elements.rootMenu.blurChildren();\n          this.focusChild(index);\n        },\n        { passive: true }\n      );\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle.addEventListener(\n          \"pointerup\",\n          (event) => {\n            this.currentEvent = \"mouse\";\n            toggleToggle(this, item.elements.toggle, event);\n          }\n        );\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"pointerup\",\n        (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, this.elements.controller, event);\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Opens the menu when the user hits \"Space\" or \"Enter\".\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link DisclosureMenu}.\n *\n * @extends BaseMenuItem\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}                    options                         - The options for generating the menu item.\n   * @param {HTMLElement}               options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                   [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link DisclosureMenu}.\n *\n * @extends BaseMenuToggle\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}              options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}         options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         options.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html|Example Disclosure for Navigation Menus}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { DisclosureMenu } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new DisclosureMenu({\n *   menuElement,\n * });\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenu}\n   */\n  _MenuType = DisclosureMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuItem}\n   */\n  _MenuItemType = DisclosureMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof DisclosureMenuToggle}\n   */\n  _MenuToggleType = DisclosureMenuToggle;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = -1;\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _optionalSupport = false;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                              - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                  - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]      - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]       - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]        - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a]  - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]       - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]   - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]    - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]           - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]          - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]         - A flag to mark the root menu.\n   * @param {(DisclosureMenu|null)}  [options.parentMenu = null]          - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]            - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]           - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.optionalKeySupport = false] - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                [options.initialize = true]          - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set optional key support.\n    this._optionalSupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link DisclosureMenu#_handleFocus|focus},\n   * {@link DisclosureMenu#_handleClick|click},\n   * {@link DisclosureMenu#_handleHover|hover},\n   * {@link DisclosureMenu#_handleKeydown|keydown}, and\n   * {@link DisclosureMenu#_handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   *\n   * @see _optionalSupport\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this._optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this._optionalSupport = value;\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = super._validate();\n\n    if (\n      !isValidType(\"boolean\", { optionalKeySupport: this._optionalSupport })\n    ) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link DisclosureMenu#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link DisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link DisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","toggle","parent","CustomEvent","bubbles","detail","_dom","_elements","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","_open","emit","closeClass","openClass","classList","add","remove","dispatchEvent","_expandEvent","_collapseEvent","focusState","_expand","isOpen","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","_submenu","shouldFocus","focus","keyPress","event","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","menuLinks","rootMenu","_selectors","_openClass","_closeClass","_root","_hoverType","_hoverDelay","_validate","_findRootMenu","_setDOMElements","_MenuToggleType","_createChildElements","_currentChild","setParentChild","updateEvents","currentEvent","index","found","menuItem","focusChild","_focusState","_currentEvent","submenuToggle","base","overwrite","selectors","domElements","from","querySelectorAll","filteredElements","filter","_setDOMElementType","_resetDOMElementType","element","toggler","submenu","_MenuType","push","_MenuItemType","addEventListener","toggleToggle","blurChildren","passive","pointerType","preview","some","focusCurrentChild","setTimeout","focusFirstChild","currentMenuItem","blurCurrentChild","DisclosureMenuItem","initialize","DisclosureMenuToggle","closeSiblings","closeChildren","DisclosureMenu","optionalKeySupport","_optionalSupport","_handleFocus","_handleClick","_handleHover","_handleKeydown","_handleKeyup","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","focusController","focusNextChild","focusPreviousChild","focusLastChild"],"mappings":"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"}