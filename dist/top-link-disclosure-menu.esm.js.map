{"version":3,"file":"top-link-disclosure-menu.esm.js","sources":["../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/topLinkDisclosureMenuItem.js","../src/topLinkDisclosureMenuToggle.js","../src/topLinkDisclosureMenu.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {object}  contructor - The constructor to check for.\n * @param  {object}  elements   - The element(s) to check.\n * @return {boolean}            - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param  {string}  type   - The type to check for.\n * @param  {object}  values - The value(s) to check.\n * @return {boolean}        - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string, string[]>} values - The value(s) to check.\n * @return {boolean}                         - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param  {Object<string>} values - The value(s) to check.\n * @return {boolean}                - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param  {string}               tagName  - The name of the tag.\n * @param  {Object<HTMLElement>} elements - The element(s) to check.\n * @return {boolean}                       - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param  {string}      event   - The event type.\n * @param  {HTMLElement} element - The element to check.\n * @return {boolean}             - The result.\n *\n * @deprecated Will be removed in v4 unless there is a new found need for it.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * The DOM elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  _dom = {\n    toggle: null,\n    parent: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  _elements = {\n    controlledMenu: null,\n    parentMenu: null,\n  };\n\n  /**\n   * The open state of the menu toggle.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _open = false;\n\n  /**\n   * Expand event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuExpand\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Collapse event.\n   *\n   * @protected\n   *\n   * @event accessibleMenuCollapse\n   *\n   * @type {CustomEvent}\n   *\n   * @property {Object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n   */\n  _collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n    bubbles: true,\n    detail: { toggle: this },\n  });\n\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Set DOM elements.\n    this._dom.toggle = menuToggleElement;\n    this._dom.parent = parentElement;\n\n    // Set menu elements.\n    this._elements.controlledMenu = controlledMenu;\n    this._elements.parentMenu = parentMenu;\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this._collapse(false);\n  }\n\n  /**\n   * Get the DOM elements within the toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * Get the declared accessible-menu elements within the menu toggle.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * Get the open state on the menu.\n   *\n   * @type {boolean}\n   *\n   * @see _open\n   */\n  get isOpen() {\n    return this._open;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this._open = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuExpand\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  _expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @protected\n   *\n   * @fires accessibleMenuCollapse\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  _collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this._collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this._expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this._collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @protected\n   *\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  _dom = {\n    item: null,\n    link: null,\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n  };\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  _submenu = false;\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Set DOM elements.\n    this._dom.item = menuItemElement;\n    this._dom.link = menuLinkElement;\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n\n    this._submenu = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {Object<HTMLElement>}\n   *\n   * @readonly\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @readonly\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   *\n   * @readonly\n   *\n   * @see _submenu\n   */\n  get isSubmenuItem() {\n    return this._submenu;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n * @return  {string}              - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenu}\n   */\n  _MenuType = BaseMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuItem}\n   */\n  _MenuItemType = BaseMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof BaseMenuToggle}\n   */\n  _MenuToggleType = BaseMenuToggle;\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  _dom = {\n    menu: null,\n    menuItems: [],\n    submenuItems: [],\n    submenuToggles: [],\n    submenus: [],\n    controller: null,\n    container: null,\n  };\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @protected\n   *\n   * @type {Object<string>}\n   *\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  _selectors = {\n    menuItems: \"\",\n    menuLinks: \"\",\n    submenuItems: \"\",\n    submenuToggles: \"\",\n    submenus: \"\",\n  };\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @protected\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  _elements = {\n    menuItems: [],\n    submenuToggles: [],\n    controller: null,\n    parentMenu: null,\n    rootMenu: null,\n  };\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _openClass = \"show\";\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * @protected\n   *\n   * @type {string|string[]}\n   */\n  _closeClass = \"hide\";\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _root = true;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = 0;\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _focusState = \"none\";\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _currentEvent = \"none\";\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * @protected\n   *\n   * @type {string}\n   */\n  _hoverType = \"off\";\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _hoverDelay = 250;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Set DOM elements.\n    this._dom.menu = menuElement;\n    this._dom.controller = controllerElement;\n    this._dom.container = containerElement;\n\n    // Set DOM selectors.\n    this._selectors.menuItems = menuItemSelector;\n    this._selectors.menuLinks = menuLinkSelector;\n    this._selectors.submenuItems = submenuItemSelector;\n    this._selectors.submenuToggles = submenuToggleSelector;\n    this._selectors.submenus = submenuSelector;\n\n    // Set menu elements.\n    this._elements.menuItems = [];\n    this._elements.submenuToggles = [];\n    this._elements.controller = null;\n    this._elements.parentMenu = parentMenu;\n    this._elements.rootMenu = isTopLevel ? this : null;\n\n    // Set open/close classes.\n    this._openClass = openClass || \"\";\n    this._closeClass = closeClass || \"\";\n\n    // Set root.\n    this._root = isTopLevel;\n\n    // Set hover settings.\n    this._hoverType = hoverType;\n    this._hoverDelay = hoverDelay;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this._validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messages for more information.\"\n      );\n    }\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this._findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this._setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this._elements.controller = toggle;\n      }\n    }\n\n    this._createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<HTMLElement, HTMLElement[]>}\n   *\n   * @see _dom\n   */\n  get dom() {\n    return this._dom;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @readonly\n   *\n   * @type {Object<string>}\n   *\n   * @see _selectors\n   */\n  get selectors() {\n    return this._selectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @readonly\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle, BaseMenuItem[], BaseMenuToggle[]>}\n   *\n   * @see _elements\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   * The flag marking the root menu.\n   *\n   * @readonly\n   *\n   * @type {boolean}\n   *\n   * @see _root\n   */\n  get isTopLevel() {\n    return this._root;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _openClass\n   */\n  get openClass() {\n    return this.isTopLevel ? this._openClass : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   *\n   * @see _closeClass\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this._closeClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   *\n   * @see _currentChild\n   */\n  get currentChild() {\n    return this._currentChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   *\n   * @see _focusState\n   */\n  get focusState() {\n    return this._focusState;\n  }\n\n  /**\n   * The last event triggered on the menu.\n   *\n   * @type {string}\n   *\n   * @see _currentEvent\n   */\n  get currentEvent() {\n    return this._currentEvent;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   *\n   * @see _hoverType\n   */\n  get hoverType() {\n    return this._root ? this._hoverType : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   *\n   * @see _hoverDelay\n   */\n  get hoverDelay() {\n    return this._root ? this._hoverDelay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu_hoverTypeType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this._openClass !== value) {\n      this._openClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this._closeClass !== value) {\n      this._closeClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this._currentChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this._currentChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this._currentChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this._focusState !== value) {\n      this._focusState = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this._currentEvent !== value) {\n      this._currentEvent = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this._hoverType !== value) {\n      this._hoverType = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this._hoverDelay !== value) {\n      this._hoverDelay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = true;\n\n    if (this._dom.container !== null || this._dom.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: this._dom.menu,\n          controllerElement: this._dom.controller,\n          containerElement: this._dom.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: this._dom.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (this._selectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: this._selectors.menuItems,\n          menuLinkSelector: this._selectors.menuLinks,\n          submenuItemSelector: this._selectors.submenuItems,\n          submenuToggleSelector: this._selectors.submenuToggles,\n          submenuSelector: this._selectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: this._selectors.menuItems,\n        menuLinkSelector: this._selectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._openClass !== \"\" &&\n      !isValidClassList({ openClass: this._openClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      this._closeClass !== \"\" &&\n      !isValidClassList({ closeClass: this._closeClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: this._root })) {\n      check = false;\n    }\n\n    if (\n      this._elements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: this._elements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: this._hoverType })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: this._hoverDelay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be set through this method.\n   *\n   * @protected\n   *\n   * @param {string}      elementType            - The type of element to populate.\n   * @param {HTMLElement} [base = this.dom.menu] - The element used as the base for the querySelect.\n   * @param {boolean}     [overwrite = true]     - A flag to set if the existing elements will be overwritten.\n   */\n  _setDOMElementType(elementType, base = this.dom.menu, overwrite = true) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be set through _setDOMElementType.`\n        );\n      }\n\n      if (base !== this.dom.menu) isValidInstance(HTMLElement, { base });\n\n      // Get the all elements matching the selector in the base.\n      const domElements = Array.from(\n        base.querySelectorAll(this.selectors[elementType])\n      );\n\n      // Filter the elements so only direct children of the base are kept.\n      const filteredElements = domElements.filter(\n        (item) => item.parentElement === base\n      );\n\n      if (overwrite) {\n        this._dom[elementType] = filteredElements;\n      } else {\n        this._dom[elementType] = [\n          ...this._dom[elementType],\n          ...filteredElements,\n        ];\n      }\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Resets DOM elements within the menu.\n   *\n   * Elements that are not stored inside an array cannot be reset through this method.\n   *\n   * @protected\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  _resetDOMElementType(elementType) {\n    if (typeof this.dom[elementType] !== \"undefined\") {\n      if (!Array.isArray(this.dom[elementType])) {\n        throw new Error(\n          `AccessibleMenu: The \"${elementType}\" element cannot be reset through _resetDOMElementType.`\n        );\n      }\n\n      this._dom[elementType] = [];\n    } else {\n      throw new Error(\n        `AccessibleMenu: \"${elementType}\" is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#_setDOMElementType|_setDOMElementType} and\n   * {@link BaseMenu#_resetDOMElementType|_resetDOMElementType}.\n   *\n   * @protected\n   */\n  _setDOMElements() {\n    this._setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this._setDOMElementType(\"submenuItems\");\n\n      this._resetDOMElementType(\"submenuToggles\");\n      this._resetDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this._setDOMElementType(\"submenuToggles\", item, false);\n        this._setDOMElementType(\"submenus\", item, false);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @protected\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  _findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this._elements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this._findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   *\n   * @protected\n   */\n  _handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds a `pointerdown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `pointerup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `pointerup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   *\n   * @protected\n   */\n  _handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(\n        \"pointerdown\",\n        () => {\n          this.currentEvent = \"mouse\";\n          this.elements.rootMenu.blurChildren();\n          this.focusChild(index);\n        },\n        { passive: true }\n      );\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle.addEventListener(\n          \"pointerup\",\n          (event) => {\n            this.currentEvent = \"mouse\";\n            toggleToggle(this, item.elements.toggle, event);\n          }\n        );\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"pointerup\",\n        (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, this.elements.controller, event);\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#_handleKeyup|_handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Opens the menu when the user hits \"Space\" or \"Enter\".\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link TopLinkDisclosureMenu}.\n *\n * @extends BaseMenuItem\n */\nclass TopLinkDisclosureMenuItem extends BaseMenuItem {\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {Object<BaseMenu, BaseMenuToggle>}\n   *\n   * @protected\n   *\n   * @property {BaseMenu}                   parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}                  childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle}            toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   * @property {?TopLinkDisclosureMenuItem} sibling    - The sibling menu item that is a submenu item.\n   */\n  _elements = {\n    parentMenu: null,\n    childMenu: null,\n    toggle: null,\n    sibling: null,\n  };\n\n  /**\n   * Constructs the menu item.\n   *\n   * @param {object}                           options                         - The options for generating the menu item.\n   * @param {HTMLElement}                      options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                      options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {TopLinkDisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                          [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {TopLinkDisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {TopLinkDisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                          [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   * @param {TopLinkDisclosureMenuItem|null}   [options.submenuSibling = null] - The sibling menu item that controls a submenu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n    submenuSibling = null,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    // Set menu elements.\n    this._elements.parentMenu = parentMenu;\n    this._elements.childMenu = childMenu;\n    this._elements.toggle = toggle;\n    this._elements.sibling = submenuSibling;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TopLinkDisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link TopLinkDisclosureMenu}.\n *\n * @extends BaseMenuToggle\n */\nclass TopLinkDisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * Constructs the menu toggle.\n   *\n   * @param {object}                     options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}                options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}                options.parentElement       - The element containing the controlled menu.\n   * @param {TopLinkDisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {TopLinkDisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                    [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link TopLinkDisclosureMenuToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default TopLinkDisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TopLinkDisclosureMenuItem from \"./topLinkDisclosureMenuItem.js\";\nimport TopLinkDisclosureMenuToggle from \"./topLinkDisclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu with top-level links in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation-hybrid.html#mythical-page-content|Example Disclosure Navigation Menu with Top-Level Links}\n *\n * @extends BaseMenu\n *\n * @example\n * // Import the class.\n * import { TopLinkDisclosureMenu } from \"accessible-menu\";\n *\n * // Select the desired menu element.\n * const menuElement = document.querySelector(\"nav ul\");\n *\n * // Create the menu.\n * const menu = new TopLinkDisclosureMenu({\n *   menuElement,\n * });\n */\nclass TopLinkDisclosureMenu extends BaseMenu {\n  /**\n   * The class to use when generating submenus.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenu}\n   */\n  _MenuType = TopLinkDisclosureMenu;\n\n  /**\n   * The class to use when generating menu items.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenuItem}\n   */\n  _MenuItemType = TopLinkDisclosureMenuItem;\n\n  /**\n   * The class to use when generating submenu toggles.\n   *\n   * @protected\n   *\n   * @type {typeof TopLinkDisclosureMenuToggle}\n   */\n  _MenuToggleType = TopLinkDisclosureMenuToggle;\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * @protected\n   *\n   * @type {number}\n   */\n  _currentChild = -1;\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * @protected\n   *\n   * @type {boolean}\n   */\n  _optionalSupport = false;\n\n  /**\n   * Constructs the menu.\n   *\n   * @param {object}                       options                                          - The options for generating the menu.\n   * @param {HTMLElement}                  options.menuElement                              - The menu element in the DOM.\n   * @param {string}                       [options.menuItemSelector = li]                  - The CSS selector string for menu items.\n   * @param {string}                       [options.menuLinkSelector = a]                   - The CSS selector string for menu links.\n   * @param {string}                       [options.submenuItemSelector]                    - The CSS selector string for menu items containing submenus.\n   * @param {string}                       [options.submenuToggleSelector = button]         - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                       [options.submenuSelector = ul]                   - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}           [options.controllerElement = null]               - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}           [options.containerElement = null]                - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)}       [options.openClass = show]                       - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)}       [options.closeClass = hide]                      - The class to apply when a menu is \"closed\".\n   * @param {boolean}                      [options.isTopLevel = true]                      - A flag to mark the root menu.\n   * @param {(TopLinkDisclosureMenu|null)} [options.parentMenu = null]                      - The parent menu to this menu.\n   * @param {string}                       [options.hoverType = off]                        - The type of hoverability a menu has.\n   * @param {number}                       [options.hoverDelay = 250]                       - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                      [options.optionalKeySupport = false]             - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                      [options.initialize = true]                      - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"button\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set optional key support.\n    this._optionalSupport = optionalKeySupport;\n\n    // Set unique menu link selectors.\n    this._selectors.menuLinks = [\n      ...new Set([menuLinkSelector, submenuToggleSelector]),\n    ].join(\",\");\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link TopLinkDisclosureMenu#_handleFocus|focus},\n   * {@link TopLinkDisclosureMenu#_handleClick|click},\n   * {@link TopLinkDisclosureMenu#_handleHover|hover},\n   * {@link TopLinkDisclosureMenu#_handleKeydown|keydown}, and\n   * {@link TopLinkDisclosureMenu#_handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this._handleFocus();\n      this._handleClick();\n      this._handleHover();\n      this._handleKeydown();\n      this._handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   *\n   * @see _optionalSupport\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this._optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this._optionalSupport = value;\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   *\n   * @protected\n   */\n  _createChildElements() {\n    this.dom.menuItems.forEach((element) => {\n      let menuItem, menuToggleItem;\n      const link = element.querySelector(this.selectors.menuLinks);\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new this._MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new this._MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this._elements.submenuToggles.push(toggle);\n\n        // Create a new menu item specifically for the toggle.\n        menuToggleItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n          submenuSibling: menuToggleItem,\n        });\n      } else {\n        // Create a new menu item.\n        menuItem = new this._MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this._elements.menuItems.push(menuItem);\n\n      if (typeof menuToggleItem !== \"undefined\") {\n        this._elements.menuItems.push(menuToggleItem);\n      }\n    });\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @protected\n   *\n   * @return {boolean} - The result of the validation.\n   */\n  _validate() {\n    let check = super._validate();\n\n    if (\n      !isValidType(\"boolean\", { optionalKeySupport: this._optionalSupport })\n    ) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#_handleClick|BaseMenu's _handleClick method}, and\n   * - adds a `pointerup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   * @protected\n   */\n  _handleClick() {\n    super._handleClick();\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"pointerup\", (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `pointerenter` listeners to all menu items and `pointerleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu_hoverTypeType|hover type}.\n   *\n   * Before executing anything, the event is checked to make sure the event wasn't\n   * triggered by a pen or touch.\n   *\n   * <strong>Hover Type \"on\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `pointerenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `pointerleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu_hoverTypeDelay|hover delay}.\n   *\n   * <strong>Hover Type \"dynamic\"</strong>\n   * - When a `pointerenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `pointerenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `pointerenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `pointerenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `pointerleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `pointerleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * <strong>Hover Type \"off\"</strong>\n   * All `pointerenter` and `pointerleave` events are ignored.\n   *\n   * @protected\n   */\n  _handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"pointerenter\", (event) => {\n        // Exit out of the event if it was not made by a mouse.\n        if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n          return;\n        }\n\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          // Hovering over both the menu item _and_ the toggle item should work.\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          } else if (menuItem.elements.sibling !== null) {\n            menuItem.elements.sibling.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (!this.isTopLevel || isOpen) {\n            this.currentEvent = \"mouse\";\n\n            // Hovering over both the menu item _and_ the toggle item should work.\n            if (menuItem.isSubmenuItem) {\n              menuItem.elements.toggle.preview();\n            } else if (menuItem.elements.sibling !== null) {\n              menuItem.elements.sibling.elements.toggle.preview();\n            }\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"pointerleave\", (event) => {\n          // Exit out of the event if it was not made by a mouse.\n          if (event.pointerType === \"pen\" || event.pointerType === \"touch\") {\n            return;\n          }\n\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link TopLinkDisclosureMenu#_handleKeyup|_handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#_handleKeydown|BaseMenu's _handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link TopLinkDisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   *\n   * @protected\n   */\n  _handleKeydown() {\n    super._handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#_handleKeyup|BaseMenu's _handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link TopLinkDisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   *\n   * @protected\n   */\n  _handleKeyup() {\n    super._handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            event.target.matches(this.selectors.submenuToggles)\n          ) {\n            preventEvent(event);\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default TopLinkDisclosureMenu;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","BaseMenuToggle","constructor","menuToggleElement","parentElement","controlledMenu","parentMenu","toggle","parent","CustomEvent","bubbles","detail","_dom","_elements","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","_collapse","isOpen","_open","_expand","emit","closeClass","openClass","classList","add","remove","dispatchEvent","_expandEvent","_collapseEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","_submenu","focus","shouldFocus","keyPress","event","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","menuLinks","rootMenu","_selectors","_openClass","_closeClass","_root","_hoverType","_hoverDelay","_validate","_findRootMenu","_setDOMElements","_MenuToggleType","_createChildElements","selectors","_currentChild","_focusState","currentEvent","_currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","_setDOMElementType","base","overwrite","domElements","from","querySelectorAll","filteredElements","filter","_resetDOMElementType","element","toggler","submenu","_MenuType","push","_MenuItemType","_handleFocus","addEventListener","_handleClick","toggleToggle","blurChildren","passive","_handleHover","pointerType","some","focusCurrentChild","setTimeout","_handleKeydown","_handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","TopLinkDisclosureMenuItem","submenuSibling","sibling","TopLinkDisclosureMenuToggle","TopLinkDisclosureMenu","optionalKeySupport","_optionalSupport","Set","menuToggleItem","contains","target","submenuKeys","controllerKeys","parentKeys","matches","click","hasOpenChild"],"mappings":"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"}